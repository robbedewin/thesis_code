Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000216 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518382, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 231, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (453.36, 485.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1438, 2382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1227.83, 691.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 405.991 CPU sec, 60.464 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518268, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 426, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5740)
[0000][PE] mean and std.dev: (1146.47, 1316.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1472, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (1425.50, 602.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 402.157 CPU sec, 54.106 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518501, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 379, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2506)
[0000][PE] mean and std.dev: (498.40, 454.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1320, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1498.08, 527.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 398.184 CPU sec, 48.882 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518583, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 467, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (983.60, 1112.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1398, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7771)
[0000][PE] mean and std.dev: (2106.36, 1499.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 393.828 CPU sec, 52.374 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518947, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 334, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2214)
[0000][PE] mean and std.dev: (474.72, 484.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 388.076 CPU sec, 48.636 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518982, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 298, 697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1647)
[0000][PE] mean and std.dev: (453.41, 434.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1485, 2796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6226)
[0000][PE] mean and std.dev: (1635.29, 903.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 383.093 CPU sec, 41.464 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518703, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 470, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5773)
[0000][PE] mean and std.dev: (1103.55, 1357.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1777, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1611.30, 899.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 390.158 CPU sec, 47.830 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518057, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 364, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1000.36, 1159.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 2171, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7082)
[0000][PE] mean and std.dev: (2016.75, 1377.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 386.097 CPU sec, 53.819 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 518802, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 489, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (759.69, 708.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1749, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1576.17, 745.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 387.974 CPU sec, 59.550 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518392, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 457, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4925)
[0000][PE] mean and std.dev: (1031.24, 1101.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.60, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1466, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1449.75, 364.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 381.543 CPU sec, 58.505 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518314, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1184, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (969.68, 655.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1509, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6124)
[0000][PE] mean and std.dev: (1961.42, 1462.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 385.035 CPU sec, 56.064 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518425, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 460, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (828.64, 849.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1432, 2960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7110)
[0000][PE] mean and std.dev: (1876.19, 1359.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 383.075 CPU sec, 54.014 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518115, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 341, 535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1241)
[0000][PE] mean and std.dev: (398.00, 293.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1464, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (1397.27, 475.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 386.915 CPU sec, 54.325 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518568, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 968, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (938.63, 856.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.62, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1424, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1885.73, 985.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 389.272 CPU sec, 53.718 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518691, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 321, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (682.00, 658.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1383, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (1761.82, 899.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 382.911 CPU sec, 54.600 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519200, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 1021, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1372.72, 1305.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1570, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6417)
[0000][PE] mean and std.dev: (1806.62, 1118.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 384.296 CPU sec, 58.662 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518620, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 421, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (621.94, 589.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1386, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (1286.33, 335.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 382.387 CPU sec, 57.449 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518150, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 781, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (958.63, 878.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 2185, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6971)
[0000][PE] mean and std.dev: (2625.56, 1590.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 390.150 CPU sec, 53.488 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 518783, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 394, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (569.90, 588.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.02, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1385, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6518)
[0000][PE] mean and std.dev: (2006.28, 1568.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 381.761 CPU sec, 55.359 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518567, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 644, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (929.78, 780.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1749, 2178, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (2408.93, 1404.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 384.024 CPU sec, 56.745 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518609, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 572, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (769.10, 750.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1228, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1241.74, 639.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 381.976 CPU sec, 56.015 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205806
	[0000][ M::kt_pipeline] read 1205806 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518860, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 351, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (853.39, 999.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.34, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 383.344 CPU sec, 61.369 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205806
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517717, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 377, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6716)
[0000][PE] mean and std.dev: (1281.54, 1562.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1415, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (401, 2586)
[0000][PE] mean and std.dev: (1341.75, 377.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205806 reads in 389.858 CPU sec, 64.571 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518547, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 394, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (628.05, 563.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 386.938 CPU sec, 60.793 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518315, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 401, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (696.05, 644.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1959, 3935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9251)
[0000][PE] mean and std.dev: (2642.65, 2365.14)
[0000][PE] low and high boundaries for proper pairs: (1, 12103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 385.225 CPU sec, 58.143 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518160, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 332, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (644.76, 593.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.02, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1680, 3290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7966)
[0000][PE] mean and std.dev: (1980.44, 1380.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 386.179 CPU sec, 58.555 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518519, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 489, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (854.33, 782.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1474, 3803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9389)
[0000][PE] mean and std.dev: (2181.90, 1531.59)
[0000][PE] low and high boundaries for proper pairs: (1, 12182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 386.026 CPU sec, 55.786 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518519, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 721, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (808.67, 728.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1840, 2556, 3364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6412)
[0000][PE] mean and std.dev: (2507.75, 1140.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 388.426 CPU sec, 61.171 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518449, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 319, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2136)
[0000][PE] mean and std.dev: (409.32, 325.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 1507, 2374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1648.50, 989.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 384.845 CPU sec, 55.209 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518576, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 420, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (661.57, 690.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (897, 1989, 3363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8295)
[0000][PE] mean and std.dev: (2374.00, 2026.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10761)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1459, 3657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8855)
[0000][PE] mean and std.dev: (2356.92, 1915.27)
[0000][PE] low and high boundaries for proper pairs: (1, 11454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 385.334 CPU sec, 58.802 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518531, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 713, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (852.05, 758.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1905, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5190)
[0000][PE] mean and std.dev: (1642.20, 851.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 381.976 CPU sec, 59.234 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518684, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 423, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (844.67, 922.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1512, 2111, 3258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6750)
[0000][PE] mean and std.dev: (2246.90, 1311.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 382.516 CPU sec, 68.266 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518738, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 350, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (800.32, 800.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.27, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1604, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1510.20, 609.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 387.999 CPU sec, 70.370 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518430, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 495, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (655.93, 524.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (469.09, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1026, 2702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6674)
[0000][PE] mean and std.dev: (1946.69, 1947.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 391.078 CPU sec, 74.552 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518718, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 299, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (754.05, 915.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1563, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6463)
[0000][PE] mean and std.dev: (1846.86, 1347.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 389.590 CPU sec, 71.177 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518666, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 285, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2266)
[0000][PE] mean and std.dev: (560.15, 579.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1257, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (79, 2299)
[0000][PE] mean and std.dev: (1139.93, 348.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 390.918 CPU sec, 66.095 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518837, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 283, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (930.45, 1073.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1500, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5114)
[0000][PE] mean and std.dev: (1528.85, 613.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 385.452 CPU sec, 59.202 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205726
	[0000][ M::kt_pipeline] read 1205726 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518694, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 335, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (693.52, 701.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1605, 2499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1707.18, 868.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 384.189 CPU sec, 46.754 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205726
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518464, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 805, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1004.89, 919.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1322, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6231)
[0000][PE] mean and std.dev: (1995.33, 1307.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205726 reads in 386.399 CPU sec, 50.887 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518603, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 374, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (693.36, 743.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1340, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8364)
[0000][PE] mean and std.dev: (1952.00, 1786.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 385.898 CPU sec, 47.047 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519050, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 335, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (762.75, 708.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1347, 1895, 3731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8499)
[0000][PE] mean and std.dev: (2348.53, 1579.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 382.973 CPU sec, 47.716 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517955, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 348, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (755.42, 854.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1838, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6517)
[0000][PE] mean and std.dev: (1961.12, 1412.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 389.082 CPU sec, 51.238 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518201, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 257, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (971.67, 1210.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1658, 5064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12428)
[0000][PE] mean and std.dev: (2638.33, 2175.43)
[0000][PE] low and high boundaries for proper pairs: (1, 16110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 385.169 CPU sec, 57.449 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518547, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 341, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (505.65, 469.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1447, 1905, 4480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10546)
[0000][PE] mean and std.dev: (2497.73, 1585.14)
[0000][PE] low and high boundaries for proper pairs: (1, 13579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 385.984 CPU sec, 55.740 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519011, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 320, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1745)
[0000][PE] mean and std.dev: (434.83, 371.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1314, 1951, 2614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1905.00, 1100.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6514)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 389.060 CPU sec, 61.566 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518405, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 346, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (588.32, 537.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1466, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5115)
[0000][PE] mean and std.dev: (1775.50, 1110.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 387.217 CPU sec, 64.501 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518884, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 309, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2672)
[0000][PE] mean and std.dev: (545.43, 538.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1508, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7026)
[0000][PE] mean and std.dev: (1691.23, 1037.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 388.603 CPU sec, 62.525 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518924, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 436, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6372)
[0000][PE] mean and std.dev: (791.76, 961.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.45, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1493, 1666, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (1852.89, 658.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 385.707 CPU sec, 61.276 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518798, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 296, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1175)
[0000][PE] mean and std.dev: (365.48, 230.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1605, 3322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8012)
[0000][PE] mean and std.dev: (1899.69, 1215.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 389.182 CPU sec, 64.962 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518833, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 260, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (825.69, 1024.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1673, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5291)
[0000][PE] mean and std.dev: (2185.72, 1264.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 386.855 CPU sec, 58.816 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518539, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 245, 647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (294.67, 236.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.31, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1881, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1860.89, 1017.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 383.689 CPU sec, 56.496 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518932, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 801, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (871.03, 706.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1451, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1625.55, 755.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 387.779 CPU sec, 62.389 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519056, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 950, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1112.79, 1135.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1002, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1333.38, 950.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 385.092 CPU sec, 63.017 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518696, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1000, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1026.86, 927.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (547, 1044, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1162.50, 707.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 388.871 CPU sec, 61.374 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518709, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 564, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (749.22, 693.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1359, 3613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8963)
[0000][PE] mean and std.dev: (2201.81, 1863.82)
[0000][PE] low and high boundaries for proper pairs: (1, 11638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 386.369 CPU sec, 62.287 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518558, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 383, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (725.15, 787.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 2175, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6496)
[0000][PE] mean and std.dev: (2225.07, 1693.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 386.601 CPU sec, 58.205 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519114, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 317, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (785.80, 840.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 383.079 CPU sec, 62.388 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518605, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 440, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2479)
[0000][PE] mean and std.dev: (507.36, 362.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1609, 2204, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (1614.50, 787.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 385.325 CPU sec, 58.090 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518677, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1095, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1075.62, 918.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1430, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1485.79, 746.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 387.272 CPU sec, 63.642 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518238, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 346, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (689.29, 757.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.95, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1358, 2632, 3808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8708)
[0000][PE] mean and std.dev: (2567.15, 1358.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 388.832 CPU sec, 67.053 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518344, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 210, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 772)
[0000][PE] mean and std.dev: (198.52, 120.81)
[0000][PE] low and high boundaries for proper pairs: (1, 983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1360, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (1368.29, 458.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 387.872 CPU sec, 67.130 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518603, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 342, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5097)
[0000][PE] mean and std.dev: (686.18, 835.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1481, 3847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9333)
[0000][PE] mean and std.dev: (2348.94, 1732.52)
[0000][PE] low and high boundaries for proper pairs: (1, 12076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 387.497 CPU sec, 60.694 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518735, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 389, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3202)
[0000][PE] mean and std.dev: (693.23, 629.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1610, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1560.56, 537.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 384.192 CPU sec, 55.694 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518325, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 480, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (637.69, 505.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1203, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1501.00, 1101.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 385.291 CPU sec, 52.931 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518634, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 419, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (736.54, 799.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1578, 2494, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (2390.20, 800.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 387.615 CPU sec, 62.538 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518146, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 358, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (723.36, 776.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1455, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4429)
[0000][PE] mean and std.dev: (1573.94, 868.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 392.521 CPU sec, 64.065 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518624, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 298, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (747.86, 829.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1145, 1923, 2893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6389)
[0000][PE] mean and std.dev: (1951.58, 1196.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 385.778 CPU sec, 69.815 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518429, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 354, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (661.00, 799.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1759, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1790.25, 1159.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 384.809 CPU sec, 60.628 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518752, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 344, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (627.43, 654.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1335, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (1242.00, 597.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 386.214 CPU sec, 59.880 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518184, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 308, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (453.26, 542.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.60, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 391.051 CPU sec, 61.862 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518122, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 823, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (1084.20, 1014.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1174, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6281)
[0000][PE] mean and std.dev: (1666.14, 1294.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 387.830 CPU sec, 55.450 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518270, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 329, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5972)
[0000][PE] mean and std.dev: (1207.90, 1399.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1440, 1657, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1748.44, 645.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 386.209 CPU sec, 65.985 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518464, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 539, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4086)
[0000][PE] mean and std.dev: (904.15, 922.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1292, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1655.11, 1214.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 385.456 CPU sec, 59.940 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518535, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 332, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (409.64, 341.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1392, 1948, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5427)
[0000][PE] mean and std.dev: (1898.62, 905.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 390.154 CPU sec, 57.016 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518622, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 578, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (815.86, 729.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1923, 4547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11395)
[0000][PE] mean and std.dev: (2857.24, 2397.97)
[0000][PE] low and high boundaries for proper pairs: (1, 14819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 386.431 CPU sec, 64.326 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518573, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 363, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2560)
[0000][PE] mean and std.dev: (607.11, 605.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1346, 3247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8099)
[0000][PE] mean and std.dev: (1975.47, 1516.41)
[0000][PE] low and high boundaries for proper pairs: (1, 10525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 384.532 CPU sec, 58.594 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518319, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 553, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5458)
[0000][PE] mean and std.dev: (1100.88, 1349.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1058, 2082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1300.65, 995.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 387.536 CPU sec, 58.522 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518790, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 400, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (854.20, 850.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1703, 4030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10450)
[0000][PE] mean and std.dev: (2484.33, 2280.10)
[0000][PE] low and high boundaries for proper pairs: (1, 13660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 384.868 CPU sec, 54.564 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518674, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 939, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5024)
[0000][PE] mean and std.dev: (1206.54, 1062.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1972, 4258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11072)
[0000][PE] mean and std.dev: (2281.08, 1842.21)
[0000][PE] low and high boundaries for proper pairs: (1, 14479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 386.672 CPU sec, 62.355 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518916, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 376, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2789)
[0000][PE] mean and std.dev: (739.75, 770.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.04, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 387.237 CPU sec, 56.106 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518638, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 411, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (603.50, 548.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1517, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3646)
[0000][PE] mean and std.dev: (1318.79, 734.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 388.501 CPU sec, 63.160 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205816
	[0000][ M::kt_pipeline] read 1205816 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (45, 518430, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 283, 628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (360.65, 283.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1273, 1704, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (1676.59, 744.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 390.605 CPU sec, 61.722 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205816
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518473, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 342, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (776.22, 907.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1221, 1499, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1614.84, 942.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205816 reads in 390.676 CPU sec, 62.158 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519024, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 406, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (663.69, 705.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1731, 2557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1905.58, 1165.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 385.678 CPU sec, 60.325 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518380, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 341, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (809.31, 899.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1315, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6403)
[0000][PE] mean and std.dev: (1964.53, 1425.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 386.857 CPU sec, 62.577 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518543, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 466, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (828.37, 725.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1451, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4223)
[0000][PE] mean and std.dev: (1595.65, 844.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 390.870 CPU sec, 67.204 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205460
	[0000][ M::kt_pipeline] read 1205460 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518486, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 357, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2040)
[0000][PE] mean and std.dev: (414.91, 335.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1432, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1248.60, 703.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 383.420 CPU sec, 50.211 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518278, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 322, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1471)
[0000][PE] mean and std.dev: (347.11, 303.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2164, 2447, 4838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10186)
[0000][PE] mean and std.dev: (3137.08, 1625.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205460 reads in 385.888 CPU sec, 54.851 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518450, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 299, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (870.44, 1161.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1940, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1737.75, 963.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 385.282 CPU sec, 61.958 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518910, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 372, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1963)
[0000][PE] mean and std.dev: (455.57, 366.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1112, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (1305.77, 649.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 388.488 CPU sec, 61.672 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518736, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 442, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (776.64, 783.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1246, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1275.17, 788.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 387.730 CPU sec, 58.775 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518453, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 348, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (747.39, 764.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1396, 2395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1650.42, 1069.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 390.048 CPU sec, 59.291 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518432, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 371, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (799.71, 893.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 1161, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1241.73, 851.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 389.355 CPU sec, 61.194 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 518826, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 351, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2626)
[0000][PE] mean and std.dev: (468.33, 420.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1426, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (1340.06, 550.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 386.368 CPU sec, 59.136 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518542, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 540, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (882.53, 825.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (164, 1229, 5789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17039)
[0000][PE] mean and std.dev: (2397.50, 2678.81)
[0000][PE] low and high boundaries for proper pairs: (1, 22664)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1586, 1745, 3325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6803)
[0000][PE] mean and std.dev: (2422.20, 1460.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 389.906 CPU sec, 62.733 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518815, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 269, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1875)
[0000][PE] mean and std.dev: (395.57, 329.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.31, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 2039, 6690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17876)
[0000][PE] mean and std.dev: (3292.76, 2603.08)
[0000][PE] low and high boundaries for proper pairs: (1, 23469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 386.172 CPU sec, 58.220 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519106, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 329, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (472.92, 429.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1266, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8538)
[0000][PE] mean and std.dev: (2198.69, 2061.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 387.376 CPU sec, 61.908 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518758, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 346, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (527.92, 559.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 902, 3511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8999)
[0000][PE] mean and std.dev: (2280.67, 2741.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 384.507 CPU sec, 60.548 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518591, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 540, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (648.27, 548.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 2026, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7705)
[0000][PE] mean and std.dev: (2204.39, 1323.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 390.086 CPU sec, 64.498 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518510, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 423, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (877.45, 879.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5691)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1656, 3215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7447)
[0000][PE] mean and std.dev: (1969.05, 1346.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 385.258 CPU sec, 68.341 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518304, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 344, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (468.16, 474.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1163, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1394.50, 753.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 387.074 CPU sec, 63.694 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 518676, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 912, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7860)
[0000][PE] mean and std.dev: (1491.07, 1576.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1415, 2005, 4198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9764)
[0000][PE] mean and std.dev: (2544.55, 1501.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 387.306 CPU sec, 58.192 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518005, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 349, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (786.00, 1056.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1336, 3367, 5007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12349)
[0000][PE] mean and std.dev: (3254.89, 2379.24)
[0000][PE] low and high boundaries for proper pairs: (1, 16020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 387.683 CPU sec, 57.869 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518718, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 883, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (949.62, 831.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1438, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (1529.00, 754.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 388.201 CPU sec, 57.765 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518213, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 960, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6286)
[0000][PE] mean and std.dev: (1284.74, 1326.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 2022, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1588.36, 828.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 389.591 CPU sec, 63.872 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519080, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 335, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (657.33, 733.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1606, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5705)
[0000][PE] mean and std.dev: (1737.71, 1173.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 385.361 CPU sec, 60.436 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518411, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 500, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (728.38, 581.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1516, 2752, 5309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12895)
[0000][PE] mean and std.dev: (3054.00, 2200.03)
[0000][PE] low and high boundaries for proper pairs: (1, 16688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 389.015 CPU sec, 61.538 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518731, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 811, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5414)
[0000][PE] mean and std.dev: (1149.66, 1267.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.41, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1252, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1265.56, 574.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 386.978 CPU sec, 63.660 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518765, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 371, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (749.92, 705.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1327, 1682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (1186.71, 529.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 387.724 CPU sec, 62.646 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518164, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 356, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3074)
[0000][PE] mean and std.dev: (671.69, 718.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1557, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1443.80, 732.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 388.201 CPU sec, 62.031 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518454, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 865, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (919.68, 731.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1160, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6674)
[0000][PE] mean and std.dev: (1503.53, 1392.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 384.308 CPU sec, 56.189 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205846
	[0000][ M::kt_pipeline] read 1205846 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518589, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 336, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (531.92, 529.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1563, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1877.11, 892.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 382.553 CPU sec, 55.620 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205846
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518409, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 564, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (688.11, 507.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1649, 2267, 3112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6038)
[0000][PE] mean and std.dev: (2110.30, 924.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205846 reads in 383.777 CPU sec, 52.050 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518644, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 284, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (696.74, 883.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1395, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (1593.14, 987.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 380.857 CPU sec, 51.107 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518940, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 544, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4500)
[0000][PE] mean and std.dev: (927.73, 747.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 2203, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (2018.14, 1133.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 384.480 CPU sec, 57.995 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 517928, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 366, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1717)
[0000][PE] mean and std.dev: (432.29, 420.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.43, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1984, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5432)
[0000][PE] mean and std.dev: (1936.75, 1102.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 386.313 CPU sec, 62.733 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518500, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 1193, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4962)
[0000][PE] mean and std.dev: (1285.41, 1320.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1617, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1578.78, 787.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 385.410 CPU sec, 57.241 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518789, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 527, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (902.42, 883.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1410, 2516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1597.00, 791.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 383.276 CPU sec, 52.495 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518690, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 306, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1637)
[0000][PE] mean and std.dev: (342.91, 272.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1156, 1391, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1572.00, 724.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 387.577 CPU sec, 55.949 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518436, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 387, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (741.64, 648.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1541, 3498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7994)
[0000][PE] mean and std.dev: (2221.23, 1355.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 383.223 CPU sec, 57.756 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518883, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 291, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (475.14, 572.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1620, 3636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8328)
[0000][PE] mean and std.dev: (2080.76, 1348.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 383.531 CPU sec, 50.522 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518535, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 316, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (682.30, 688.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.64, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 2035, 3375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8211)
[0000][PE] mean and std.dev: (2347.82, 1567.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 378.926 CPU sec, 53.540 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518335, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 249, 577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1411)
[0000][PE] mean and std.dev: (340.73, 316.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1219, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (1246.08, 470.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 384.272 CPU sec, 56.994 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518473, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 516, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6117)
[0000][PE] mean and std.dev: (1094.54, 1289.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.41, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1467, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1440.67, 731.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 380.292 CPU sec, 58.146 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518741, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 446, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4623)
[0000][PE] mean and std.dev: (875.04, 1083.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.86, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1455, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5808)
[0000][PE] mean and std.dev: (1652.42, 1086.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 383.385 CPU sec, 51.955 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519176, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 453, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (605.76, 522.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (534, 1191, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2799)
[0000][PE] mean and std.dev: (1050.60, 597.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 381.521 CPU sec, 51.692 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518439, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 507, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4547)
[0000][PE] mean and std.dev: (1005.58, 1112.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1260, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (1437.93, 551.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 385.451 CPU sec, 55.343 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518133, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 505, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (892.96, 952.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1572, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7893)
[0000][PE] mean and std.dev: (1913.30, 1311.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 379.896 CPU sec, 56.082 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518952, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 348, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3116)
[0000][PE] mean and std.dev: (653.88, 780.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.97, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 2041, 3937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9513)
[0000][PE] mean and std.dev: (2420.80, 1655.79)
[0000][PE] low and high boundaries for proper pairs: (1, 12301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 383.370 CPU sec, 53.712 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518351, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 428, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (667.54, 684.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1548, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (1687.86, 856.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 383.345 CPU sec, 59.271 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205834
	[0000][ M::kt_pipeline] read 1205834 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518588, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 317, 813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2093)
[0000][PE] mean and std.dev: (433.85, 436.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1368, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (1834.65, 1087.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 380.960 CPU sec, 55.788 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205834
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518796, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 334, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (647.52, 667.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1386, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (1574.80, 743.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205834 reads in 379.061 CPU sec, 50.624 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519450, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 704, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (787.84, 685.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1412, 4395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10963)
[0000][PE] mean and std.dev: (2666.53, 2481.23)
[0000][PE] low and high boundaries for proper pairs: (1, 14247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 377.833 CPU sec, 52.643 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518656, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 319, 351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 769)
[0000][PE] mean and std.dev: (244.83, 120.17)
[0000][PE] low and high boundaries for proper pairs: (1, 978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1785, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1903.61, 1235.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 383.340 CPU sec, 49.415 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518833, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 984, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (879.04, 764.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1754, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5917)
[0000][PE] mean and std.dev: (1683.65, 988.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 382.183 CPU sec, 58.164 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518658, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 947, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4287)
[0000][PE] mean and std.dev: (951.38, 963.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.34, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1467, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1469.58, 745.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 383.716 CPU sec, 56.419 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518578, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (131, 738, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6527)
[0000][PE] mean and std.dev: (1222.37, 1399.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1409, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1464.17, 700.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 385.924 CPU sec, 57.352 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518528, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 437, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6214)
[0000][PE] mean and std.dev: (1200.62, 1561.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.34, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1967, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6359)
[0000][PE] mean and std.dev: (2060.59, 967.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 382.029 CPU sec, 54.968 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518363, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 513, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (755.57, 626.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1196, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (1250.83, 616.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 383.826 CPU sec, 51.625 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518007, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 283, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (574.62, 610.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 2122, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6464)
[0000][PE] mean and std.dev: (2369.91, 1607.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 386.096 CPU sec, 56.249 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518835, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 331, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1084.68, 1386.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1435, 3796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9524)
[0000][PE] mean and std.dev: (1916.27, 1663.99)
[0000][PE] low and high boundaries for proper pairs: (1, 12388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 383.121 CPU sec, 53.565 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518728, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 245, 866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (557.38, 561.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (92, 675, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (543.44, 492.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1747, 3142, 3471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6919)
[0000][PE] mean and std.dev: (2719.95, 1160.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 385.365 CPU sec, 54.425 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518382, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 376, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (874.67, 942.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1667, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1691.79, 1217.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 383.399 CPU sec, 52.468 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518695, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 356, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (912.48, 961.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.33, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1216, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1311.81, 768.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 383.282 CPU sec, 57.286 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518568, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 420, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (684.36, 650.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1175, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (1317.09, 732.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 385.186 CPU sec, 55.254 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518533, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 384, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (769.68, 855.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 2009, 3232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7476)
[0000][PE] mean and std.dev: (2371.14, 1862.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 385.401 CPU sec, 58.703 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519048, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 736, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (911.90, 813.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1478, 4374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10770)
[0000][PE] mean and std.dev: (2251.50, 1698.74)
[0000][PE] low and high boundaries for proper pairs: (1, 13968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 384.336 CPU sec, 55.487 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519026, 7, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 464, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6921)
[0000][PE] mean and std.dev: (1039.60, 1102.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 385.003 CPU sec, 55.394 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518592, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 407, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (428.70, 385.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1350, 1909, 2715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5445)
[0000][PE] mean and std.dev: (2208.75, 1287.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 380.786 CPU sec, 51.478 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518378, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 297, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4019)
[0000][PE] mean and std.dev: (637.15, 626.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1436, 2000, 3022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (2072.62, 1208.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 377.987 CPU sec, 55.624 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518190, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 420, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (876.53, 933.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1397, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (1570.17, 746.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 386.129 CPU sec, 54.986 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517888, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 381, 775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1945)
[0000][PE] mean and std.dev: (397.77, 288.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1624, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (425, 2685)
[0000][PE] mean and std.dev: (1305.89, 461.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 384.846 CPU sec, 54.027 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518691, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 357, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6343)
[0000][PE] mean and std.dev: (1326.00, 1503.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.00, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1281, 2262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (1375.07, 730.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 386.570 CPU sec, 53.332 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518387, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 499, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2733)
[0000][PE] mean and std.dev: (513.79, 356.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1356, 1876, 2913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1918.37, 1077.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 387.044 CPU sec, 61.736 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518642, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 296, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1426)
[0000][PE] mean and std.dev: (362.75, 305.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 384.238 CPU sec, 56.980 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518743, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 378, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (805.90, 903.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.25, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 2806, 4402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11622)
[0000][PE] mean and std.dev: (2908.88, 2684.54)
[0000][PE] low and high boundaries for proper pairs: (1, 15232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 382.647 CPU sec, 50.864 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518698, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 403, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (886.57, 936.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1641, 2827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6261)
[0000][PE] mean and std.dev: (1599.78, 660.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 379.834 CPU sec, 48.480 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518688, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 805, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (988.76, 886.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1258, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (1236.44, 582.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 381.326 CPU sec, 57.092 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518476, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 312, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (672.00, 722.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1642, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3688)
[0000][PE] mean and std.dev: (1517.62, 568.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 380.676 CPU sec, 53.757 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518651, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 382, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (781.77, 934.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.30, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1917, 2786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6502)
[0000][PE] mean and std.dev: (1832.96, 1156.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 381.699 CPU sec, 52.521 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518081, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 775, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1158.35, 1268.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1182, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (1649.96, 1016.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 384.963 CPU sec, 52.332 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518047, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 515, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5108)
[0000][PE] mean and std.dev: (1001.83, 1081.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.37, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (152, 1416, 4129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12083)
[0000][PE] mean and std.dev: (2349.40, 2651.59)
[0000][PE] low and high boundaries for proper pairs: (1, 16060)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1440, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1339.36, 450.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 387.475 CPU sec, 50.945 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518469, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 286, 705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (380.34, 328.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1146, 2968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7320)
[0000][PE] mean and std.dev: (1743.35, 1628.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 385.263 CPU sec, 53.478 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518689, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 377, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (584.50, 473.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.77, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 1613, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1918.18, 1023.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 378.849 CPU sec, 53.104 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518991, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 449, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3204)
[0000][PE] mean and std.dev: (677.46, 555.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1357, 3069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7787)
[0000][PE] mean and std.dev: (1995.30, 1795.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 382.073 CPU sec, 52.918 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205820
	[0000][ M::kt_pipeline] read 1205820 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518544, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1210, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1235.65, 1017.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 1562, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (286, 3331)
[0000][PE] mean and std.dev: (1437.89, 519.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 379.462 CPU sec, 55.275 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205820
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518779, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 602, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (968.57, 1033.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1475, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1442.18, 805.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205820 reads in 383.527 CPU sec, 53.619 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 518509, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 331, 716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1716)
[0000][PE] mean and std.dev: (389.20, 318.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1616, 1823, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (944, 2624)
[0000][PE] mean and std.dev: (1708.60, 286.95)
[0000][PE] low and high boundaries for proper pairs: (561, 2960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 382.903 CPU sec, 56.873 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518526, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 349, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1094.08, 1255.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1189, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1346.69, 1144.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 382.855 CPU sec, 56.664 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519031, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 310, 904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2328)
[0000][PE] mean and std.dev: (512.59, 439.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1620, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1578.83, 782.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 376.614 CPU sec, 52.179 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518741, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 224, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2187)
[0000][PE] mean and std.dev: (384.27, 421.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1644, 4972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12582)
[0000][PE] mean and std.dev: (2552.33, 2117.80)
[0000][PE] low and high boundaries for proper pairs: (1, 16387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 386.736 CPU sec, 52.757 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517935, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 316, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (633.35, 873.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1109, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (989.35, 315.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 385.327 CPU sec, 55.086 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518707, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 335, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2512)
[0000][PE] mean and std.dev: (519.16, 490.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1158, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6210)
[0000][PE] mean and std.dev: (1625.47, 1231.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8032)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 381.900 CPU sec, 50.316 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518782, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 788, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3919)
[0000][PE] mean and std.dev: (705.14, 513.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1447, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1670.58, 1053.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 381.719 CPU sec, 51.352 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518616, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 334, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (494.20, 614.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1324, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1582.44, 959.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 385.675 CPU sec, 56.601 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518423, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 324, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (584.10, 537.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1301, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1579.33, 1101.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 383.218 CPU sec, 54.891 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518507, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 325, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2162)
[0000][PE] mean and std.dev: (509.79, 499.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1355, 1914, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5735)
[0000][PE] mean and std.dev: (1925.59, 976.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 386.160 CPU sec, 51.991 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518669, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 383, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (720.76, 619.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1334, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1198.11, 523.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 379.493 CPU sec, 55.256 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518896, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 508, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (877.57, 817.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1556, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6946)
[0000][PE] mean and std.dev: (1739.88, 1206.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8921)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 385.734 CPU sec, 51.317 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518240, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 263, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (628.54, 643.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.55, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1489, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4152)
[0000][PE] mean and std.dev: (1522.30, 784.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 386.248 CPU sec, 50.270 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518005, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 335, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (911.12, 1102.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1338, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1540.12, 688.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 385.823 CPU sec, 57.068 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518646, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 362, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (777.18, 781.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.27, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1703, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1781.67, 862.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 380.020 CPU sec, 56.046 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518582, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 383, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (590.86, 555.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1558, 2283, 5685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13939)
[0000][PE] mean and std.dev: (3286.42, 2714.96)
[0000][PE] low and high boundaries for proper pairs: (1, 18066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 379.053 CPU sec, 53.254 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517992, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 362, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5045)
[0000][PE] mean and std.dev: (790.57, 1006.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1335, 2843, 3810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8760)
[0000][PE] mean and std.dev: (2450.30, 1295.78)
[0000][PE] low and high boundaries for proper pairs: (1, 11235)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 2402, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (2215.38, 985.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 382.552 CPU sec, 51.447 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518436, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 647, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (759.32, 662.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1384, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3358)
[0000][PE] mean and std.dev: (1348.65, 767.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 378.581 CPU sec, 59.102 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518454, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 522, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (997.74, 913.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1659, 3027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7013)
[0000][PE] mean and std.dev: (1871.12, 1153.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 386.837 CPU sec, 58.231 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518902, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 262, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (426.00, 430.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1495, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5665)
[0000][PE] mean and std.dev: (1773.13, 1044.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 381.363 CPU sec, 56.703 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518363, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 251, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7754)
[0000][PE] mean and std.dev: (1393.00, 1992.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1400, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (1413.38, 901.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 379.434 CPU sec, 50.738 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518247, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 318, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1113.20, 1250.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.94, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1124, 3170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7750)
[0000][PE] mean and std.dev: (1949.33, 1814.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 386.452 CPU sec, 52.037 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518599, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 340, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2319)
[0000][PE] mean and std.dev: (380.63, 295.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1701, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1683.20, 1201.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 384.671 CPU sec, 49.215 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518902, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 485, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1072.18, 1169.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.23, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1040, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1256.59, 587.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 382.100 CPU sec, 52.344 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518890, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 492, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2279)
[0000][PE] mean and std.dev: (597.76, 485.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 2074, 3814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9096)
[0000][PE] mean and std.dev: (2250.41, 1294.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11737)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 383.397 CPU sec, 54.730 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518625, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 259, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (524.91, 544.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1381, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1923.89, 1423.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 387.792 CPU sec, 58.209 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518721, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 345, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3231)
[0000][PE] mean and std.dev: (716.92, 735.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.33, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (64, 3942, 5485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16327)
[0000][PE] mean and std.dev: (3160.10, 3081.97)
[0000][PE] low and high boundaries for proper pairs: (1, 21748)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1396, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1362.83, 435.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 384.500 CPU sec, 57.670 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518513, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 794, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (961.41, 923.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1111, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1257.64, 740.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 385.567 CPU sec, 58.554 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518264, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 413, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (885.64, 836.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1734, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6196)
[0000][PE] mean and std.dev: (2100.35, 1223.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 384.856 CPU sec, 55.364 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518599, 5, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 488, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (850.26, 895.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 384.064 CPU sec, 58.903 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518608, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 538, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (901.56, 845.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1134, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1017.19, 605.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 382.914 CPU sec, 51.260 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518851, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 292, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1280)
[0000][PE] mean and std.dev: (306.53, 228.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1374, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1714.33, 682.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 382.703 CPU sec, 50.246 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518274, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 1233, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1268.65, 1016.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1286, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1342.17, 652.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 384.501 CPU sec, 64.120 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205456
	[0000][ M::kt_pipeline] read 1205456 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518873, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 645, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6075)
[0000][PE] mean and std.dev: (1288.75, 1454.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1422, 2031, 5159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12633)
[0000][PE] mean and std.dev: (3133.87, 2302.77)
[0000][PE] low and high boundaries for proper pairs: (1, 16370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 381.388 CPU sec, 51.907 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518717, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 512, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (887.95, 969.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.55, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (31, 2453, 4249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12685)
[0000][PE] mean and std.dev: (2210.00, 2012.86)
[0000][PE] low and high boundaries for proper pairs: (1, 16903)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 2125, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5498)
[0000][PE] mean and std.dev: (1696.56, 844.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205456 reads in 377.961 CPU sec, 48.763 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518148, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 368, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2852)
[0000][PE] mean and std.dev: (628.67, 621.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.45, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 2027, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5288)
[0000][PE] mean and std.dev: (1813.00, 1089.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 376.980 CPU sec, 51.198 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518353, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 846, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1135.10, 1151.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 2077, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5648)
[0000][PE] mean and std.dev: (1623.62, 857.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 382.426 CPU sec, 51.888 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518479, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 399, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3761)
[0000][PE] mean and std.dev: (779.70, 746.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1474, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6286)
[0000][PE] mean and std.dev: (1753.50, 1247.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 383.291 CPU sec, 56.437 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518284, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 513, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1104.94, 1196.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.69, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1357, 4293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10553)
[0000][PE] mean and std.dev: (2492.33, 2088.67)
[0000][PE] low and high boundaries for proper pairs: (1, 13683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 375.991 CPU sec, 40.472 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518339, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 342, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (920.64, 1118.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 2264, 3411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7915)
[0000][PE] mean and std.dev: (2710.71, 2207.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 380.504 CPU sec, 51.365 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518454, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 1112, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1266.30, 1206.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7288)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1190, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (134, 2529)
[0000][PE] mean and std.dev: (1231.79, 455.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 379.538 CPU sec, 53.549 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518995, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 383, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (719.24, 843.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1901, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6232)
[0000][PE] mean and std.dev: (2103.50, 1283.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 378.860 CPU sec, 55.896 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518662, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 289, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4088)
[0000][PE] mean and std.dev: (796.69, 883.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1483, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1539.65, 792.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 382.884 CPU sec, 50.890 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518726, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 309, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3478)
[0000][PE] mean and std.dev: (538.82, 638.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 381.610 CPU sec, 57.037 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518519, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 990, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1230.47, 1290.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.29, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1641, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (1491.92, 987.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 379.070 CPU sec, 52.220 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518634, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 305, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (270.00, 176.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.95, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1089, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (1145.06, 681.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 381.435 CPU sec, 49.384 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517919, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 274, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2446)
[0000][PE] mean and std.dev: (399.74, 381.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1606, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1542.53, 870.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 379.493 CPU sec, 49.724 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518579, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 322, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (505.43, 502.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1145, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (1238.73, 397.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 385.512 CPU sec, 60.468 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518287, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 250, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (602.10, 744.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 378.263 CPU sec, 48.612 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518781, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 291, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (520.46, 490.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.76)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1345, 2134, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6790)
[0000][PE] mean and std.dev: (2437.38, 1536.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 380.985 CPU sec, 53.546 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519080, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 451, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (672.79, 711.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1322, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (1361.20, 556.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 377.019 CPU sec, 54.247 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518409, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 334, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4507)
[0000][PE] mean and std.dev: (780.62, 882.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5941)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1617, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5422)
[0000][PE] mean and std.dev: (1793.27, 888.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 382.011 CPU sec, 53.953 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518444, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 685, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1092.07, 1109.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 1625, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1799.94, 829.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 381.616 CPU sec, 53.995 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518692, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 359, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (739.78, 764.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.36, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 1541, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (1575.70, 458.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 380.976 CPU sec, 49.636 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518833, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 315, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1593)
[0000][PE] mean and std.dev: (396.22, 334.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1659, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1847.94, 1173.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 376.628 CPU sec, 47.952 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518096, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 342, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (504.62, 463.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1662, 3016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6998)
[0000][PE] mean and std.dev: (2117.94, 1656.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 379.959 CPU sec, 49.089 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518621, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1137, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5876)
[0000][PE] mean and std.dev: (1295.35, 1346.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1385, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1475.80, 683.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 378.033 CPU sec, 55.905 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518351, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 429, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (916.04, 992.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.50, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1672, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7070)
[0000][PE] mean and std.dev: (1695.29, 1088.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 383.509 CPU sec, 55.910 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518428, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 352, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2737)
[0000][PE] mean and std.dev: (697.07, 665.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1661, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1744.31, 827.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 381.043 CPU sec, 54.517 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518482, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 232, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (526.56, 630.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1082, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (1174.33, 582.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 380.307 CPU sec, 49.458 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518740, 3, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 415, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (669.97, 627.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1571, 2773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6363)
[0000][PE] mean and std.dev: (1804.21, 1137.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 376.438 CPU sec, 51.877 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518406, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 349, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (635.67, 565.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 2074, 3336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7674)
[0000][PE] mean and std.dev: (2011.87, 1118.22)
[0000][PE] low and high boundaries for proper pairs: (1, 9843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 376.930 CPU sec, 53.436 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518352, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 404, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (743.20, 734.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.44, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1444, 3208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7332)
[0000][PE] mean and std.dev: (2206.94, 1462.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 386.455 CPU sec, 56.936 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518560, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 715, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3777)
[0000][PE] mean and std.dev: (907.81, 840.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 2005, 3106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7290)
[0000][PE] mean and std.dev: (2271.20, 1656.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 380.539 CPU sec, 53.601 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518764, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 374, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4218)
[0000][PE] mean and std.dev: (823.90, 950.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1110, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5940)
[0000][PE] mean and std.dev: (1486.14, 968.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 378.790 CPU sec, 51.511 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518714, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 481, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (884.12, 928.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1745, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6780)
[0000][PE] mean and std.dev: (2169.07, 1738.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 379.157 CPU sec, 54.914 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 518274, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 545, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (768.95, 709.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1571, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1400.19, 586.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 377.376 CPU sec, 52.082 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518706, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 331, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (674.60, 799.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1316, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1752.95, 1207.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 378.180 CPU sec, 56.383 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518194, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1050, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (1151.12, 1322.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1470, 2666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (2099.32, 1624.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 379.198 CPU sec, 54.570 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518637, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 426, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (606.31, 563.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.55, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1212, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1860.68, 1263.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 375.701 CPU sec, 53.241 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518927, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 350, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4557)
[0000][PE] mean and std.dev: (793.26, 901.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1344, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1722.23, 1391.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 377.699 CPU sec, 52.755 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518058, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 704, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (783.56, 634.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1544, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6247)
[0000][PE] mean and std.dev: (1796.29, 904.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 380.605 CPU sec, 52.664 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518729, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 372, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1006.39, 1210.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1333, 3021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1732.15, 1161.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 381.104 CPU sec, 55.190 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518873, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 463, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (691.74, 658.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1778, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (2040.00, 1244.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 374.916 CPU sec, 52.118 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 518722, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 464, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (726.93, 777.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1272, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1602.17, 1102.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 382.782 CPU sec, 56.597 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518513, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 397, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (668.62, 689.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1448, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (1586.00, 1062.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 380.617 CPU sec, 59.574 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518356, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 308, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (808.32, 905.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1196, 3138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7628)
[0000][PE] mean and std.dev: (1816.33, 1496.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 379.185 CPU sec, 47.568 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518454, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 1245, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1266.90, 1179.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1456, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1659.85, 996.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 382.683 CPU sec, 53.319 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518339, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 267, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2898)
[0000][PE] mean and std.dev: (589.00, 607.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1575, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6202)
[0000][PE] mean and std.dev: (1588.58, 1243.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 380.301 CPU sec, 54.460 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518581, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 627, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (818.79, 827.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1502, 3070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6864)
[0000][PE] mean and std.dev: (1775.85, 844.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 379.123 CPU sec, 53.899 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518855, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (503, 1296, 3028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8078)
[0000][PE] mean and std.dev: (1757.88, 1621.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1353, 2529, 4418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10548)
[0000][PE] mean and std.dev: (2902.38, 2025.35)
[0000][PE] low and high boundaries for proper pairs: (1, 13613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 375.629 CPU sec, 49.104 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518546, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 506, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2870)
[0000][PE] mean and std.dev: (729.95, 689.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1164, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (55, 2345)
[0000][PE] mean and std.dev: (1150.93, 535.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 380.570 CPU sec, 60.773 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518385, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 337, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (501.78, 530.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.36, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1225, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1407.26, 706.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 381.233 CPU sec, 54.481 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518512, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 354, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (752.96, 724.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4819)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1038, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (1097.86, 633.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 378.992 CPU sec, 58.903 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518254, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 319, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (705.89, 859.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1404, 1918, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1690.38, 592.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 381.228 CPU sec, 53.601 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518816, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 335, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (494.89, 494.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1790, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4569)
[0000][PE] mean and std.dev: (1628.33, 680.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 380.620 CPU sec, 59.183 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518372, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 327, 1011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2621)
[0000][PE] mean and std.dev: (681.66, 677.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3426)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1540, 3914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10454)
[0000][PE] mean and std.dev: (2141.88, 1457.31)
[0000][PE] low and high boundaries for proper pairs: (1, 13724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 383.187 CPU sec, 50.709 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518579, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 680, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1308.56, 1453.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (254, 655, 3404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9704)
[0000][PE] mean and std.dev: (1727.60, 2218.86)
[0000][PE] low and high boundaries for proper pairs: (1, 12854)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1278, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1535.08, 947.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 380.069 CPU sec, 48.607 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518263, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 604, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (936.92, 942.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1524, 1949, 2958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5826)
[0000][PE] mean and std.dev: (2121.57, 1066.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 376.390 CPU sec, 49.564 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518395, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 476, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (471.00, 280.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1629, 4619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11215)
[0000][PE] mean and std.dev: (2646.24, 2084.95)
[0000][PE] low and high boundaries for proper pairs: (1, 14513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 378.967 CPU sec, 57.078 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518489, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 418, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (829.51, 827.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.05, 114.68)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1495, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1778.00, 1201.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 378.701 CPU sec, 54.270 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518334, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 288, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1650)
[0000][PE] mean and std.dev: (449.48, 381.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1404, 1449, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1609.90, 759.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 387.372 CPU sec, 56.863 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 518968, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 351, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (311.86, 213.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1355, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1727.43, 1037.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 378.916 CPU sec, 53.376 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518636, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 441, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (807.21, 853.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1628, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (32, 3142)
[0000][PE] mean and std.dev: (1576.00, 559.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 378.401 CPU sec, 53.510 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518135, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 347, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (575.00, 660.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1547, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4895)
[0000][PE] mean and std.dev: (1877.37, 962.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 381.443 CPU sec, 56.158 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517929, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 375, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (657.62, 628.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.35, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1345, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (1780.12, 985.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 379.827 CPU sec, 51.417 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518441, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 330, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (615.64, 637.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1338, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1256.00, 564.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 379.025 CPU sec, 57.024 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518379, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 372, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (677.56, 786.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1634, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3762)
[0000][PE] mean and std.dev: (1650.00, 650.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 381.974 CPU sec, 48.760 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518503, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 912, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (804.90, 796.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1313, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6769)
[0000][PE] mean and std.dev: (1601.14, 1078.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 375.002 CPU sec, 54.467 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 519025, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 337, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (718.68, 685.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.61, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1899, 3079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6745)
[0000][PE] mean and std.dev: (2177.85, 1470.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 379.003 CPU sec, 52.418 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 519211, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 364, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2550)
[0000][PE] mean and std.dev: (583.23, 568.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1332, 2034, 3440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7656)
[0000][PE] mean and std.dev: (2313.12, 1093.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 373.122 CPU sec, 52.702 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518245, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 402, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (614.86, 653.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 378.942 CPU sec, 54.079 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518454, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 223, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2742)
[0000][PE] mean and std.dev: (489.97, 563.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1911, 3493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8105)
[0000][PE] mean and std.dev: (2154.33, 1367.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 378.424 CPU sec, 48.212 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518384, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 321, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (668.62, 674.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1681, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (1567.31, 715.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 382.028 CPU sec, 55.573 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518365, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 757, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4345)
[0000][PE] mean and std.dev: (971.40, 882.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 2087, 3772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8690)
[0000][PE] mean and std.dev: (2787.76, 2085.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 378.403 CPU sec, 50.216 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518473, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 343, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (693.29, 732.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1691, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (1638.86, 851.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 381.838 CPU sec, 55.241 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518355, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 453, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (979.76, 940.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1494, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1520.37, 776.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 381.822 CPU sec, 55.444 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518434, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 279, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (591.55, 577.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1504, 1650, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (1749.43, 802.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 378.378 CPU sec, 51.804 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517861, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1315, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6197)
[0000][PE] mean and std.dev: (1562.16, 1525.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1260, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (1208.88, 640.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 381.410 CPU sec, 56.070 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518534, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 327, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2989)
[0000][PE] mean and std.dev: (584.19, 624.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.62, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1214, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (113, 2808)
[0000][PE] mean and std.dev: (1275.10, 527.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 377.582 CPU sec, 56.288 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517828, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 379, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (469.35, 412.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1399, 2579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5923)
[0000][PE] mean and std.dev: (1390.92, 768.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 388.140 CPU sec, 60.099 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518328, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 403, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (702.64, 708.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.36, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1622, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1330.81, 954.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 383.222 CPU sec, 59.088 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519064, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 730, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1032.35, 1108.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 2028, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1905.17, 1242.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 378.237 CPU sec, 53.477 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518503, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 656, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1142.88, 1240.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1428, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6071)
[0000][PE] mean and std.dev: (1827.41, 1080.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 381.197 CPU sec, 59.280 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518443, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 403, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (770.04, 721.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1441, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (1297.33, 642.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 380.924 CPU sec, 55.092 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518514, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 372, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (666.31, 636.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1488, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1513.15, 613.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 381.125 CPU sec, 54.588 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518191, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 368, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (629.13, 542.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1992, 2378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5462)
[0000][PE] mean and std.dev: (1719.77, 1136.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 379.235 CPU sec, 53.997 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518432, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 394, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4073)
[0000][PE] mean and std.dev: (834.39, 807.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1260, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1712.31, 1146.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 382.777 CPU sec, 58.978 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518501, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1288, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7140)
[0000][PE] mean and std.dev: (1586.43, 1667.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1364, 1594, 4567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10973)
[0000][PE] mean and std.dev: (2739.80, 2279.24)
[0000][PE] low and high boundaries for proper pairs: (1, 14176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 382.417 CPU sec, 55.556 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518986, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 775, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (895.58, 768.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.95, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1163, 4068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10538)
[0000][PE] mean and std.dev: (2420.58, 2637.03)
[0000][PE] low and high boundaries for proper pairs: (1, 13773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 380.575 CPU sec, 59.246 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518453, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 351, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5127)
[0000][PE] mean and std.dev: (1017.22, 1214.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 987, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6152)
[0000][PE] mean and std.dev: (1630.76, 1384.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 379.245 CPU sec, 53.060 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518747, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 437, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (885.76, 978.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1532, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (1640.20, 1062.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 382.361 CPU sec, 55.660 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518813, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 379, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (597.33, 473.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1647, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1308.17, 579.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 382.481 CPU sec, 62.285 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518418, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 320, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4559)
[0000][PE] mean and std.dev: (868.23, 1047.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1282, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (995.75, 368.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 383.334 CPU sec, 59.425 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518158, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 484, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (650.19, 695.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 2081, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7274)
[0000][PE] mean and std.dev: (2036.65, 1289.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 379.702 CPU sec, 58.793 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518667, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 311, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (692.80, 704.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1535, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5804)
[0000][PE] mean and std.dev: (1794.33, 1235.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 380.593 CPU sec, 52.989 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518343, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 328, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (600.25, 672.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1468, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1664.21, 991.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 377.470 CPU sec, 51.757 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205814
	[0000][ M::kt_pipeline] read 1205814 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518138, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 352, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (799.66, 852.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1093, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2531)
[0000][PE] mean and std.dev: (1119.67, 600.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 385.379 CPU sec, 60.248 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205814
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518373, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 376, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5338)
[0000][PE] mean and std.dev: (943.77, 1240.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.85)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1246, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6103)
[0000][PE] mean and std.dev: (1821.00, 1348.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7834)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205814 reads in 381.767 CPU sec, 54.611 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518319, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 383, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1079.03, 1174.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 378.901 CPU sec, 47.958 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518487, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 354, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (680.00, 683.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.60, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1409, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1713.35, 1057.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 382.890 CPU sec, 52.275 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518413, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 395, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (954.03, 1000.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1396, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (1221.45, 480.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 382.823 CPU sec, 54.777 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518725, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 519, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4343)
[0000][PE] mean and std.dev: (678.88, 574.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (572, 1664, 2772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7172)
[0000][PE] mean and std.dev: (2155.60, 1847.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 378.609 CPU sec, 50.581 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518358, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 420, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (724.56, 783.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 2619, 3565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8099)
[0000][PE] mean and std.dev: (2676.15, 1919.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 382.352 CPU sec, 58.870 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518526, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 348, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1704)
[0000][PE] mean and std.dev: (435.71, 379.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1630, 3676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8720)
[0000][PE] mean and std.dev: (2283.75, 1685.96)
[0000][PE] low and high boundaries for proper pairs: (1, 11242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 375.644 CPU sec, 51.980 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518805, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 307, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (587.19, 556.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1622, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1897.00, 1352.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 381.875 CPU sec, 54.794 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518767, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 599, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (793.93, 818.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1535, 3082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7302)
[0000][PE] mean and std.dev: (1981.10, 1345.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 383.555 CPU sec, 62.238 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518208, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 791, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4239)
[0000][PE] mean and std.dev: (992.17, 871.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1173, 3308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8008)
[0000][PE] mean and std.dev: (1706.41, 1145.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 378.761 CPU sec, 52.275 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518441, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 384, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (611.75, 623.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 1588, 4607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11433)
[0000][PE] mean and std.dev: (2696.33, 2118.98)
[0000][PE] low and high boundaries for proper pairs: (1, 14846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 380.805 CPU sec, 53.883 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519159, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 362, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (562.50, 475.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1342, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (1342.93, 367.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 378.904 CPU sec, 55.522 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518439, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 357, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6036)
[0000][PE] mean and std.dev: (1083.78, 1297.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1368, 3659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9287)
[0000][PE] mean and std.dev: (2113.94, 1609.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 379.611 CPU sec, 52.604 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518790, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 256, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (423.97, 489.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1381, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (1504.30, 885.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 381.715 CPU sec, 55.665 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518387, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 355, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (428.39, 394.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1461, 5299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13723)
[0000][PE] mean and std.dev: (2595.24, 2177.10)
[0000][PE] low and high boundaries for proper pairs: (1, 17935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 378.858 CPU sec, 53.654 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518780, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 442, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (677.10, 640.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1347, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1404.40, 880.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 377.633 CPU sec, 52.416 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518393, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 540, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (966.92, 959.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1182, 2217, 3993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9615)
[0000][PE] mean and std.dev: (2221.67, 1635.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 381.942 CPU sec, 58.292 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518289, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 408, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (987.24, 1008.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1669, 3799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9031)
[0000][PE] mean and std.dev: (2074.73, 1442.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 379.613 CPU sec, 56.594 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518198, 10, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 378, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (586.21, 522.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1173, 3163, 6693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17733)
[0000][PE] mean and std.dev: (3536.30, 2804.20)
[0000][PE] low and high boundaries for proper pairs: (1, 23253)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1520, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5246)
[0000][PE] mean and std.dev: (1669.67, 1113.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 381.757 CPU sec, 54.150 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205498
	[0000][ M::kt_pipeline] read 1205498 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518402, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 332, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (708.16, 659.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (168, 1260, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7584)
[0000][PE] mean and std.dev: (1438.22, 1745.79)
[0000][PE] low and high boundaries for proper pairs: (1, 10056)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1443, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1233.59, 637.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 382.295 CPU sec, 56.032 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518350, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 433, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5951)
[0000][PE] mean and std.dev: (1119.36, 1326.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1381, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (1372.00, 580.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205498 reads in 380.712 CPU sec, 51.241 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518569, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 406, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3729)
[0000][PE] mean and std.dev: (813.54, 849.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1663, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1847.50, 1143.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 378.759 CPU sec, 49.050 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518663, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 283, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (567.90, 604.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1780, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1602.53, 1049.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 379.307 CPU sec, 48.775 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518528, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 574, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1099.58, 1252.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1058, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3201)
[0000][PE] mean and std.dev: (1100.31, 455.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 387.464 CPU sec, 57.821 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519019, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 368, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1479)
[0000][PE] mean and std.dev: (433.25, 329.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1504, 2748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6044)
[0000][PE] mean and std.dev: (1719.00, 1150.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 378.478 CPU sec, 52.218 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518479, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 346, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (431.50, 312.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1324, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1333.43, 539.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 377.485 CPU sec, 53.288 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518633, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 354, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (568.57, 496.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1115, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (1474.69, 1153.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 380.549 CPU sec, 50.343 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518678, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 581, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4788)
[0000][PE] mean and std.dev: (928.96, 825.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (141, 5440, 6244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18450)
[0000][PE] mean and std.dev: (3797.70, 2814.01)
[0000][PE] low and high boundaries for proper pairs: (1, 24553)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1841, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (1760.21, 740.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 378.794 CPU sec, 58.883 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518433, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 346, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1488)
[0000][PE] mean and std.dev: (363.67, 270.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1395, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4535)
[0000][PE] mean and std.dev: (1538.16, 910.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 380.466 CPU sec, 60.464 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518839, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 463, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4180)
[0000][PE] mean and std.dev: (787.79, 749.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1410, 2577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6095)
[0000][PE] mean and std.dev: (1965.94, 1532.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 377.594 CPU sec, 53.237 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518534, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 441, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6693)
[0000][PE] mean and std.dev: (1288.10, 1354.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 377.831 CPU sec, 47.300 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518933, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 443, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (705.38, 565.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1115, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (1195.00, 758.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 378.491 CPU sec, 52.815 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518575, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 337, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (587.45, 626.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1690, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (1464.86, 409.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 375.328 CPU sec, 55.928 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518855, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 420, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (747.39, 672.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1714, 3011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6949)
[0000][PE] mean and std.dev: (1899.42, 1083.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 378.050 CPU sec, 55.968 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518484, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 415, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1962)
[0000][PE] mean and std.dev: (581.12, 489.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.98, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1277, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (1165.15, 645.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 381.989 CPU sec, 47.969 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518029, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 370, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4438)
[0000][PE] mean and std.dev: (894.44, 950.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.14, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1678, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1980.36, 720.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 377.472 CPU sec, 53.930 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205808
	[0000][ M::kt_pipeline] read 1205808 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518593, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 688, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1125.27, 1362.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.83, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1757, 3793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9187)
[0000][PE] mean and std.dev: (2369.29, 1670.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 380.091 CPU sec, 52.858 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518113, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 292, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (655.03, 693.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 2440, 5711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15107)
[0000][PE] mean and std.dev: (3050.25, 2372.55)
[0000][PE] low and high boundaries for proper pairs: (1, 19805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205808 reads in 382.147 CPU sec, 54.855 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518583, 7, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 464, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (865.89, 916.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 381.271 CPU sec, 51.419 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518554, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 373, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (760.00, 942.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 382.318 CPU sec, 53.316 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518963, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 665, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (833.72, 726.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1867, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1771.95, 958.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 378.401 CPU sec, 53.404 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518864, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 711, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1043.85, 1076.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1737, 2113, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6126)
[0000][PE] mean and std.dev: (2009.17, 980.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 378.473 CPU sec, 48.268 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518227, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 1211, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6039)
[0000][PE] mean and std.dev: (1484.53, 1359.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1078, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4948)
[0000][PE] mean and std.dev: (1248.71, 819.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 379.646 CPU sec, 54.665 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518618, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 509, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (761.25, 749.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1053, 7110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 19896)
[0000][PE] mean and std.dev: (3047.35, 3064.66)
[0000][PE] low and high boundaries for proper pairs: (1, 26289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 382.381 CPU sec, 53.528 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518726, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 743, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4716)
[0000][PE] mean and std.dev: (985.07, 1002.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1329, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1557.08, 942.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 376.592 CPU sec, 54.120 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519139, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 384, 1133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (580.70, 585.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1456, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (1321.46, 683.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 378.636 CPU sec, 54.096 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518092, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 359, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4306)
[0000][PE] mean and std.dev: (901.39, 1019.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1357, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7292)
[0000][PE] mean and std.dev: (1748.33, 1230.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 378.167 CPU sec, 50.270 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518698, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 302, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (656.70, 861.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1460, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5765)
[0000][PE] mean and std.dev: (1692.80, 1003.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 381.614 CPU sec, 52.820 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518270, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 462, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4669)
[0000][PE] mean and std.dev: (919.46, 1086.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 2032, 2709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6361)
[0000][PE] mean and std.dev: (2011.64, 1430.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 378.008 CPU sec, 53.674 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518794, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 354, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3413)
[0000][PE] mean and std.dev: (678.16, 694.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.56, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 1894, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7371)
[0000][PE] mean and std.dev: (2115.78, 1349.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 380.543 CPU sec, 49.593 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518314, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 343, 1696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (788.22, 758.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1428, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1537.00, 756.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 383.138 CPU sec, 52.481 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518991, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 654, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (705.07, 637.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.43, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1395, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5932)
[0000][PE] mean and std.dev: (1714.85, 992.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 375.572 CPU sec, 45.605 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518367, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 414, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (726.31, 884.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.28, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 2236, 2817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (2187.35, 941.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 379.765 CPU sec, 50.682 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518051, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 411, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (511.82, 460.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1059, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1537.74, 969.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 387.099 CPU sec, 60.213 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518758, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 352, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (495.56, 516.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 2368, 3596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8654)
[0000][PE] mean and std.dev: (2543.36, 1734.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 378.482 CPU sec, 53.132 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518628, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 377, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (831.88, 846.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1729, 3781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9375)
[0000][PE] mean and std.dev: (2150.27, 1439.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 381.907 CPU sec, 45.554 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518387, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 485, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (637.73, 479.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1596, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (1730.82, 905.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 384.462 CPU sec, 58.081 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518626, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 356, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3349)
[0000][PE] mean and std.dev: (758.83, 738.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1486, 1862, 3718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8182)
[0000][PE] mean and std.dev: (2386.62, 1386.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 383.351 CPU sec, 60.430 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518029, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 362, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (597.48, 593.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.73)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1225, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (1290.76, 726.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 382.377 CPU sec, 56.273 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 518758, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 415, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3677)
[0000][PE] mean and std.dev: (652.62, 757.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1336, 1703, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1663.32, 770.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 380.350 CPU sec, 51.932 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518658, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 353, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (952.84, 1087.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (494, 999, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (915.33, 440.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 375.014 CPU sec, 50.208 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518615, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 346, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (537.93, 473.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.79)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 381.157 CPU sec, 47.776 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518418, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 377, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (638.60, 661.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1579, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4660)
[0000][PE] mean and std.dev: (1655.38, 1090.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6017)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 382.431 CPU sec, 48.698 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518494, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 919, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5174)
[0000][PE] mean and std.dev: (1174.64, 1092.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.44, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1649, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1588.25, 816.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 379.166 CPU sec, 50.988 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518164, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 437, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (1047.90, 1062.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5299)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1021, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (1025.76, 588.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 378.788 CPU sec, 51.534 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518416, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 347, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (838.20, 751.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1659, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8705)
[0000][PE] mean and std.dev: (1694.27, 1425.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 379.687 CPU sec, 46.404 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518321, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 396, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4229)
[0000][PE] mean and std.dev: (705.19, 675.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1378, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6529)
[0000][PE] mean and std.dev: (1606.15, 780.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 379.682 CPU sec, 51.059 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518955, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 331, 806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2008)
[0000][PE] mean and std.dev: (485.55, 455.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 2224, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7073)
[0000][PE] mean and std.dev: (2476.65, 1474.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 381.117 CPU sec, 55.955 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205778
	[0000][ M::kt_pipeline] read 1205778 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518649, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 423, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4630)
[0000][PE] mean and std.dev: (965.75, 1213.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1616, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6485)
[0000][PE] mean and std.dev: (2155.83, 1411.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 378.757 CPU sec, 50.362 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518831, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 749, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (832.32, 791.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.33, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1571, 4607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11571)
[0000][PE] mean and std.dev: (2642.81, 2404.95)
[0000][PE] low and high boundaries for proper pairs: (1, 15053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205778 reads in 380.826 CPU sec, 53.292 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518310, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 391, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2908)
[0000][PE] mean and std.dev: (593.59, 618.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1516, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1809.89, 1295.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6990)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 381.594 CPU sec, 54.975 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518651, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 559, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6212)
[0000][PE] mean and std.dev: (1354.80, 1615.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1569, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1585.37, 855.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 376.069 CPU sec, 52.971 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518868, 1, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 326, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (683.85, 711.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 383.476 CPU sec, 57.687 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518948, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 418, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (664.71, 641.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.50, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1421, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5420)
[0000][PE] mean and std.dev: (1507.83, 845.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 374.160 CPU sec, 50.397 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518450, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 376, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7109)
[0000][PE] mean and std.dev: (1209.52, 1643.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1190, 1934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1471.36, 898.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 385.282 CPU sec, 58.460 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519125, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 698, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (677.86, 691.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1622, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (1522.56, 544.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 380.194 CPU sec, 50.431 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 517950, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 289, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2724)
[0000][PE] mean and std.dev: (513.83, 501.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1591, 2193, 3229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (2412.44, 1349.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 385.370 CPU sec, 53.654 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518624, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 399, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2141)
[0000][PE] mean and std.dev: (488.89, 366.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1876, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (2163.69, 1270.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7245)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 379.598 CPU sec, 54.612 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518817, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 433, 771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1913)
[0000][PE] mean and std.dev: (419.56, 335.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1633, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6475)
[0000][PE] mean and std.dev: (1890.38, 1295.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 381.711 CPU sec, 61.859 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518553, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 990, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (1394.57, 1440.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1202, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3633)
[0000][PE] mean and std.dev: (1373.86, 745.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 381.303 CPU sec, 59.230 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518764, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 333, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (501.80, 392.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 380.567 CPU sec, 57.179 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518623, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 351, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (885.46, 1131.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1410, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1468.17, 989.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 374.319 CPU sec, 51.698 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518653, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 552, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (901.14, 886.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 379.008 CPU sec, 54.345 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518801, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 480, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (627.13, 650.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 375.684 CPU sec, 46.618 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518014, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 313, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (588.73, 554.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1731, 4193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10349)
[0000][PE] mean and std.dev: (2227.31, 1755.86)
[0000][PE] low and high boundaries for proper pairs: (1, 13427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 378.885 CPU sec, 47.075 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519058, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 489, 2611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (1312.96, 1481.00)
[0000][PE] low and high boundaries for proper pairs: (1, 9826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1184, 2689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1475.67, 1099.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 376.279 CPU sec, 45.900 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518463, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 426, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (613.19, 552.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.43, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1320, 1855, 2484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1756.67, 842.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 378.410 CPU sec, 50.730 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518960, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 309, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (821.63, 873.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1621, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1688.00, 965.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 381.557 CPU sec, 55.370 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518766, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 288, 485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1073)
[0000][PE] mean and std.dev: (304.97, 235.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.86, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (610, 1338, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1389.53, 907.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 383.282 CPU sec, 54.700 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518723, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 379, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (697.42, 641.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1513, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1587.09, 1028.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 383.031 CPU sec, 59.013 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205794
	[0000][ M::kt_pipeline] read 1205794 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518166, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 347, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2058)
[0000][PE] mean and std.dev: (358.94, 331.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1863, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6599)
[0000][PE] mean and std.dev: (2013.73, 991.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 380.335 CPU sec, 45.694 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205794
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518622, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 314, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (725.85, 876.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1873, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1723.36, 788.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205794 reads in 379.256 CPU sec, 51.208 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518256, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 318, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1598)
[0000][PE] mean and std.dev: (273.62, 158.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.28, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1393, 1820, 3033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6313)
[0000][PE] mean and std.dev: (2006.87, 1361.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7953)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 376.241 CPU sec, 54.925 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518210, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 359, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1012.94, 1218.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1673, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5776)
[0000][PE] mean and std.dev: (1885.15, 1082.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 375.942 CPU sec, 54.015 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518716, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 371, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (619.16, 614.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1621, 3066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6820)
[0000][PE] mean and std.dev: (1906.08, 1227.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 375.621 CPU sec, 53.255 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518480, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 367, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1044.87, 1130.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1863, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5434)
[0000][PE] mean and std.dev: (1765.00, 751.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 381.577 CPU sec, 52.825 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518321, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 416, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (743.22, 788.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1936, 3493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8237)
[0000][PE] mean and std.dev: (2316.65, 1709.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 377.818 CPU sec, 55.488 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518791, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 604, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3421)
[0000][PE] mean and std.dev: (783.27, 626.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1970, 4464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10962)
[0000][PE] mean and std.dev: (2669.24, 2078.70)
[0000][PE] low and high boundaries for proper pairs: (1, 14211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 378.175 CPU sec, 49.872 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518334, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 417, 2866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8256)
[0000][PE] mean and std.dev: (1322.48, 1660.12)
[0000][PE] low and high boundaries for proper pairs: (1, 10951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1813, 2487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1805.67, 1239.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 379.519 CPU sec, 57.152 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518397, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 330, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (566.04, 701.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (418, 1289, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1446.71, 1124.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 378.690 CPU sec, 49.491 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518118, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 349, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (484.60, 422.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.56, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 380.742 CPU sec, 51.391 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518390, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 317, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (447.79, 349.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.34, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1072, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1214.00, 543.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 378.122 CPU sec, 49.680 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518751, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 351, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (619.91, 582.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1762, 3894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9498)
[0000][PE] mean and std.dev: (2339.07, 1782.64)
[0000][PE] low and high boundaries for proper pairs: (1, 12300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 382.075 CPU sec, 58.150 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518490, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 845, 3746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10798)
[0000][PE] mean and std.dev: (2140.06, 2486.28)
[0000][PE] low and high boundaries for proper pairs: (1, 14324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1721, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1735.44, 770.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 379.448 CPU sec, 56.336 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 517977, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 434, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (850.00, 951.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.98, 114.66)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1358, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5673)
[0000][PE] mean and std.dev: (1742.17, 1282.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 387.129 CPU sec, 57.981 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518244, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 469, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (844.00, 862.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1779, 3470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8142)
[0000][PE] mean and std.dev: (2393.35, 1796.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 380.688 CPU sec, 56.892 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518813, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 432, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (552.00, 567.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1238, 4324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10850)
[0000][PE] mean and std.dev: (2515.53, 2040.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 382.979 CPU sec, 51.667 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518532, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 461, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (500.35, 433.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1052, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (322, 1962)
[0000][PE] mean and std.dev: (1039.00, 357.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 381.079 CPU sec, 53.432 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518333, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 343, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (818.28, 990.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1378, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1572.88, 1218.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 381.285 CPU sec, 58.776 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518109, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 315, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2170)
[0000][PE] mean and std.dev: (449.19, 386.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.59, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1466, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (1609.14, 821.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 383.409 CPU sec, 53.896 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518307, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 330, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (566.60, 624.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1682, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6804)
[0000][PE] mean and std.dev: (1856.22, 1214.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 376.417 CPU sec, 52.572 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518599, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 692, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6814)
[0000][PE] mean and std.dev: (1315.53, 1481.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.30, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1448, 3834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9126)
[0000][PE] mean and std.dev: (2304.65, 1742.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 379.551 CPU sec, 52.919 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518729, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 889, 3623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10395)
[0000][PE] mean and std.dev: (2069.33, 2693.56)
[0000][PE] low and high boundaries for proper pairs: (1, 13781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1789, 3096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7368)
[0000][PE] mean and std.dev: (2084.94, 1391.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 382.567 CPU sec, 59.626 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518691, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 385, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (658.81, 694.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1524, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5898)
[0000][PE] mean and std.dev: (1695.10, 1128.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 377.824 CPU sec, 51.567 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518952, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 497, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5091)
[0000][PE] mean and std.dev: (866.78, 929.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1648, 3024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7188)
[0000][PE] mean and std.dev: (1731.40, 1275.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 381.994 CPU sec, 54.574 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518061, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 462, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (616.61, 632.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.37, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1516, 3560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8222)
[0000][PE] mean and std.dev: (2106.31, 1347.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 378.410 CPU sec, 52.024 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518486, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 353, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (436.84, 410.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1395, 4530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11776)
[0000][PE] mean and std.dev: (2313.69, 1957.20)
[0000][PE] low and high boundaries for proper pairs: (1, 15399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 381.784 CPU sec, 52.328 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518369, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 466, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (1221.63, 1579.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1090, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5105)
[0000][PE] mean and std.dev: (1367.47, 771.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 376.844 CPU sec, 53.097 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518286, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 350, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (535.03, 585.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 2274, 4444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10760)
[0000][PE] mean and std.dev: (2438.71, 1519.97)
[0000][PE] low and high boundaries for proper pairs: (1, 13918)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 379.356 CPU sec, 55.851 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518880, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 400, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (656.57, 680.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1557, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (1353.64, 592.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 378.037 CPU sec, 55.133 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518061, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 430, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (590.85, 534.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1206, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1390.75, 670.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 379.576 CPU sec, 49.336 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518376, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 310, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (487.06, 475.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 2040, 4232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10042)
[0000][PE] mean and std.dev: (2383.82, 1420.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 374.877 CPU sec, 54.466 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518632, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 495, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (775.21, 654.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1314, 5180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14146)
[0000][PE] mean and std.dev: (2766.64, 2496.72)
[0000][PE] low and high boundaries for proper pairs: (1, 18629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 377.615 CPU sec, 51.829 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518246, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 296, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (562.10, 622.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (501, 829, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1241.85, 1088.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 384.129 CPU sec, 51.638 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205450
	[0000][ M::kt_pipeline] read 1205450 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 518496, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 846, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5528)
[0000][PE] mean and std.dev: (1154.02, 1153.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1170, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (1900.78, 1710.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 379.582 CPU sec, 57.397 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518838, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 348, 3613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10341)
[0000][PE] mean and std.dev: (1522.71, 2230.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1052, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1023.62, 436.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205450 reads in 381.143 CPU sec, 57.643 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519032, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 437, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2845)
[0000][PE] mean and std.dev: (694.17, 677.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.36, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1136, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1086.53, 526.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 378.198 CPU sec, 46.562 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205768
	[0000][ M::kt_pipeline] read 1205768 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518659, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 416, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5415)
[0000][PE] mean and std.dev: (950.76, 980.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1685, 2433, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5894)
[0000][PE] mean and std.dev: (2414.06, 1103.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 379.945 CPU sec, 49.801 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205768
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518658, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 404, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (707.96, 676.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 2117, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6749)
[0000][PE] mean and std.dev: (1874.88, 939.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205768 reads in 381.536 CPU sec, 55.099 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518359, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 374, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (810.00, 982.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.59, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1492, 3311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7617)
[0000][PE] mean and std.dev: (2115.54, 1340.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 380.448 CPU sec, 53.085 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518608, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 393, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (548.42, 691.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1357, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6590)
[0000][PE] mean and std.dev: (1939.47, 1320.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 374.674 CPU sec, 50.835 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (48, 518574, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 624, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1009.62, 991.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1494, 2518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (1616.13, 833.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 380.356 CPU sec, 54.469 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205694
	[0000][ M::kt_pipeline] read 1205694 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518319, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 701, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (757.41, 610.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1516, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5932)
[0000][PE] mean and std.dev: (1813.47, 1053.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7504)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 377.306 CPU sec, 51.172 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205694
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518394, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 412, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (647.46, 726.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1710, 2546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5408)
[0000][PE] mean and std.dev: (1795.35, 1136.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205694 reads in 379.699 CPU sec, 52.883 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518733, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 347, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (769.97, 876.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1514, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1597.60, 760.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 378.773 CPU sec, 51.539 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 519078, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 381, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (815.55, 939.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1765, 3001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7029)
[0000][PE] mean and std.dev: (1638.29, 1077.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 375.966 CPU sec, 49.861 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518376, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 515, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2641)
[0000][PE] mean and std.dev: (634.26, 604.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1147, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1099.41, 588.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 376.954 CPU sec, 51.042 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518506, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 345, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4204)
[0000][PE] mean and std.dev: (859.24, 947.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1588, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (1492.33, 552.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 377.109 CPU sec, 54.060 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518560, 8, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 268, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1288)
[0000][PE] mean and std.dev: (331.00, 252.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 379.136 CPU sec, 60.975 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518296, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 872, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (931.06, 778.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.57, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1379, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (1199.56, 505.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 381.619 CPU sec, 53.463 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518160, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 569, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2935)
[0000][PE] mean and std.dev: (688.21, 737.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1340, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1511.26, 773.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 381.722 CPU sec, 51.040 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518644, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 501, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (737.53, 670.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1318, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1214.17, 579.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 378.190 CPU sec, 52.030 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519038, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 783, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5985)
[0000][PE] mean and std.dev: (1295.81, 1396.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1445, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (1379.24, 554.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 373.198 CPU sec, 50.875 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518598, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 333, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (583.39, 752.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1448, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (1307.42, 547.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 383.208 CPU sec, 54.973 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518327, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 355, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (628.82, 628.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1594, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5521)
[0000][PE] mean and std.dev: (1621.93, 911.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 378.486 CPU sec, 53.043 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518574, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 306, 712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1780)
[0000][PE] mean and std.dev: (421.28, 386.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1468, 2923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (1720.12, 950.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 378.772 CPU sec, 54.732 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518695, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 538, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (725.36, 565.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 379.222 CPU sec, 51.815 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518368, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 370, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (656.80, 643.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.36, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1439, 1776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1369.69, 547.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 386.306 CPU sec, 63.105 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518816, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 429, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5192)
[0000][PE] mean and std.dev: (1070.86, 1235.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1865, 2932, 4630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10160)
[0000][PE] mean and std.dev: (3052.57, 1487.57)
[0000][PE] low and high boundaries for proper pairs: (1, 12925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 381.859 CPU sec, 58.814 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518566, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 254, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 720)
[0000][PE] mean and std.dev: (259.58, 145.85)
[0000][PE] low and high boundaries for proper pairs: (1, 896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 2264, 3798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9020)
[0000][PE] mean and std.dev: (2481.00, 1623.04)
[0000][PE] low and high boundaries for proper pairs: (1, 11631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 383.195 CPU sec, 49.951 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205910
	[0000][ M::kt_pipeline] read 1205910 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518880, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 310, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1105.81, 1315.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1162, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7035)
[0000][PE] mean and std.dev: (2030.53, 1623.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 383.454 CPU sec, 60.408 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205910
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518461, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 565, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3755)
[0000][PE] mean and std.dev: (900.83, 759.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1454, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1565.48, 1024.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205910 reads in 382.599 CPU sec, 59.435 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519035, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 391, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (788.08, 798.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.33, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1546, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6264)
[0000][PE] mean and std.dev: (1775.40, 927.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 376.027 CPU sec, 56.695 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518656, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 255, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (593.67, 675.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1425, 3347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7939)
[0000][PE] mean and std.dev: (2138.76, 1773.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 382.538 CPU sec, 57.579 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518138, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 284, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3505)
[0000][PE] mean and std.dev: (658.88, 925.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1380, 2229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5173)
[0000][PE] mean and std.dev: (1184.08, 691.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 376.911 CPU sec, 55.762 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518320, 3, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 548, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6887)
[0000][PE] mean and std.dev: (1514.74, 1669.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1256, 2926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (1877.52, 1625.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 381.539 CPU sec, 53.101 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518811, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 831, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1201.22, 1339.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1207, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1213.31, 508.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 378.037 CPU sec, 55.317 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518221, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 267, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1917)
[0000][PE] mean and std.dev: (373.80, 373.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1872, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6420)
[0000][PE] mean and std.dev: (1602.27, 798.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 377.458 CPU sec, 59.417 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518406, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 484, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (820.89, 779.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1155, 1865, 5421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13953)
[0000][PE] mean and std.dev: (3128.29, 2852.91)
[0000][PE] low and high boundaries for proper pairs: (1, 18219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 381.750 CPU sec, 57.238 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518673, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 379, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (614.05, 630.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1594, 3126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7592)
[0000][PE] mean and std.dev: (1800.75, 1088.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 382.070 CPU sec, 56.970 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518635, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 379, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2378)
[0000][PE] mean and std.dev: (610.66, 552.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1738, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3548)
[0000][PE] mean and std.dev: (1580.58, 720.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 377.198 CPU sec, 59.423 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518756, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 314, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2802)
[0000][PE] mean and std.dev: (506.79, 500.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1144, 2786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6200)
[0000][PE] mean and std.dev: (1800.76, 1371.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 376.279 CPU sec, 50.324 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518465, 12, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 259, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (512.70, 537.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (512, 1779, 4791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13349)
[0000][PE] mean and std.dev: (2104.08, 1885.70)
[0000][PE] low and high boundaries for proper pairs: (1, 17628)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1634, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1586.27, 612.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 380.327 CPU sec, 52.633 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518774, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 584, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (761.58, 720.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1285, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4950)
[0000][PE] mean and std.dev: (1378.31, 793.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 379.293 CPU sec, 56.439 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518549, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 309, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3268)
[0000][PE] mean and std.dev: (760.56, 835.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1459, 3188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7408)
[0000][PE] mean and std.dev: (1773.76, 1088.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 374.536 CPU sec, 54.164 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518698, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 343, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (674.46, 782.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1462, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6121)
[0000][PE] mean and std.dev: (1755.20, 1234.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 377.078 CPU sec, 55.170 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519116, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 614, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6989)
[0000][PE] mean and std.dev: (1558.47, 1849.31)
[0000][PE] low and high boundaries for proper pairs: (1, 9233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1589, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6526)
[0000][PE] mean and std.dev: (1930.89, 1080.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 378.231 CPU sec, 54.720 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (47, 518506, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 452, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5449)
[0000][PE] mean and std.dev: (1096.78, 1307.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.31, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1290, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1212.25, 671.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 379.002 CPU sec, 57.884 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518541, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 394, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (568.48, 455.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1534, 1866, 2733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1836.17, 708.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 378.069 CPU sec, 51.453 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205742
	[0000][ M::kt_pipeline] read 1205742 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518203, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 403, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (543.30, 436.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1250, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1506.37, 920.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 380.296 CPU sec, 55.792 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205720
	[0000][ M::kt_pipeline] read 1205720 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205742
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518499, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 374, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3544)
[0000][PE] mean and std.dev: (810.63, 871.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1923, 3363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7869)
[0000][PE] mean and std.dev: (2599.80, 2084.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205742 reads in 376.822 CPU sec, 54.960 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205720
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518552, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 480, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5382)
[0000][PE] mean and std.dev: (985.30, 984.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1583, 2825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6671)
[0000][PE] mean and std.dev: (1796.94, 1421.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205720 reads in 383.650 CPU sec, 57.394 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518478, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 425, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1033.03, 1307.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1196, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7525)
[0000][PE] mean and std.dev: (1744.07, 1602.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 380.106 CPU sec, 53.576 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518488, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 289, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (900.41, 1017.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1273, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1466.95, 890.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 379.118 CPU sec, 55.467 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1205564
	[0000][ M::kt_pipeline] read 1205564 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 519157, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 908, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (965.73, 783.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1360, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1503.08, 705.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 376.166 CPU sec, 55.456 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518599, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 400, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (1138.42, 1260.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1692, 2759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6369)
[0000][PE] mean and std.dev: (1819.50, 1112.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205564 reads in 378.375 CPU sec, 48.660 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518548, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 378, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (909.74, 1146.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 1257, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4466)
[0000][PE] mean and std.dev: (1271.20, 726.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 377.888 CPU sec, 55.149 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518981, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 246, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1382)
[0000][PE] mean and std.dev: (345.29, 326.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (716, 2243, 3281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8411)
[0000][PE] mean and std.dev: (2404.60, 1768.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10976)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1821, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5005)
[0000][PE] mean and std.dev: (1734.09, 960.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 382.024 CPU sec, 52.413 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518558, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 464, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (714.68, 683.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.90, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1659, 1769, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (323, 3663)
[0000][PE] mean and std.dev: (1635.13, 423.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 377.961 CPU sec, 53.058 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518567, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 404, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (657.56, 634.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1449, 3228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7718)
[0000][PE] mean and std.dev: (1821.75, 1326.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 379.048 CPU sec, 54.845 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518404, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 713, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (692.53, 552.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1952, 2843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5899)
[0000][PE] mean and std.dev: (2271.81, 1546.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 378.746 CPU sec, 62.723 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518435, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 548, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7895)
[0000][PE] mean and std.dev: (1508.59, 1660.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1304, 2054, 3800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8792)
[0000][PE] mean and std.dev: (2175.07, 1377.52)
[0000][PE] low and high boundaries for proper pairs: (1, 11288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 383.973 CPU sec, 58.797 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518826, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 779, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1272.10, 1560.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (177, 1619, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8067)
[0000][PE] mean and std.dev: (1557.80, 1184.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10697)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1291, 2996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7152)
[0000][PE] mean and std.dev: (1612.47, 1423.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9230)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 377.989 CPU sec, 57.745 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518206, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1045, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (1153.83, 1122.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (859, 1302, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4324)
[0000][PE] mean and std.dev: (1385.90, 840.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1313, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1468.20, 1096.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 377.309 CPU sec, 54.927 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517781, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 335, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1768)
[0000][PE] mean and std.dev: (455.04, 449.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.37, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1241, 1626, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1760.84, 1010.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 381.719 CPU sec, 55.079 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518607, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 354, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (771.10, 825.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1515, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (1421.38, 515.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 380.298 CPU sec, 60.104 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519146, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 571, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (829.59, 787.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.33, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1337, 2889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6713)
[0000][PE] mean and std.dev: (1816.91, 1166.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 377.223 CPU sec, 54.844 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518478, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 346, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (426.31, 336.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1334, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (1191.15, 563.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 386.325 CPU sec, 59.338 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519039, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 347, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (826.33, 902.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (361, 1873, 3247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9019)
[0000][PE] mean and std.dev: (1999.64, 2175.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 377.627 CPU sec, 55.375 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518681, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 496, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4211)
[0000][PE] mean and std.dev: (914.70, 942.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1793, 4741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11707)
[0000][PE] mean and std.dev: (2858.82, 2285.48)
[0000][PE] low and high boundaries for proper pairs: (1, 15190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 380.717 CPU sec, 58.644 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518668, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 396, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1012.41, 1038.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (601, 1503, 3438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9112)
[0000][PE] mean and std.dev: (1913.80, 1631.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11949)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1335, 1951, 4321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10293)
[0000][PE] mean and std.dev: (2688.24, 2182.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 379.143 CPU sec, 55.078 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205824
	[0000][ M::kt_pipeline] read 1205824 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518469, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 310, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (609.37, 721.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1388, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1624.31, 1166.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 385.622 CPU sec, 56.458 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205824
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518431, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 286, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (502.00, 518.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 993, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6364)
[0000][PE] mean and std.dev: (1742.80, 1562.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205824 reads in 381.698 CPU sec, 58.935 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518453, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 1151, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (1073.04, 1022.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1130, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (1485.42, 1195.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 379.592 CPU sec, 53.714 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518712, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 453, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (647.15, 544.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1197, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1040.82, 395.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3635)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 382.357 CPU sec, 54.711 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518680, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 389, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (823.29, 814.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 379.995 CPU sec, 52.861 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518700, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 416, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (801.33, 962.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.32, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1304, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1293.00, 772.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 376.614 CPU sec, 55.576 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519031, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 403, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5094)
[0000][PE] mean and std.dev: (963.45, 1004.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1571, 2478, 3014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (2181.57, 824.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 379.195 CPU sec, 58.963 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518989, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 597, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (953.42, 904.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1488, 2157, 3314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6966)
[0000][PE] mean and std.dev: (2449.60, 1615.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 379.683 CPU sec, 51.241 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518684, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 362, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (515.87, 495.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1649, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3642)
[0000][PE] mean and std.dev: (1493.09, 636.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 380.416 CPU sec, 54.733 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518790, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 343, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2627)
[0000][PE] mean and std.dev: (530.07, 539.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1449, 2121, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5388)
[0000][PE] mean and std.dev: (2035.60, 1126.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 379.945 CPU sec, 55.968 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518889, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 368, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (551.89, 568.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.97, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 380.094 CPU sec, 57.038 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518552, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 512, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5238)
[0000][PE] mean and std.dev: (978.11, 1246.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (546, 704, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5406)
[0000][PE] mean and std.dev: (1390.50, 1390.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7026)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1760, 3067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7067)
[0000][PE] mean and std.dev: (1804.73, 1105.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 382.756 CPU sec, 53.986 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518790, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 325, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (470.41, 444.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1265, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1511.76, 1037.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 378.872 CPU sec, 49.571 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518546, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 353, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (849.00, 1236.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1111, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1377.24, 967.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 380.153 CPU sec, 43.414 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518052, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 379, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2178)
[0000][PE] mean and std.dev: (437.67, 427.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1473, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1451.94, 459.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 385.258 CPU sec, 55.397 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518335, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 385, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (550.88, 537.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1576, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1579.33, 901.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 383.884 CPU sec, 47.545 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518636, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 842, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3781)
[0000][PE] mean and std.dev: (1017.67, 824.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1325, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1396.88, 615.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 380.527 CPU sec, 46.112 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518535, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 375, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (630.32, 616.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1315, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1872.20, 1170.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 386.330 CPU sec, 54.876 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518481, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 628, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3818)
[0000][PE] mean and std.dev: (900.62, 865.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1703, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1965.68, 1105.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 376.214 CPU sec, 50.825 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518681, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 320, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (639.27, 750.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1705, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (1539.71, 1033.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 373.806 CPU sec, 48.391 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519140, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 389, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (816.20, 929.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1139, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (1224.13, 589.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 380.264 CPU sec, 46.554 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518402, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 373, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1453)
[0000][PE] mean and std.dev: (440.81, 370.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1620, 3175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7825)
[0000][PE] mean and std.dev: (1937.00, 1256.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 381.123 CPU sec, 48.867 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518692, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 887, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4135)
[0000][PE] mean and std.dev: (892.20, 800.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1690, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (1475.78, 697.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 375.951 CPU sec, 46.586 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518348, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 493, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (699.67, 725.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 383.918 CPU sec, 49.065 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518757, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 383, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (583.23, 711.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1270, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (1573.67, 824.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 383.121 CPU sec, 45.447 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518415, 9, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 328, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2192)
[0000][PE] mean and std.dev: (594.32, 538.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 2466, 3929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9483)
[0000][PE] mean and std.dev: (2807.60, 2472.22)
[0000][PE] low and high boundaries for proper pairs: (1, 12696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 377.875 CPU sec, 43.974 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518429, 10, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 350, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (730.48, 944.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (244, 749, 3111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8845)
[0000][PE] mean and std.dev: (1967.40, 2243.05)
[0000][PE] low and high boundaries for proper pairs: (1, 11712)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1655, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4516)
[0000][PE] mean and std.dev: (1376.83, 762.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 383.198 CPU sec, 51.277 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518403, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 395, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4331)
[0000][PE] mean and std.dev: (957.58, 1163.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1672, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (1860.95, 921.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 378.142 CPU sec, 48.188 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518794, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 349, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1960)
[0000][PE] mean and std.dev: (415.26, 361.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (552, 1495, 4005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10911)
[0000][PE] mean and std.dev: (2554.00, 2831.76)
[0000][PE] low and high boundaries for proper pairs: (1, 14364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 377.994 CPU sec, 51.043 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518465, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 346, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (458.17, 390.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1672, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5187)
[0000][PE] mean and std.dev: (1713.83, 977.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 384.441 CPU sec, 53.464 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518507, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 674, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6406)
[0000][PE] mean and std.dev: (1227.16, 1309.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1354, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7584)
[0000][PE] mean and std.dev: (2040.26, 1497.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 382.275 CPU sec, 50.285 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 519180, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 875, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3316)
[0000][PE] mean and std.dev: (830.53, 673.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2828, 4070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9842)
[0000][PE] mean and std.dev: (2826.14, 1646.64)
[0000][PE] low and high boundaries for proper pairs: (1, 12728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 382.242 CPU sec, 52.691 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518565, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 379, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (660.17, 689.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 383.006 CPU sec, 49.681 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517659, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 381, 1878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5248)
[0000][PE] mean and std.dev: (718.87, 711.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.63, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 3094, 3619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9081)
[0000][PE] mean and std.dev: (2008.50, 1452.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 387.518 CPU sec, 55.655 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 519022, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 283, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (671.71, 769.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5005)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (253, 374, 734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1696)
[0000][PE] mean and std.dev: (342.12, 191.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2177)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1702, 2110, 3110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5926)
[0000][PE] mean and std.dev: (2035.92, 888.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 437.119 CPU sec, 73.239 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205558
	[0000][ M::kt_pipeline] read 1205558 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518378, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 360, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (863.00, 1048.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1449, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (1783.50, 989.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 388.668 CPU sec, 51.746 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518421, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 942, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3217)
[0000][PE] mean and std.dev: (833.38, 622.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1474, 3084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7438)
[0000][PE] mean and std.dev: (1624.78, 1205.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205558 reads in 383.896 CPU sec, 53.424 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518766, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 396, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3059)
[0000][PE] mean and std.dev: (620.27, 636.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (601, 1461, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1446.40, 865.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 380.231 CPU sec, 50.694 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518391, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 387, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (611.30, 909.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 2253, 4044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9646)
[0000][PE] mean and std.dev: (2982.77, 2612.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 389.225 CPU sec, 52.297 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205512
	[0000][ M::kt_pipeline] read 1205512 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518711, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 402, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (862.30, 999.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.43, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1239, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3559)
[0000][PE] mean and std.dev: (1131.29, 497.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 458.705 CPU sec, 75.714 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205536
	[0000][ M::kt_pipeline] read 1205536 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518333, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 350, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1187.30, 1393.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1343, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6538)
[0000][PE] mean and std.dev: (1560.31, 833.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205512 reads in 385.636 CPU sec, 50.054 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518756, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 273, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2573)
[0000][PE] mean and std.dev: (445.95, 520.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1530, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1180.82, 458.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205536 reads in 400.560 CPU sec, 55.582 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518710, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 357, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3050)
[0000][PE] mean and std.dev: (507.77, 496.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1697, 3032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7074)
[0000][PE] mean and std.dev: (1911.80, 1534.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 391.905 CPU sec, 51.234 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518526, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 519, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (839.28, 803.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1340, 1724, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (250, 2975)
[0000][PE] mean and std.dev: (1553.31, 665.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 392.912 CPU sec, 61.097 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518381, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1150, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6516)
[0000][PE] mean and std.dev: (1316.97, 1306.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1153, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1673.71, 1388.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 427.779 CPU sec, 61.908 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 518826, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 399, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1039.07, 1148.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1504, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1402.31, 632.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 388.957 CPU sec, 57.365 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518578, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 314, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (619.52, 699.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1791, 4087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9973)
[0000][PE] mean and std.dev: (2142.15, 1359.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12916)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 383.987 CPU sec, 54.874 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518342, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 414, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4005)
[0000][PE] mean and std.dev: (679.89, 780.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1576, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1760.43, 1244.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 382.753 CPU sec, 56.298 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518531, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 312, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (513.29, 548.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1562, 3542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8048)
[0000][PE] mean and std.dev: (2168.06, 1209.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 385.800 CPU sec, 57.097 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518903, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 640, 3098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8874)
[0000][PE] mean and std.dev: (1659.64, 2001.49)
[0000][PE] low and high boundaries for proper pairs: (1, 11762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.07, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1848, 4232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10830)
[0000][PE] mean and std.dev: (2547.79, 1959.54)
[0000][PE] low and high boundaries for proper pairs: (1, 14129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 381.863 CPU sec, 53.278 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518256, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1310, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1260.00, 900.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.59, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1732, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6738)
[0000][PE] mean and std.dev: (2014.67, 1320.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 386.294 CPU sec, 52.588 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518505, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 634, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (849.38, 844.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1347, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1371.00, 418.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 387.127 CPU sec, 55.461 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518321, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 401, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (616.86, 598.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (683, 947, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (1037.00, 555.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 390.995 CPU sec, 60.865 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518602, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 474, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (852.88, 794.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1575, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (1564.46, 867.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 381.433 CPU sec, 58.500 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518935, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 726, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6282)
[0000][PE] mean and std.dev: (1374.43, 1501.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1174, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1735.00, 1171.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 382.350 CPU sec, 48.383 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518391, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 349, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2974)
[0000][PE] mean and std.dev: (638.38, 752.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 383.615 CPU sec, 50.500 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 517915, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 300, 797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2013)
[0000][PE] mean and std.dev: (383.80, 341.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1225, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1575.50, 971.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 386.111 CPU sec, 52.015 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518536, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 1137, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1175.29, 953.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 380.411 CPU sec, 48.225 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518431, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 330, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (892.30, 1020.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1319, 2966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7108)
[0000][PE] mean and std.dev: (2026.95, 1499.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 383.942 CPU sec, 55.172 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518307, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 389, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (604.70, 570.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 1266, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1219.31, 630.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 381.346 CPU sec, 63.126 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205798
	[0000][ M::kt_pipeline] read 1205798 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518911, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 207, 512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1220)
[0000][PE] mean and std.dev: (350.77, 317.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1809, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6246)
[0000][PE] mean and std.dev: (1770.92, 952.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 375.747 CPU sec, 48.132 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205798
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518991, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 813, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5402)
[0000][PE] mean and std.dev: (1016.91, 1083.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1462, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1450.75, 916.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205798 reads in 378.593 CPU sec, 46.052 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518961, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 262, 348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 724)
[0000][PE] mean and std.dev: (222.17, 133.41)
[0000][PE] low and high boundaries for proper pairs: (1, 912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 1760, 2695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5563)
[0000][PE] mean and std.dev: (1784.92, 818.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 376.421 CPU sec, 45.039 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205850
	[0000][ M::kt_pipeline] read 1205850 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518805, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 302, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (525.68, 499.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.93, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 377.902 CPU sec, 48.366 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518780, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 879, 4599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13381)
[0000][PE] mean and std.dev: (2128.52, 2439.86)
[0000][PE] low and high boundaries for proper pairs: (1, 17772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1350, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (237, 2242)
[0000][PE] mean and std.dev: (1268.60, 469.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205850 reads in 379.491 CPU sec, 51.117 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518673, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 424, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (541.07, 480.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1867, 2152, 2768)
[0000][PE] low and high boundaries for computing mean and std.dev: (65, 4570)
[0000][PE] mean and std.dev: (2049.18, 665.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 381.623 CPU sec, 49.191 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205786
	[0000][ M::kt_pipeline] read 1205786 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 519056, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 356, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (575.53, 572.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1177, 3546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8776)
[0000][PE] mean and std.dev: (1978.50, 1853.43)
[0000][PE] low and high boundaries for proper pairs: (1, 11391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 382.915 CPU sec, 52.977 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205818
	[0000][ M::kt_pipeline] read 1205818 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518243, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 350, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (603.39, 612.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1394, 3315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7759)
[0000][PE] mean and std.dev: (2077.00, 1612.77)
[0000][PE] low and high boundaries for proper pairs: (1, 9981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205786 reads in 385.230 CPU sec, 57.578 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205818
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518430, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 391, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (755.94, 788.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1294, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (1211.82, 588.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205818 reads in 384.608 CPU sec, 49.938 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518513, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 324, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2368)
[0000][PE] mean and std.dev: (441.20, 491.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1288, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (1328.93, 577.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 382.993 CPU sec, 50.850 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 518547, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 507, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (967.88, 1012.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1033, 1918, 2766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6232)
[0000][PE] mean and std.dev: (1791.72, 1188.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 382.329 CPU sec, 56.345 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519057, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 937, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (992.93, 987.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 2029, 3386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7960)
[0000][PE] mean and std.dev: (2329.42, 1538.70)
[0000][PE] low and high boundaries for proper pairs: (1, 10247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 382.259 CPU sec, 51.438 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518166, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 425, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (631.21, 561.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1507, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1754.06, 1162.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 380.807 CPU sec, 48.983 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205528
	[0000][ M::kt_pipeline] read 1205528 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518961, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 372, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (776.19, 931.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1418, 2519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (1570.15, 1310.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 375.125 CPU sec, 49.678 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518334, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 261, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1047)
[0000][PE] mean and std.dev: (285.03, 192.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1429, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (1240.47, 579.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205528 reads in 378.035 CPU sec, 55.817 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518526, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 369, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (705.48, 685.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 1766, 3913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11663)
[0000][PE] mean and std.dev: (2344.20, 2547.38)
[0000][PE] low and high boundaries for proper pairs: (1, 15538)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1422, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (1558.50, 730.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 382.867 CPU sec, 55.142 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1205410
	[0000][ M::kt_pipeline] read 1205410 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518750, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 392, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (573.62, 458.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1797, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1845.17, 1142.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 379.508 CPU sec, 48.064 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518762, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 346, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (571.67, 562.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1159, 2802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6432)
[0000][PE] mean and std.dev: (1717.33, 1262.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205410 reads in 378.367 CPU sec, 51.953 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518431, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 373, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3103)
[0000][PE] mean and std.dev: (629.58, 600.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.40, 114.77)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1222, 1428, 3138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6970)
[0000][PE] mean and std.dev: (2235.82, 1756.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 380.095 CPU sec, 50.266 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518270, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 353, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (563.13, 602.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1468, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (503, 2453)
[0000][PE] mean and std.dev: (1433.33, 317.12)
[0000][PE] low and high boundaries for proper pairs: (113, 2843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 378.135 CPU sec, 49.453 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518600, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 478, 899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (597.08, 427.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1669, 2979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6861)
[0000][PE] mean and std.dev: (2205.67, 1536.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 386.486 CPU sec, 53.804 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518447, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 380, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2865)
[0000][PE] mean and std.dev: (576.92, 615.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1132, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3398)
[0000][PE] mean and std.dev: (1225.60, 657.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 382.861 CPU sec, 49.549 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518257, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 456, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (844.67, 858.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1693, 3832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9406)
[0000][PE] mean and std.dev: (2501.24, 1959.28)
[0000][PE] low and high boundaries for proper pairs: (1, 12193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 383.458 CPU sec, 50.201 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518585, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 633, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6310)
[0000][PE] mean and std.dev: (1296.70, 1468.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1411, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (1312.13, 720.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 379.031 CPU sec, 47.061 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518722, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 838, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (913.04, 742.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1371, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (1250.31, 544.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 380.214 CPU sec, 45.880 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518331, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1063, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6201)
[0000][PE] mean and std.dev: (1273.58, 1041.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1165, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4828)
[0000][PE] mean and std.dev: (1308.67, 734.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 381.682 CPU sec, 45.832 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205856
	[0000][ M::kt_pipeline] read 1205856 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518298, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 915, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1322.83, 1503.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1807, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (2182.39, 1520.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 385.642 CPU sec, 52.979 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205856
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518400, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 388, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (650.64, 671.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1734, 2163, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (2056.70, 608.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205856 reads in 383.707 CPU sec, 53.928 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518658, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 443, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2440)
[0000][PE] mean and std.dev: (502.04, 405.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.83)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1931, 3087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7037)
[0000][PE] mean and std.dev: (2177.44, 1480.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 377.996 CPU sec, 46.550 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517982, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 235, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (746.31, 854.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.52, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1416, 2135, 3905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8883)
[0000][PE] mean and std.dev: (2212.57, 1203.19)
[0000][PE] low and high boundaries for proper pairs: (1, 11372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 381.215 CPU sec, 52.495 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518937, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 396, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1432)
[0000][PE] mean and std.dev: (373.71, 254.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.33, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1909, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5244)
[0000][PE] mean and std.dev: (1803.05, 961.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 382.602 CPU sec, 51.443 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518832, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 451, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2567)
[0000][PE] mean and std.dev: (527.09, 508.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.70)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1428, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (1136.77, 503.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3742)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 381.521 CPU sec, 48.754 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518384, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 440, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (753.41, 747.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.45, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1539, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (1750.76, 1159.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 382.917 CPU sec, 49.675 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518150, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 294, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (869.60, 1113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1142, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1285.56, 730.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 384.408 CPU sec, 49.127 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518637, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 876, 2625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7205)
[0000][PE] mean and std.dev: (1250.67, 1228.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1532, 4490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11274)
[0000][PE] mean and std.dev: (2889.69, 2931.26)
[0000][PE] low and high boundaries for proper pairs: (1, 14666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 378.804 CPU sec, 53.530 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 518566, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 286, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 958)
[0000][PE] mean and std.dev: (268.25, 115.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1207)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1342, 2249, 3402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7522)
[0000][PE] mean and std.dev: (2678.35, 1848.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 377.421 CPU sec, 53.369 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 519009, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 384, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (729.14, 744.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1562, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6671)
[0000][PE] mean and std.dev: (1888.78, 1111.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 377.519 CPU sec, 49.898 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518225, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 421, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (1180.94, 1384.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 2530, 3592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8936)
[0000][PE] mean and std.dev: (2362.36, 1343.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 381.091 CPU sec, 51.310 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518460, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 566, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (779.83, 794.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1755, 3208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7274)
[0000][PE] mean and std.dev: (1827.82, 1115.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 381.002 CPU sec, 51.201 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518843, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 392, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4242)
[0000][PE] mean and std.dev: (893.04, 929.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1368, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1525.36, 907.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 378.582 CPU sec, 46.646 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 518651, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 293, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1853)
[0000][PE] mean and std.dev: (406.51, 404.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1394, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1268.00, 755.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 378.374 CPU sec, 49.027 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517664, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 449, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1806)
[0000][PE] mean and std.dev: (457.69, 292.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1677, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5919)
[0000][PE] mean and std.dev: (1911.00, 1026.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 385.451 CPU sec, 45.295 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518319, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 856, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (716.32, 677.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1966, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5166)
[0000][PE] mean and std.dev: (1652.07, 787.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 380.285 CPU sec, 44.151 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517671, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 398, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1036.48, 1213.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1285, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1283.00, 693.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 385.526 CPU sec, 51.454 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518608, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 315, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (630.66, 695.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1324, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4040)
[0000][PE] mean and std.dev: (1538.93, 707.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 382.257 CPU sec, 49.576 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518419, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 1185, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7678)
[0000][PE] mean and std.dev: (1674.57, 1871.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1628, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1414.67, 517.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 386.601 CPU sec, 52.505 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518495, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 450, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (1411.89, 1858.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1952, 6331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16439)
[0000][PE] mean and std.dev: (3012.46, 2452.52)
[0000][PE] low and high boundaries for proper pairs: (1, 21493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 380.901 CPU sec, 54.607 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205832
	[0000][ M::kt_pipeline] read 1205832 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518317, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 346, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (907.69, 965.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (696, 2359, 5993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16587)
[0000][PE] mean and std.dev: (3423.00, 3433.84)
[0000][PE] low and high boundaries for proper pairs: (1, 21884)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1827, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5789)
[0000][PE] mean and std.dev: (1780.93, 1052.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 381.226 CPU sec, 46.929 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518079, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 445, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (946.25, 916.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1699, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6664)
[0000][PE] mean and std.dev: (1632.19, 996.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205832 reads in 384.619 CPU sec, 50.219 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518486, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 339, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (613.78, 669.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1238, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1135.41, 647.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 383.110 CPU sec, 56.922 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518823, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 388, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2564)
[0000][PE] mean and std.dev: (527.18, 483.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.59, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1613, 3831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9235)
[0000][PE] mean and std.dev: (2447.46, 2072.72)
[0000][PE] low and high boundaries for proper pairs: (1, 11937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 380.277 CPU sec, 52.548 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518158, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 310, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1730)
[0000][PE] mean and std.dev: (402.05, 369.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1159, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (1250.18, 741.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 384.258 CPU sec, 52.143 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518168, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 316, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (883.55, 1121.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1352, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1405.78, 768.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 382.320 CPU sec, 46.209 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518101, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 283, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3335)
[0000][PE] mean and std.dev: (650.13, 713.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1614, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7071)
[0000][PE] mean and std.dev: (2047.19, 1396.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 379.958 CPU sec, 44.975 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518614, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 423, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (590.95, 520.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.19, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1592, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5027)
[0000][PE] mean and std.dev: (1517.87, 687.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 381.796 CPU sec, 48.612 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518848, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 1127, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4928)
[0000][PE] mean and std.dev: (1090.52, 1213.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (441, 1443, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4743)
[0000][PE] mean and std.dev: (1454.18, 1172.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 378.266 CPU sec, 50.270 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518350, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 269, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (577.29, 668.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1757, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6412)
[0000][PE] mean and std.dev: (2028.70, 1272.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 385.340 CPU sec, 50.170 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518518, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 211, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (897.09, 1253.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1088, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1207.19, 747.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 381.295 CPU sec, 48.458 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518438, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 390, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2692)
[0000][PE] mean and std.dev: (645.39, 646.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1216, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3561)
[0000][PE] mean and std.dev: (1212.54, 488.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 386.030 CPU sec, 49.273 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518825, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 310, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 998)
[0000][PE] mean and std.dev: (316.58, 202.72)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1562, 2891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6435)
[0000][PE] mean and std.dev: (2182.88, 1618.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 382.012 CPU sec, 47.476 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518794, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 644, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (691.67, 638.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1273, 2699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5895)
[0000][PE] mean and std.dev: (1833.41, 1279.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 382.410 CPU sec, 49.859 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517746, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 461, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (866.96, 847.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1160, 3044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7394)
[0000][PE] mean and std.dev: (1681.33, 1328.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 382.764 CPU sec, 57.527 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518444, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 480, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5763)
[0000][PE] mean and std.dev: (1169.91, 1209.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1609, 4011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9595)
[0000][PE] mean and std.dev: (2326.15, 1532.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 382.470 CPU sec, 51.517 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205524
	[0000][ M::kt_pipeline] read 1205524 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518023, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 307, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (653.72, 716.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1872, 2818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (2085.00, 1230.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 387.880 CPU sec, 57.661 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518630, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 325, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (412.16, 413.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1652, 1860, 3890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8366)
[0000][PE] mean and std.dev: (2490.18, 1323.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205524 reads in 384.624 CPU sec, 54.133 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518585, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 345, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (502.80, 527.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1365, 2313, 3929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9057)
[0000][PE] mean and std.dev: (2717.29, 1913.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 383.459 CPU sec, 50.525 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519031, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 419, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5004)
[0000][PE] mean and std.dev: (837.38, 858.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.50, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1339, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6374)
[0000][PE] mean and std.dev: (1839.00, 1290.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 380.037 CPU sec, 49.549 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518327, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 341, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (525.04, 548.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1842, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (2023.11, 1055.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 382.793 CPU sec, 52.935 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518730, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 497, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (1145.37, 1219.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1222, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1965.29, 1683.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 381.328 CPU sec, 49.106 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518659, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (101, 291, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1811)
[0000][PE] mean and std.dev: (432.34, 459.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1049, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6840)
[0000][PE] mean and std.dev: (1861.64, 1471.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 378.291 CPU sec, 50.569 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518672, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 387, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1077.00, 1342.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 380.116 CPU sec, 52.035 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518957, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 250, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1571)
[0000][PE] mean and std.dev: (301.43, 271.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1193, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4334)
[0000][PE] mean and std.dev: (1236.55, 513.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 380.034 CPU sec, 49.099 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518545, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 534, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (575.33, 515.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1098, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4752)
[0000][PE] mean and std.dev: (1470.00, 1169.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 380.820 CPU sec, 46.761 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518294, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 514, 4450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12846)
[0000][PE] mean and std.dev: (1939.60, 2152.06)
[0000][PE] low and high boundaries for proper pairs: (1, 17044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.75, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1616, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5984)
[0000][PE] mean and std.dev: (1748.15, 1087.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 374.681 CPU sec, 44.287 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518819, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 343, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2042)
[0000][PE] mean and std.dev: (495.17, 407.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1243, 1353, 3944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9346)
[0000][PE] mean and std.dev: (2686.85, 2360.87)
[0000][PE] low and high boundaries for proper pairs: (1, 12130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 378.253 CPU sec, 50.425 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518792, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 607, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (784.94, 780.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1176, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1307.83, 800.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 379.335 CPU sec, 52.727 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518345, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 401, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (962.67, 1038.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1631, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1327.17, 526.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 378.329 CPU sec, 51.546 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205548
	[0000][ M::kt_pipeline] read 1205548 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518679, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 445, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (697.39, 659.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1758, 2411, 4567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10185)
[0000][PE] mean and std.dev: (3300.36, 2130.01)
[0000][PE] low and high boundaries for proper pairs: (1, 12994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 378.524 CPU sec, 43.664 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518979, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 412, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2450)
[0000][PE] mean and std.dev: (615.07, 526.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1459, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4677)
[0000][PE] mean and std.dev: (1420.22, 666.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205548 reads in 380.690 CPU sec, 54.623 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518469, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 466, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (829.43, 960.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.17, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1498, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4994)
[0000][PE] mean and std.dev: (1250.45, 622.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 380.089 CPU sec, 43.197 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518065, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 326, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (503.07, 514.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1566, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (1664.00, 1007.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 382.366 CPU sec, 45.483 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518939, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 865, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (1134.60, 1245.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1702, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1538.94, 746.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 376.054 CPU sec, 42.500 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518208, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 280, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1441)
[0000][PE] mean and std.dev: (396.27, 341.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1412, 4068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10620)
[0000][PE] mean and std.dev: (2053.27, 1713.76)
[0000][PE] low and high boundaries for proper pairs: (1, 13896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 382.973 CPU sec, 48.501 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518813, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 287, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (768.62, 770.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 2567, 3682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9152)
[0000][PE] mean and std.dev: (2137.25, 1327.53)
[0000][PE] low and high boundaries for proper pairs: (1, 11887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 378.758 CPU sec, 37.545 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518512, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 465, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5389)
[0000][PE] mean and std.dev: (948.52, 1131.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1847, 4064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9428)
[0000][PE] mean and std.dev: (2902.80, 2495.88)
[0000][PE] low and high boundaries for proper pairs: (1, 12886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 378.140 CPU sec, 47.199 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518665, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 934, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5607)
[0000][PE] mean and std.dev: (1039.52, 928.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 2035, 3909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9727)
[0000][PE] mean and std.dev: (2730.50, 2260.51)
[0000][PE] low and high boundaries for proper pairs: (1, 12636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 374.792 CPU sec, 49.734 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518575, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 306, 632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1528)
[0000][PE] mean and std.dev: (364.13, 324.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1730, 2894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6310)
[0000][PE] mean and std.dev: (1962.85, 1280.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 376.959 CPU sec, 46.442 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518567, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 913, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (1245.26, 1397.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8831)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 3215, 5427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14191)
[0000][PE] mean and std.dev: (3401.30, 2816.24)
[0000][PE] low and high boundaries for proper pairs: (1, 18573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 380.102 CPU sec, 46.086 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 519223, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 431, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (681.56, 638.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1575, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1549.20, 709.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 375.937 CPU sec, 46.159 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518032, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 606, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (702.40, 597.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1192, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1497.61, 988.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 377.443 CPU sec, 46.822 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518429, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (83, 243, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (761.15, 1050.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1909, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5426)
[0000][PE] mean and std.dev: (1881.67, 994.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 384.169 CPU sec, 56.050 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518753, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 407, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5418)
[0000][PE] mean and std.dev: (694.67, 674.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1285, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1401.63, 825.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 375.967 CPU sec, 47.978 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 517965, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 339, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (499.06, 471.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1338, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1463.11, 750.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 382.297 CPU sec, 52.192 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518654, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 297, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (449.76, 474.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2661)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 916, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1087.00, 678.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 381.426 CPU sec, 52.587 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518526, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 261, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (704.59, 793.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1480, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1879.18, 1373.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 378.157 CPU sec, 57.676 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518239, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 705, 2470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1166.26, 1304.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1494, 1832, 3508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7536)
[0000][PE] mean and std.dev: (1899.71, 1144.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 382.214 CPU sec, 50.577 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518619, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 364, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (455.77, 388.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1277, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1294.93, 584.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 377.890 CPU sec, 42.829 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518487, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 310, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1949)
[0000][PE] mean and std.dev: (436.44, 462.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1135, 1278, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5509)
[0000][PE] mean and std.dev: (1575.00, 992.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 387.521 CPU sec, 53.730 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518480, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 292, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (542.41, 550.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1411, 1880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1368.53, 702.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 380.784 CPU sec, 52.092 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518380, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 785, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4964)
[0000][PE] mean and std.dev: (1022.66, 990.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.32, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 2385, 2656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6242)
[0000][PE] mean and std.dev: (1946.80, 1265.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 382.257 CPU sec, 48.239 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518678, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 616, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1016.19, 1035.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1506, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4335)
[0000][PE] mean and std.dev: (1581.38, 913.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 381.034 CPU sec, 58.066 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518942, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 346, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (722.96, 701.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1748, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6329)
[0000][PE] mean and std.dev: (2028.83, 1455.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 379.527 CPU sec, 53.091 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518800, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 331, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3684)
[0000][PE] mean and std.dev: (716.25, 781.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1871, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7127)
[0000][PE] mean and std.dev: (2053.90, 1246.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 377.683 CPU sec, 47.751 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518433, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 448, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5301)
[0000][PE] mean and std.dev: (995.92, 1203.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1447, 2334, 4940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11926)
[0000][PE] mean and std.dev: (2708.23, 1654.30)
[0000][PE] low and high boundaries for proper pairs: (1, 15419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 379.532 CPU sec, 51.158 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518302, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 432, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5378)
[0000][PE] mean and std.dev: (985.28, 1276.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1386, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (1238.55, 840.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 375.538 CPU sec, 43.746 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518653, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 357, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (645.91, 616.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1346, 1682, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (1595.73, 688.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 373.893 CPU sec, 48.548 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518623, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 250, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2703)
[0000][PE] mean and std.dev: (430.55, 429.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1760, 3169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7503)
[0000][PE] mean and std.dev: (2107.64, 1676.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9670)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 377.677 CPU sec, 48.283 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518681, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 329, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (689.42, 816.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1962, 5621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14353)
[0000][PE] mean and std.dev: (3018.25, 2239.98)
[0000][PE] low and high boundaries for proper pairs: (1, 18719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 377.363 CPU sec, 52.127 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518657, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 770, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1110.78, 1227.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.12, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1446, 2242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5368)
[0000][PE] mean and std.dev: (1591.70, 1264.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 375.674 CPU sec, 50.387 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518802, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 335, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (756.31, 804.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.04, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1513, 5044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13656)
[0000][PE] mean and std.dev: (2411.25, 2333.62)
[0000][PE] low and high boundaries for proper pairs: (1, 17962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 379.407 CPU sec, 47.341 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205696
	[0000][ M::kt_pipeline] read 1205696 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518879, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 397, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (721.21, 787.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.97, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1281, 1864, 2630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (2230.60, 1399.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 370.239 CPU sec, 46.831 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205696
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518774, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 382, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3892)
[0000][PE] mean and std.dev: (891.56, 1009.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1485, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5576)
[0000][PE] mean and std.dev: (1660.13, 851.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205696 reads in 375.726 CPU sec, 55.504 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518303, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 386, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (563.00, 462.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1298, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4712)
[0000][PE] mean and std.dev: (1534.89, 995.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 383.481 CPU sec, 46.977 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518660, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 329, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (468.94, 492.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1255, 1768, 3698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8584)
[0000][PE] mean and std.dev: (2231.00, 1485.33)
[0000][PE] low and high boundaries for proper pairs: (1, 11027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 378.474 CPU sec, 46.168 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518535, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 478, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5834)
[0000][PE] mean and std.dev: (1090.33, 1197.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1266, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1057.89, 449.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 378.393 CPU sec, 50.603 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518611, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (92, 216, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (594.22, 802.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1763, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (1694.06, 959.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 375.705 CPU sec, 47.105 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518831, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 297, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (716.29, 757.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1414, 1759, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5395)
[0000][PE] mean and std.dev: (1840.09, 557.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 381.637 CPU sec, 49.315 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518363, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 426, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5796)
[0000][PE] mean and std.dev: (998.00, 1272.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1714, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5626)
[0000][PE] mean and std.dev: (1875.56, 1147.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 381.531 CPU sec, 50.640 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518346, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 269, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (439.20, 407.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1538, 2971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7003)
[0000][PE] mean and std.dev: (1878.31, 1209.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 379.275 CPU sec, 54.151 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518721, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 224, 1262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (627.48, 799.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 2416, 2975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6671)
[0000][PE] mean and std.dev: (1798.38, 791.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 375.178 CPU sec, 57.352 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518743, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 384, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3923)
[0000][PE] mean and std.dev: (780.39, 750.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1523, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5250)
[0000][PE] mean and std.dev: (1537.31, 976.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 377.924 CPU sec, 51.472 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518503, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 815, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5185)
[0000][PE] mean and std.dev: (1191.73, 1212.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1745, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1710.00, 891.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 380.704 CPU sec, 60.342 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518697, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 629, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (821.87, 709.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1521, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6092)
[0000][PE] mean and std.dev: (1859.36, 1070.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 378.638 CPU sec, 56.090 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518292, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 288, 799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2023)
[0000][PE] mean and std.dev: (460.65, 485.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1344, 2010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (1552.93, 1042.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 381.166 CPU sec, 54.706 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518474, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 369, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (609.47, 541.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.40, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1476, 2988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6986)
[0000][PE] mean and std.dev: (2001.96, 1566.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 378.162 CPU sec, 51.511 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518342, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 581, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3213)
[0000][PE] mean and std.dev: (771.17, 677.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1649, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1497.81, 802.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 381.311 CPU sec, 47.965 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518657, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 813, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6020)
[0000][PE] mean and std.dev: (1200.38, 1198.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1264, 2561, 5465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13867)
[0000][PE] mean and std.dev: (3302.50, 2194.74)
[0000][PE] low and high boundaries for proper pairs: (1, 18068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 372.961 CPU sec, 49.773 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518670, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 409, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1167.41, 1564.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.28, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1452, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (1685.40, 821.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 376.617 CPU sec, 53.216 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205514
	[0000][ M::kt_pipeline] read 1205514 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518466, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 364, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (600.84, 537.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1992, 4603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11825)
[0000][PE] mean and std.dev: (2571.31, 2018.54)
[0000][PE] low and high boundaries for proper pairs: (1, 15436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 374.705 CPU sec, 44.631 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518770, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 431, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (571.88, 620.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1477, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (1211.00, 665.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205514 reads in 374.868 CPU sec, 44.198 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205784
	[0000][ M::kt_pipeline] read 1205784 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518518, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 185, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (428.90, 561.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1421, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (1512.12, 817.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 382.667 CPU sec, 49.643 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205784
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518440, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 706, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4454)
[0000][PE] mean and std.dev: (1006.75, 946.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 975, 4320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11154)
[0000][PE] mean and std.dev: (2139.36, 2182.36)
[0000][PE] low and high boundaries for proper pairs: (1, 14571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205784 reads in 379.104 CPU sec, 54.148 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518181, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 883, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3501)
[0000][PE] mean and std.dev: (953.23, 739.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.47, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1246, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1543.07, 967.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 383.909 CPU sec, 48.594 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205770
	[0000][ M::kt_pipeline] read 1205770 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518741, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 719, 3094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8746)
[0000][PE] mean and std.dev: (1490.71, 1635.41)
[0000][PE] low and high boundaries for proper pairs: (1, 11572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1431, 1945, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 3375)
[0000][PE] mean and std.dev: (1642.44, 577.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 375.469 CPU sec, 48.451 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205770
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519030, 5, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 785, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8215)
[0000][PE] mean and std.dev: (1467.59, 2112.80)
[0000][PE] low and high boundaries for proper pairs: (1, 10881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205770 reads in 377.078 CPU sec, 50.216 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518477, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 363, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (551.84, 504.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 1511, 3506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8174)
[0000][PE] mean and std.dev: (2399.29, 1999.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 385.010 CPU sec, 51.465 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518344, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 324, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (532.88, 620.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1344, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (36, 2606)
[0000][PE] mean and std.dev: (1311.20, 556.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 383.062 CPU sec, 51.787 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518518, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 380, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2208)
[0000][PE] mean and std.dev: (553.89, 521.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1318, 2339, 3620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8224)
[0000][PE] mean and std.dev: (2774.68, 1945.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 378.826 CPU sec, 51.883 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518312, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 499, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1004.19, 1059.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1564, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (1484.41, 863.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 379.430 CPU sec, 49.131 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 519019, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 322, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1002)
[0000][PE] mean and std.dev: (287.38, 196.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1318, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (1410.80, 701.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 376.620 CPU sec, 53.340 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518956, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 388, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (639.78, 597.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 381.174 CPU sec, 50.721 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518551, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 778, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (1103.62, 1172.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1294, 3221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7841)
[0000][PE] mean and std.dev: (1950.60, 1598.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 378.201 CPU sec, 51.967 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518275, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 815, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4729)
[0000][PE] mean and std.dev: (1062.59, 913.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1132, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (1206.40, 790.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 380.628 CPU sec, 45.555 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518425, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 306, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (849.63, 995.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1116, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4440)
[0000][PE] mean and std.dev: (1279.53, 775.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 381.823 CPU sec, 49.912 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205620
	[0000][ M::kt_pipeline] read 1205620 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518309, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 421, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6292)
[0000][PE] mean and std.dev: (1385.33, 1557.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1411, 2431, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6532)
[0000][PE] mean and std.dev: (2470.24, 1406.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 384.264 CPU sec, 53.770 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205454
	[0000][ M::kt_pipeline] read 1205454 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518045, 0, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 827, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6930)
[0000][PE] mean and std.dev: (1080.14, 1086.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1088, 3179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7953)
[0000][PE] mean and std.dev: (1682.45, 1886.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10340)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205620 reads in 382.707 CPU sec, 49.193 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 519039, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 556, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (761.36, 665.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.45, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 2073, 4315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10457)
[0000][PE] mean and std.dev: (2550.94, 1668.57)
[0000][PE] low and high boundaries for proper pairs: (1, 13528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205454 reads in 376.411 CPU sec, 46.354 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518505, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 366, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (606.85, 636.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.42, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1235, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1531.67, 754.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 380.885 CPU sec, 49.969 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518525, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 945, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1273.63, 1328.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1691, 2525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1790.00, 853.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 377.730 CPU sec, 50.844 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205504
	[0000][ M::kt_pipeline] read 1205504 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518155, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 303, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (470.41, 424.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1100, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (1142.47, 531.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 381.040 CPU sec, 52.612 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518435, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 358, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2384)
[0000][PE] mean and std.dev: (666.55, 632.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205504 reads in 378.644 CPU sec, 50.604 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518016, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 928, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (1096.71, 1047.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1727, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5706)
[0000][PE] mean and std.dev: (1948.70, 1072.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 379.291 CPU sec, 49.491 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518612, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 248, 550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1262)
[0000][PE] mean and std.dev: (311.04, 222.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1363, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (1442.24, 586.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 377.685 CPU sec, 52.641 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518699, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 324, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2572)
[0000][PE] mean and std.dev: (479.09, 507.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1201, 2745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6407)
[0000][PE] mean and std.dev: (1823.65, 1226.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 382.611 CPU sec, 54.667 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518568, 3, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 981, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6219)
[0000][PE] mean and std.dev: (1254.88, 1244.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 379.716 CPU sec, 47.062 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205648
	[0000][ M::kt_pipeline] read 1205648 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518854, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 305, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (947.52, 1116.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1955, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1741.20, 1015.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 378.736 CPU sec, 45.939 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205648
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518442, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 319, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (774.57, 864.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1653, 3134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7044)
[0000][PE] mean and std.dev: (1936.42, 1139.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205648 reads in 376.329 CPU sec, 43.107 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 518415, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 318, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (770.18, 928.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1232, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (1025.00, 393.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 381.571 CPU sec, 46.487 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518673, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 323, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1040)
[0000][PE] mean and std.dev: (310.79, 183.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1597, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7260)
[0000][PE] mean and std.dev: (1942.80, 1321.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 381.235 CPU sec, 51.924 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518939, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 417, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5078)
[0000][PE] mean and std.dev: (829.68, 818.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1462, 4115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9881)
[0000][PE] mean and std.dev: (2510.62, 1639.69)
[0000][PE] low and high boundaries for proper pairs: (1, 12764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 376.683 CPU sec, 43.229 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518261, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 512, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (658.84, 657.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1132, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1280.95, 884.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 376.315 CPU sec, 47.631 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518448, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 774, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6685)
[0000][PE] mean and std.dev: (1297.82, 1506.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.29, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1589, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5295)
[0000][PE] mean and std.dev: (1872.69, 868.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 386.124 CPU sec, 47.536 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518953, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1132, 3138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8732)
[0000][PE] mean and std.dev: (1619.07, 1457.61)
[0000][PE] low and high boundaries for proper pairs: (1, 11529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1562, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1688.69, 906.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 373.636 CPU sec, 46.280 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518220, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 268, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (517.26, 535.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1852, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6751)
[0000][PE] mean and std.dev: (1968.00, 1524.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 382.985 CPU sec, 51.413 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518203, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 296, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (720.31, 749.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 378.262 CPU sec, 43.710 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518769, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 350, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (786.29, 815.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1140, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1347.73, 577.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 377.137 CPU sec, 49.392 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518523, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 1107, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1296.32, 1279.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.55, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1697, 2573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5881)
[0000][PE] mean and std.dev: (1884.53, 1276.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 381.110 CPU sec, 50.864 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518384, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 802, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (1048.13, 1121.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1550, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1482.58, 735.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 381.985 CPU sec, 53.257 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519135, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 377, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4371)
[0000][PE] mean and std.dev: (904.73, 838.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.24, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1501, 4523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11405)
[0000][PE] mean and std.dev: (2617.24, 2094.21)
[0000][PE] low and high boundaries for proper pairs: (1, 14846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 376.594 CPU sec, 47.812 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518232, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 358, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (654.26, 717.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.32, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1416, 3602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9122)
[0000][PE] mean and std.dev: (2120.00, 1716.97)
[0000][PE] low and high boundaries for proper pairs: (1, 11882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 379.306 CPU sec, 53.026 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518686, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 330, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (760.58, 777.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1723, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5203)
[0000][PE] mean and std.dev: (1782.85, 1189.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 381.531 CPU sec, 56.458 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205756
	[0000][ M::kt_pipeline] read 1205756 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518391, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 342, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3808)
[0000][PE] mean and std.dev: (845.19, 953.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 2080, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4855)
[0000][PE] mean and std.dev: (2004.29, 987.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 380.279 CPU sec, 48.194 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205756
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518650, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 693, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (961.95, 872.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1211, 2409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5573)
[0000][PE] mean and std.dev: (1551.19, 1160.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205756 reads in 378.456 CPU sec, 48.182 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518635, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 342, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1345)
[0000][PE] mean and std.dev: (348.68, 295.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1752, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3602)
[0000][PE] mean and std.dev: (1464.17, 643.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 373.090 CPU sec, 46.748 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518324, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 384, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (895.29, 1095.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1455, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7911)
[0000][PE] mean and std.dev: (2167.40, 1570.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 380.194 CPU sec, 46.734 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518528, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 365, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4555)
[0000][PE] mean and std.dev: (880.47, 1085.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1548, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1751.06, 1065.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 380.894 CPU sec, 49.807 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518832, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 323, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2510)
[0000][PE] mean and std.dev: (440.05, 368.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1380, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5292)
[0000][PE] mean and std.dev: (1654.29, 1080.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 380.824 CPU sec, 53.121 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518548, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 408, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3031)
[0000][PE] mean and std.dev: (632.33, 483.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 1135, 4430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11846)
[0000][PE] mean and std.dev: (2121.46, 1922.46)
[0000][PE] low and high boundaries for proper pairs: (1, 15554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 381.495 CPU sec, 53.866 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518626, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 648, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1005.43, 1106.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.21, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1807, 3482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8244)
[0000][PE] mean and std.dev: (2008.92, 1159.93)
[0000][PE] low and high boundaries for proper pairs: (1, 10625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 379.179 CPU sec, 48.524 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1205740
	[0000][ M::kt_pipeline] read 1205740 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 518816, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 309, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1461)
[0000][PE] mean and std.dev: (372.64, 313.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 2070, 3154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7200)
[0000][PE] mean and std.dev: (2116.75, 1643.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 379.168 CPU sec, 53.979 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205740
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518764, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 312, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2811)
[0000][PE] mean and std.dev: (605.64, 671.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1733, 3867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9603)
[0000][PE] mean and std.dev: (2299.71, 1767.43)
[0000][PE] low and high boundaries for proper pairs: (1, 12471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205740 reads in 373.470 CPU sec, 49.061 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205810
	[0000][ M::kt_pipeline] read 1205810 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518231, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 553, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2147)
[0000][PE] mean and std.dev: (490.26, 286.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1171, 3075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7037)
[0000][PE] mean and std.dev: (1825.56, 1472.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 380.098 CPU sec, 49.946 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205714
	[0000][ M::kt_pipeline] read 1205714 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205810
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518810, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 337, 450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 944)
[0000][PE] mean and std.dev: (331.12, 182.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1484, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1417.59, 953.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205810 reads in 380.040 CPU sec, 48.639 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205714
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519043, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 427, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (662.31, 658.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1509, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1763.89, 814.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5688)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205714 reads in 375.234 CPU sec, 47.037 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518526, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 372, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5531)
[0000][PE] mean and std.dev: (872.46, 1063.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1283, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (1383.37, 573.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 378.277 CPU sec, 46.995 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518908, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 346, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1133.22, 1473.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 956, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2584)
[0000][PE] mean and std.dev: (984.86, 445.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 380.191 CPU sec, 54.782 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 519017, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 423, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (787.61, 1079.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.45, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1966, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1996.25, 999.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 379.464 CPU sec, 49.791 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518462, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 590, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (983.32, 1057.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1433, 1930, 2865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5729)
[0000][PE] mean and std.dev: (1895.22, 1160.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 382.638 CPU sec, 49.261 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518133, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 409, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (854.96, 840.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1549, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1535.25, 658.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 375.720 CPU sec, 45.266 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518679, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 276, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1794)
[0000][PE] mean and std.dev: (351.65, 334.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.19, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1370, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1111.24, 626.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 374.885 CPU sec, 51.228 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518744, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 368, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1571)
[0000][PE] mean and std.dev: (339.21, 201.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1488, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1765.81, 1285.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 378.266 CPU sec, 45.188 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518395, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 214, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (561.96, 678.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1010, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4939)
[0000][PE] mean and std.dev: (1267.18, 833.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 377.669 CPU sec, 53.995 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518060, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 1210, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1136.32, 961.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1631, 2826, 4012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8774)
[0000][PE] mean and std.dev: (2836.95, 1746.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 383.574 CPU sec, 58.908 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518480, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 349, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (549.61, 524.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1362, 3017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (1735.67, 1213.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 380.136 CPU sec, 54.701 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518309, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 763, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (923.50, 702.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.92, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (2197, 3609, 4023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7675)
[0000][PE] mean and std.dev: (3142.90, 1843.08)
[0000][PE] low and high boundaries for proper pairs: (1, 10515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 377.181 CPU sec, 46.996 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518834, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 521, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3206)
[0000][PE] mean and std.dev: (555.57, 474.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1107, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (1372.61, 935.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 376.121 CPU sec, 54.902 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518125, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 404, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (704.76, 636.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.42, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1402, 1819, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1716.00, 543.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 375.929 CPU sec, 47.112 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205526
	[0000][ M::kt_pipeline] read 1205526 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518302, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 357, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (771.85, 893.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.50, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (542, 1670, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1582.36, 1163.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 375.223 CPU sec, 49.983 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205758
	[0000][ M::kt_pipeline] read 1205758 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518286, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 303, 1129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2979)
[0000][PE] mean and std.dev: (577.38, 608.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1759, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1726.62, 898.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205526 reads in 376.051 CPU sec, 50.611 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205434
	[0000][ M::kt_pipeline] read 1205434 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518952, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 289, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2276)
[0000][PE] mean and std.dev: (374.80, 370.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1390, 1623, 2319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1774.06, 865.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205758 reads in 373.900 CPU sec, 46.683 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518225, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 357, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (461.00, 411.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 1409, 2941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6189)
[0000][PE] mean and std.dev: (1514.82, 704.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205434 reads in 378.070 CPU sec, 48.844 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518964, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 229, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (209.23, 93.76)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1363, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6429)
[0000][PE] mean and std.dev: (1758.28, 1255.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 377.880 CPU sec, 49.900 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518479, 14, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 360, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (614.42, 631.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (349, 1496, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9487)
[0000][PE] mean and std.dev: (2208.64, 2515.97)
[0000][PE] low and high boundaries for proper pairs: (1, 12533)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1399, 1607, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1856.06, 869.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 378.759 CPU sec, 52.802 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518798, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 564, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (687.03, 579.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1633, 3370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8096)
[0000][PE] mean and std.dev: (1971.05, 1580.37)
[0000][PE] low and high boundaries for proper pairs: (1, 10459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 377.093 CPU sec, 43.240 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518756, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 331, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4226)
[0000][PE] mean and std.dev: (929.67, 947.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.97, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1439, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6225)
[0000][PE] mean and std.dev: (1792.17, 1218.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 374.100 CPU sec, 47.138 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518406, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 335, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (544.59, 588.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1220, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1532.94, 810.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 377.719 CPU sec, 49.636 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518664, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 381, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (535.81, 470.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.22, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1440, 3759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9275)
[0000][PE] mean and std.dev: (2305.12, 1957.20)
[0000][PE] low and high boundaries for proper pairs: (1, 12033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 376.061 CPU sec, 51.735 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518268, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 671, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3062)
[0000][PE] mean and std.dev: (742.41, 554.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1346, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4670)
[0000][PE] mean and std.dev: (1554.79, 1002.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 378.141 CPU sec, 52.806 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518696, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 406, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1089.50, 1219.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 2064, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4692)
[0000][PE] mean and std.dev: (1617.64, 856.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 371.085 CPU sec, 44.018 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518538, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 354, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (623.47, 741.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1186, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3826)
[0000][PE] mean and std.dev: (1385.07, 826.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 377.798 CPU sec, 48.712 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518214, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 330, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (589.49, 659.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1307, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5915)
[0000][PE] mean and std.dev: (1809.40, 1434.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 375.369 CPU sec, 45.685 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518157, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 311, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (717.29, 730.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1772, 2326, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4514)
[0000][PE] mean and std.dev: (2142.90, 761.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 377.298 CPU sec, 48.541 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518383, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 359, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (704.35, 852.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.78, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1393, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (1217.88, 571.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 376.940 CPU sec, 50.780 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205708
	[0000][ M::kt_pipeline] read 1205708 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518761, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 299, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (832.57, 1040.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1595, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3407)
[0000][PE] mean and std.dev: (1506.14, 514.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 369.820 CPU sec, 48.417 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205708
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518556, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 460, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1239.53, 1511.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1907, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5425)
[0000][PE] mean and std.dev: (1678.21, 1062.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205708 reads in 377.660 CPU sec, 48.472 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518308, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 341, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (680.74, 670.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1498, 5546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15148)
[0000][PE] mean and std.dev: (2488.69, 2358.14)
[0000][PE] low and high boundaries for proper pairs: (1, 19949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 375.969 CPU sec, 51.610 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205802
	[0000][ M::kt_pipeline] read 1205802 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518576, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 565, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (838.45, 768.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.65)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1503, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1910.63, 1240.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 379.530 CPU sec, 50.648 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205802
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518464, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 346, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (956.89, 1244.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1369, 2947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1766.79, 1219.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205802 reads in 379.338 CPU sec, 47.264 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518350, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 273, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (564.69, 651.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1452, 3125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7693)
[0000][PE] mean and std.dev: (1981.35, 1310.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 381.705 CPU sec, 52.963 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519181, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 342, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3144)
[0000][PE] mean and std.dev: (601.47, 591.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 2031, 3062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7314)
[0000][PE] mean and std.dev: (2047.75, 1541.68)
[0000][PE] low and high boundaries for proper pairs: (1, 9440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 381.646 CPU sec, 53.224 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205556
	[0000][ M::kt_pipeline] read 1205556 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518359, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 359, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (690.97, 611.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.41, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1263, 1568, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (1479.30, 671.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 382.026 CPU sec, 51.183 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205556
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518504, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 356, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4237)
[0000][PE] mean and std.dev: (760.04, 900.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1998, 5922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15822)
[0000][PE] mean and std.dev: (2864.33, 2648.22)
[0000][PE] low and high boundaries for proper pairs: (1, 20772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205556 reads in 379.877 CPU sec, 51.331 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518401, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 308, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (924.18, 1065.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.02, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1491, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1543.43, 703.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 377.254 CPU sec, 46.497 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205826
	[0000][ M::kt_pipeline] read 1205826 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518703, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 424, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (769.61, 724.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1603, 2624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1618.13, 906.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 376.352 CPU sec, 48.690 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205826
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518718, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 278, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1982)
[0000][PE] mean and std.dev: (382.18, 320.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1278, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (1358.94, 607.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205826 reads in 376.611 CPU sec, 41.733 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518775, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 266, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (570.94, 618.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 2028, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1761.07, 1298.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 378.669 CPU sec, 45.355 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518509, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 350, 2540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7076)
[0000][PE] mean and std.dev: (1108.10, 1282.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1185, 1958, 2375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1827.81, 1119.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 379.669 CPU sec, 48.745 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518421, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 349, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (690.19, 635.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 2109, 2958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6696)
[0000][PE] mean and std.dev: (2087.86, 1363.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 377.591 CPU sec, 50.204 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518728, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 337, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1870)
[0000][PE] mean and std.dev: (453.78, 410.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.29, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1353, 4124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10424)
[0000][PE] mean and std.dev: (2396.78, 2110.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 379.583 CPU sec, 50.452 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518305, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (502.73, 572.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1402, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8021)
[0000][PE] mean and std.dev: (1792.71, 1235.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 381.017 CPU sec, 55.834 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518596, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 339, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (526.25, 625.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.44, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1301, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6996)
[0000][PE] mean and std.dev: (1906.50, 1380.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 382.565 CPU sec, 62.918 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518815, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (111, 269, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (555.95, 659.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.85, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1301, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1606.74, 1036.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 378.643 CPU sec, 46.859 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518095, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 364, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (529.04, 443.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (469.02, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1617, 2554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1823.82, 970.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 376.478 CPU sec, 48.238 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518695, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 330, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (827.36, 982.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1782, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4075)
[0000][PE] mean and std.dev: (1507.70, 750.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 374.300 CPU sec, 52.946 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518387, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 567, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (816.40, 757.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.04, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1408, 2639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6181)
[0000][PE] mean and std.dev: (1503.55, 1197.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 374.856 CPU sec, 54.575 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518717, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 378, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (732.83, 805.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1334, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (1761.91, 1003.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 380.385 CPU sec, 55.880 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205732
	[0000][ M::kt_pipeline] read 1205732 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518858, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 341, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (900.38, 1075.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1020, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2729)
[0000][PE] mean and std.dev: (1084.71, 364.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 380.364 CPU sec, 54.089 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205732
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518618, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 357, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (751.75, 853.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1754, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1713.35, 736.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205732 reads in 374.960 CPU sec, 49.471 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205676
	[0000][ M::kt_pipeline] read 1205676 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 519045, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 358, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1087.48, 1334.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1170, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3119)
[0000][PE] mean and std.dev: (1186.75, 472.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 374.917 CPU sec, 53.742 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205676
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519275, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 550, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1040.59, 1084.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1180, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (1138.93, 468.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205676 reads in 375.828 CPU sec, 53.135 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518602, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 653, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1273.03, 1306.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1731, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5233)
[0000][PE] mean and std.dev: (1604.67, 796.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 376.248 CPU sec, 51.423 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518209, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 460, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (863.07, 863.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 376.429 CPU sec, 55.346 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518765, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 365, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (646.00, 731.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1765, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6726)
[0000][PE] mean and std.dev: (1943.79, 1098.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 376.273 CPU sec, 56.793 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518137, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 422, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (757.97, 721.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1841, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1893.20, 824.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 375.197 CPU sec, 50.221 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518545, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 389, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3658)
[0000][PE] mean and std.dev: (679.46, 708.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1736, 4436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11180)
[0000][PE] mean and std.dev: (2568.53, 2001.71)
[0000][PE] low and high boundaries for proper pairs: (1, 14552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 376.174 CPU sec, 52.280 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518431, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 735, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1008.79, 1065.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.56, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1767, 3534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (2093.57, 1742.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 376.175 CPU sec, 52.622 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518639, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 370, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (527.87, 460.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1378, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (1415.59, 594.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 371.702 CPU sec, 57.377 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (42, 518604, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 311, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (779.02, 902.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1383, 2105, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6078)
[0000][PE] mean and std.dev: (2108.38, 1196.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 376.368 CPU sec, 49.804 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 519208, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 403, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (914.82, 1013.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1448, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1720.74, 989.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 373.764 CPU sec, 48.780 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 518705, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 422, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (504.47, 508.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1512, 3129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7689)
[0000][PE] mean and std.dev: (1868.57, 1268.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 368.920 CPU sec, 47.863 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205572
	[0000][ M::kt_pipeline] read 1205572 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518373, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 405, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7368)
[0000][PE] mean and std.dev: (1169.04, 1310.94)
[0000][PE] low and high boundaries for proper pairs: (1, 9753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1413, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1418.79, 774.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 376.434 CPU sec, 51.746 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518806, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1009, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (891.32, 776.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.88, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1572, 1988)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (1449.20, 636.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205572 reads in 372.729 CPU sec, 48.015 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518375, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 516, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (646.67, 567.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1653, 4137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10231)
[0000][PE] mean and std.dev: (2164.09, 1608.30)
[0000][PE] low and high boundaries for proper pairs: (1, 13278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 373.054 CPU sec, 47.508 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205490
	[0000][ M::kt_pipeline] read 1205490 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518260, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 851, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (900.50, 589.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.56, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1676, 2156, 3921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8411)
[0000][PE] mean and std.dev: (2554.53, 1615.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 374.722 CPU sec, 50.503 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518719, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 402, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (503.60, 494.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1694, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1546.38, 843.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205490 reads in 372.505 CPU sec, 53.184 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518387, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 685, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (756.81, 709.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1276, 3261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7639)
[0000][PE] mean and std.dev: (1646.06, 1084.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 370.446 CPU sec, 46.534 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518759, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 345, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (705.12, 782.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 2061, 3045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6911)
[0000][PE] mean and std.dev: (1963.71, 1291.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8844)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 377.124 CPU sec, 53.630 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205654
	[0000][ M::kt_pipeline] read 1205654 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518499, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 727, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (942.53, 975.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1605, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1486.31, 541.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 380.449 CPU sec, 52.539 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205654
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518711, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 375, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (511.57, 493.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 2376, 3632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8398)
[0000][PE] mean and std.dev: (2726.00, 1931.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10781)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205654 reads in 376.579 CPU sec, 48.783 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518712, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 344, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (557.78, 596.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 379.346 CPU sec, 54.412 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518160, 2, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 462, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (691.20, 585.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 382.771 CPU sec, 53.860 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205616
	[0000][ M::kt_pipeline] read 1205616 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 519006, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 302, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3183)
[0000][PE] mean and std.dev: (595.48, 696.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 2082, 3168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7554)
[0000][PE] mean and std.dev: (2193.82, 1438.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 375.983 CPU sec, 52.108 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1205718
	[0000][ M::kt_pipeline] read 1205718 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205616
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518629, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 481, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4866)
[0000][PE] mean and std.dev: (847.25, 916.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1789, 5010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12888)
[0000][PE] mean and std.dev: (2976.05, 2726.77)
[0000][PE] low and high boundaries for proper pairs: (1, 16827)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205616 reads in 382.274 CPU sec, 52.298 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1205812
	[0000][ M::kt_pipeline] read 1205812 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205718
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518021, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 402, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (710.38, 828.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1719, 3105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7125)
[0000][PE] mean and std.dev: (1962.38, 1210.62)
[0000][PE] low and high boundaries for proper pairs: (1, 9135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205718 reads in 379.995 CPU sec, 59.022 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205608
	[0000][ M::kt_pipeline] read 1205608 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518602, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 335, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (757.33, 724.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.60, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1342, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1493.75, 964.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205812 reads in 380.448 CPU sec, 48.740 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518429, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 454, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (836.26, 830.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1364, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (1405.72, 771.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205608 reads in 381.918 CPU sec, 58.481 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518784, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 805, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (951.27, 930.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1638, 2214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4256)
[0000][PE] mean and std.dev: (1662.55, 525.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 384.871 CPU sec, 55.803 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518865, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 385, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (792.38, 798.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1615, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1611.43, 834.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 375.540 CPU sec, 48.381 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518596, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 355, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (697.84, 784.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 378.300 CPU sec, 48.877 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518726, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 231, 459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 995)
[0000][PE] mean and std.dev: (231.80, 116.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1446, 3331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7257)
[0000][PE] mean and std.dev: (2181.25, 1836.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 375.092 CPU sec, 44.488 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518949, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 320, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (491.13, 488.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 942, 2858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6742)
[0000][PE] mean and std.dev: (1554.18, 1225.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 372.821 CPU sec, 49.213 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518450, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 348, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (422.83, 306.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 375.407 CPU sec, 44.725 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518748, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 373, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2011)
[0000][PE] mean and std.dev: (387.52, 249.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1385, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6352)
[0000][PE] mean and std.dev: (1830.76, 1358.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 377.386 CPU sec, 59.852 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518081, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 371, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (699.21, 781.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1244, 1447, 2711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5645)
[0000][PE] mean and std.dev: (1903.20, 1082.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 382.968 CPU sec, 53.327 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518027, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 521, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (646.23, 615.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1388, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4722)
[0000][PE] mean and std.dev: (1419.69, 531.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 379.812 CPU sec, 54.323 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518519, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 359, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (724.35, 685.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.42, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1937, 2819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6027)
[0000][PE] mean and std.dev: (2059.00, 1022.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 374.410 CPU sec, 61.952 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 519069, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 548, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (948.19, 859.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1054, 1625, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4093)
[0000][PE] mean and std.dev: (1523.29, 761.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 369.578 CPU sec, 56.957 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518870, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 379, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2774)
[0000][PE] mean and std.dev: (644.14, 679.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.63)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (17, 752, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (736.42, 865.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1677, 3274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7622)
[0000][PE] mean and std.dev: (2218.29, 1442.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 371.866 CPU sec, 54.582 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518449, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 513, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5937)
[0000][PE] mean and std.dev: (1258.58, 1228.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1208, 1669, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1586.91, 561.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 376.032 CPU sec, 51.756 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518949, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 481, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (729.19, 787.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.53, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1459, 3065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7531)
[0000][PE] mean and std.dev: (1667.69, 1488.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 371.079 CPU sec, 53.282 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518456, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 851, 1191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (762.54, 727.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1263, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1665.12, 1123.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 376.124 CPU sec, 59.822 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 519092, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 329, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (794.91, 858.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.34, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1180, 1361, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1433.77, 582.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 373.629 CPU sec, 43.320 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205736
	[0000][ M::kt_pipeline] read 1205736 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518784, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 316, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3149)
[0000][PE] mean and std.dev: (634.21, 707.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1229, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3930)
[0000][PE] mean and std.dev: (1303.94, 670.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 369.811 CPU sec, 51.767 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518128, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 313, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (433.85, 441.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 1840, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1868.80, 1113.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205736 reads in 378.356 CPU sec, 46.652 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205700
	[0000][ M::kt_pipeline] read 1205700 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518573, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 343, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2120)
[0000][PE] mean and std.dev: (517.12, 472.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1049, 1523, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6464)
[0000][PE] mean and std.dev: (1655.27, 997.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.799 CPU sec, 49.926 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205586
	[0000][ M::kt_pipeline] read 1205586 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205700
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518780, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 200, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (480.75, 591.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1276, 1898, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1760.94, 695.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5940)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205700 reads in 378.025 CPU sec, 52.508 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205586
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 519030, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 505, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5484)
[0000][PE] mean and std.dev: (1057.41, 1202.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1570, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1346.17, 528.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205586 reads in 375.426 CPU sec, 53.084 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205432
	[0000][ M::kt_pipeline] read 1205432 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518331, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 320, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (724.78, 837.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1355, 2847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6659)
[0000][PE] mean and std.dev: (1881.31, 1257.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 378.163 CPU sec, 48.809 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518324, 11, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 331, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (563.85, 520.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (814, 1410, 5563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15061)
[0000][PE] mean and std.dev: (3034.09, 2862.19)
[0000][PE] low and high boundaries for proper pairs: (1, 19810)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1072, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1154.06, 580.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205432 reads in 372.589 CPU sec, 54.736 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518156, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 422, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3046)
[0000][PE] mean and std.dev: (770.39, 771.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.34, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1755, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1900.63, 1044.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 375.199 CPU sec, 45.808 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518422, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 423, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (981.00, 1088.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1637, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8602)
[0000][PE] mean and std.dev: (1999.87, 1451.95)
[0000][PE] low and high boundaries for proper pairs: (1, 11140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 384.806 CPU sec, 54.703 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518704, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 774, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1015.03, 954.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1747, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4169)
[0000][PE] mean and std.dev: (1583.86, 765.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 374.494 CPU sec, 57.292 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518510, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 438, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (882.71, 981.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1448, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1638.60, 740.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 377.954 CPU sec, 50.861 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518635, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 393, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (674.28, 709.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.28, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1537, 2840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6396)
[0000][PE] mean and std.dev: (1828.80, 1021.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 371.923 CPU sec, 51.236 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518769, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 382, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (850.47, 914.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1483, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1631.05, 696.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 376.844 CPU sec, 49.265 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 519350, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 380, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (555.84, 517.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1685, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (1404.22, 454.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 371.593 CPU sec, 61.525 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518153, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 314, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (769.88, 946.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1267, 2302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1687.71, 1231.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 377.487 CPU sec, 69.877 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518471, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 401, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1094.64, 1293.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1238, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (1229.67, 560.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 372.878 CPU sec, 59.037 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518875, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 932, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (817.28, 636.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 1948, 4457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10625)
[0000][PE] mean and std.dev: (2658.47, 1528.22)
[0000][PE] low and high boundaries for proper pairs: (1, 13709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 376.306 CPU sec, 65.892 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518774, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 401, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1926)
[0000][PE] mean and std.dev: (475.80, 403.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.78, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1226, 1686, 2609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1892.20, 1107.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6758)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1330, 2475, 3253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7099)
[0000][PE] mean and std.dev: (2421.38, 1508.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 381.375 CPU sec, 57.128 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 518682, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 908, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (992.83, 939.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1253, 1738, 2789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5861)
[0000][PE] mean and std.dev: (2057.57, 1255.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 377.289 CPU sec, 57.510 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518783, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 494, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (688.65, 720.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.46, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1549, 2105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (1492.93, 507.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.852 CPU sec, 58.107 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518249, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1113, 2572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7166)
[0000][PE] mean and std.dev: (1446.08, 1281.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1297, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1336.40, 654.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 381.730 CPU sec, 68.557 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518863, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 436, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2247)
[0000][PE] mean and std.dev: (497.22, 348.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1463, 2294, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (2121.19, 984.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 374.493 CPU sec, 70.450 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518440, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 355, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1082.92, 1281.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1751, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6272)
[0000][PE] mean and std.dev: (1920.42, 1005.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 379.822 CPU sec, 58.947 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205664
	[0000][ M::kt_pipeline] read 1205664 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518900, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 410, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (762.23, 724.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 2283, 4000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10116)
[0000][PE] mean and std.dev: (2571.26, 2044.83)
[0000][PE] low and high boundaries for proper pairs: (1, 13174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 376.616 CPU sec, 63.196 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1205716
	[0000][ M::kt_pipeline] read 1205716 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205664
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518547, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 444, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (636.54, 574.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1561, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3525)
[0000][PE] mean and std.dev: (1513.81, 644.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205664 reads in 372.666 CPU sec, 70.175 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205716
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518585, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 344, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (691.82, 695.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205716 reads in 373.902 CPU sec, 73.572 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 519133, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 609, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (932.52, 902.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1123, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1712.91, 1016.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 371.297 CPU sec, 65.153 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205550
	[0000][ M::kt_pipeline] read 1205550 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518388, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 314, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (715.64, 882.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1345, 4278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11106)
[0000][PE] mean and std.dev: (2149.82, 1580.51)
[0000][PE] low and high boundaries for proper pairs: (1, 14520)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 379.691 CPU sec, 81.757 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205724
	[0000][ M::kt_pipeline] read 1205724 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205550
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518370, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 359, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2718)
[0000][PE] mean and std.dev: (708.30, 732.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1377, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6892)
[0000][PE] mean and std.dev: (2335.36, 1844.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205550 reads in 381.925 CPU sec, 72.914 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205724
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518293, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 318, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3641)
[0000][PE] mean and std.dev: (724.13, 760.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1647, 4839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12379)
[0000][PE] mean and std.dev: (2695.90, 2281.09)
[0000][PE] low and high boundaries for proper pairs: (1, 16149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205724 reads in 378.948 CPU sec, 78.684 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518568, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 423, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3499)
[0000][PE] mean and std.dev: (709.60, 770.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 891, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (956.92, 628.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 380.853 CPU sec, 73.172 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518756, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1053, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4038)
[0000][PE] mean and std.dev: (1039.88, 727.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1608, 2953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1885.70, 1485.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 374.448 CPU sec, 71.482 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205566
	[0000][ M::kt_pipeline] read 1205566 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518309, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 756, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1446.63, 1677.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1603, 1997, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5383)
[0000][PE] mean and std.dev: (1927.71, 940.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 371.939 CPU sec, 64.451 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518490, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 451, 1450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (661.03, 606.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.43, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1341, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1350.85, 613.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205566 reads in 374.868 CPU sec, 68.368 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518435, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 288, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (968.43, 981.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1759, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1598.07, 937.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 381.855 CPU sec, 78.578 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518290, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 329, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1307)
[0000][PE] mean and std.dev: (312.70, 182.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 2064, 3301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7619)
[0000][PE] mean and std.dev: (2136.80, 1265.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 372.947 CPU sec, 70.020 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518639, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 389, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (1176.97, 1518.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1316, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1355.90, 885.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 378.965 CPU sec, 58.906 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518542, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 302, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (626.87, 640.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1363, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1551.07, 916.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 375.348 CPU sec, 64.457 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518769, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 395, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (758.93, 803.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 2339, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6976)
[0000][PE] mean and std.dev: (2414.93, 1276.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 370.738 CPU sec, 62.977 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518976, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 248, 710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1760)
[0000][PE] mean and std.dev: (330.68, 288.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1239, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6468)
[0000][PE] mean and std.dev: (1464.47, 877.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 373.374 CPU sec, 60.777 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518500, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 523, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (699.58, 630.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4684)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (787, 1135, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5326)
[0000][PE] mean and std.dev: (1275.75, 654.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 376.761 CPU sec, 65.259 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518757, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 454, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (917.50, 940.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 994, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1508.10, 1365.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 376.546 CPU sec, 81.344 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518407, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 361, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (667.79, 583.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1817, 2670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5822)
[0000][PE] mean and std.dev: (1787.95, 1067.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 373.972 CPU sec, 71.518 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518647, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 548, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4735)
[0000][PE] mean and std.dev: (933.86, 1013.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1484, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1756.46, 1091.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 376.873 CPU sec, 62.114 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518699, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 322, 873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2185)
[0000][PE] mean and std.dev: (527.33, 514.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 2103, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5676)
[0000][PE] mean and std.dev: (1958.06, 863.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 374.528 CPU sec, 76.977 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517833, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 271, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (545.53, 584.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1975, 3240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7160)
[0000][PE] mean and std.dev: (2317.67, 1287.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 373.266 CPU sec, 72.535 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518312, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 391, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5650)
[0000][PE] mean and std.dev: (1306.00, 1447.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.56, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1542, 2241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4297)
[0000][PE] mean and std.dev: (1434.27, 670.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 369.950 CPU sec, 47.315 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518261, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 386, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2739)
[0000][PE] mean and std.dev: (607.81, 594.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.46, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1408, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6844)
[0000][PE] mean and std.dev: (2055.00, 1588.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8804)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 376.331 CPU sec, 51.719 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 519327, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 442, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (603.00, 563.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1832, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6540)
[0000][PE] mean and std.dev: (2246.27, 1389.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 372.168 CPU sec, 66.598 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1205728
	[0000][ M::kt_pipeline] read 1205728 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518426, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 341, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5287)
[0000][PE] mean and std.dev: (940.32, 1173.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.87, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1258, 1669, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (1708.56, 894.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 371.932 CPU sec, 67.182 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205592
	[0000][ M::kt_pipeline] read 1205592 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205728
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518615, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 364, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (513.15, 490.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3722)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.50, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1638, 3371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7859)
[0000][PE] mean and std.dev: (2251.21, 1548.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205728 reads in 372.134 CPU sec, 64.371 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1205886
	[0000][ M::kt_pipeline] read 1205886 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518892, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 586, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (669.10, 762.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1568, 3207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7213)
[0000][PE] mean and std.dev: (2116.71, 1307.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205592 reads in 374.838 CPU sec, 92.718 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1205574
	[0000][ M::kt_pipeline] read 1205574 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518311, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 490, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (740.91, 752.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.54, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1278, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (1433.77, 796.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205886 reads in 374.943 CPU sec, 74.503 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518579, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 255, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1497)
[0000][PE] mean and std.dev: (368.55, 325.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1211, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (172, 2322)
[0000][PE] mean and std.dev: (1036.22, 371.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205574 reads in 372.612 CPU sec, 60.679 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518982, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 213, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (460.89, 578.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4728)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1429, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6094)
[0000][PE] mean and std.dev: (1643.44, 920.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 372.278 CPU sec, 74.381 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205684
	[0000][ M::kt_pipeline] read 1205684 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518680, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 284, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2081)
[0000][PE] mean and std.dev: (375.88, 339.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.99, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1586, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (1450.77, 767.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 376.388 CPU sec, 62.457 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205734
	[0000][ M::kt_pipeline] read 1205734 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205684
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518471, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 270, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2052)
[0000][PE] mean and std.dev: (435.56, 416.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1251, 1562, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (27, 3087)
[0000][PE] mean and std.dev: (1344.88, 617.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205684 reads in 375.156 CPU sec, 80.022 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205734
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518750, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 371, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (568.05, 634.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1614, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (1661.83, 735.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205734 reads in 371.748 CPU sec, 71.742 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205414
	[0000][ M::kt_pipeline] read 1205414 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518715, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 364, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (912.73, 1066.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.10, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1254, 1587, 3265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7287)
[0000][PE] mean and std.dev: (2291.47, 1671.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 375.045 CPU sec, 66.910 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205600
	[0000][ M::kt_pipeline] read 1205600 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518256, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 290, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (733.41, 918.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1542, 2958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7248)
[0000][PE] mean and std.dev: (1786.78, 1261.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205414 reads in 377.513 CPU sec, 85.270 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205600
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518826, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 399, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1053.79, 1215.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1429, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5967)
[0000][PE] mean and std.dev: (1925.88, 1350.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205600 reads in 374.669 CPU sec, 95.533 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 519004, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1154, 3172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8958)
[0000][PE] mean and std.dev: (1867.48, 1886.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1034, 1503, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4955)
[0000][PE] mean and std.dev: (1683.65, 1004.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 376.262 CPU sec, 76.066 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518367, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 463, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (772.83, 774.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1588, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5198)
[0000][PE] mean and std.dev: (1663.20, 1064.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 375.781 CPU sec, 87.809 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518323, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 336, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (575.44, 568.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1585, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4944)
[0000][PE] mean and std.dev: (1512.20, 894.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 376.528 CPU sec, 103.284 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205840
	[0000][ M::kt_pipeline] read 1205840 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518071, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 203, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (552.43, 727.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1501, 3387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8081)
[0000][PE] mean and std.dev: (2315.55, 1854.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 377.003 CPU sec, 94.947 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205840
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517683, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 386, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4786)
[0000][PE] mean and std.dev: (823.52, 989.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1383, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1587.15, 865.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205840 reads in 380.125 CPU sec, 91.967 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205782
	[0000][ M::kt_pipeline] read 1205782 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518775, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 360, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (558.03, 556.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1485, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (1376.50, 788.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 376.837 CPU sec, 87.360 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205782
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518628, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 682, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5915)
[0000][PE] mean and std.dev: (1185.74, 1268.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1139, 1548, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1646.32, 722.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205782 reads in 374.928 CPU sec, 80.035 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205576
	[0000][ M::kt_pipeline] read 1205576 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518580, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 469, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4255)
[0000][PE] mean and std.dev: (897.17, 1143.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1282, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1297.16, 695.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 375.514 CPU sec, 69.836 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205576
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517883, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 771, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1069.21, 1154.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1459, 1984, 2757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5353)
[0000][PE] mean and std.dev: (1911.17, 650.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205576 reads in 374.509 CPU sec, 69.693 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1205658
	[0000][ M::kt_pipeline] read 1205658 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518682, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 325, 725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1741)
[0000][PE] mean and std.dev: (372.21, 268.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1441, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1537.77, 1099.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 374.174 CPU sec, 70.843 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205658
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518549, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 373, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1873)
[0000][PE] mean and std.dev: (434.35, 302.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.64, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1349, 3557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8483)
[0000][PE] mean and std.dev: (2037.58, 1729.89)
[0000][PE] low and high boundaries for proper pairs: (1, 10946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205658 reads in 376.590 CPU sec, 51.889 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518458, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 868, 4441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12677)
[0000][PE] mean and std.dev: (2077.62, 2443.43)
[0000][PE] low and high boundaries for proper pairs: (1, 16795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.27, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1704, 2177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1656.62, 579.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 377.832 CPU sec, 63.261 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518692, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 267, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1103.52, 1415.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.31, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1650, 1862, 3177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6231)
[0000][PE] mean and std.dev: (2226.13, 1203.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 372.137 CPU sec, 87.948 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518365, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 313, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1061)
[0000][PE] mean and std.dev: (290.74, 201.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1508, 1840, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1691.23, 530.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 372.587 CPU sec, 52.830 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518732, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 381, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3931)
[0000][PE] mean and std.dev: (834.72, 987.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.29, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1050, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (1010.45, 469.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 368.779 CPU sec, 54.345 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518852, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 424, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (743.33, 720.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.10, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1239, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1411.00, 601.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 372.242 CPU sec, 72.751 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518528, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 397, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2962)
[0000][PE] mean and std.dev: (639.52, 531.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1412, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1924.47, 1280.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 376.651 CPU sec, 65.643 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518634, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 887, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1006.50, 952.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.90, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1303, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4584)
[0000][PE] mean and std.dev: (1518.44, 843.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 373.982 CPU sec, 61.143 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205484
	[0000][ M::kt_pipeline] read 1205484 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518280, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 366, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (672.08, 683.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1360, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7221)
[0000][PE] mean and std.dev: (1732.71, 1330.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 373.100 CPU sec, 76.921 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518935, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 535, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (821.83, 755.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1203, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1285.72, 682.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205484 reads in 371.498 CPU sec, 86.887 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518407, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 316, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5307)
[0000][PE] mean and std.dev: (929.04, 1180.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1700, 3770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8914)
[0000][PE] mean and std.dev: (2657.83, 1974.30)
[0000][PE] low and high boundaries for proper pairs: (1, 11486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 378.144 CPU sec, 85.971 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518507, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 451, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3342)
[0000][PE] mean and std.dev: (651.04, 718.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1824, 2908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6458)
[0000][PE] mean and std.dev: (1932.31, 1075.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 372.895 CPU sec, 81.684 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205488
	[0000][ M::kt_pipeline] read 1205488 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518409, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 580, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (722.39, 715.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.94, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 2134, 2804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5864)
[0000][PE] mean and std.dev: (2277.24, 1309.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 381.833 CPU sec, 77.130 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518252, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 412, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (771.94, 656.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1365, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1400.40, 858.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205488 reads in 373.430 CPU sec, 88.020 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205738
	[0000][ M::kt_pipeline] read 1205738 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518769, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 342, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (559.68, 505.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1352, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (1354.06, 662.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 381.441 CPU sec, 95.905 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205738
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518628, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 266, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 866)
[0000][PE] mean and std.dev: (249.83, 97.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1543, 1858, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (2064.50, 996.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205738 reads in 376.502 CPU sec, 55.875 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205492
	[0000][ M::kt_pipeline] read 1205492 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518280, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 921, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4558)
[0000][PE] mean and std.dev: (1264.24, 1213.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.18, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1516, 3193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7287)
[0000][PE] mean and std.dev: (2280.47, 1663.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 379.281 CPU sec, 89.827 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1205598
	[0000][ M::kt_pipeline] read 1205598 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518480, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 289, 667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1789)
[0000][PE] mean and std.dev: (424.71, 401.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1626, 2474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5346)
[0000][PE] mean and std.dev: (1791.59, 1079.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205492 reads in 379.137 CPU sec, 107.898 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518674, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 813, 2584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7372)
[0000][PE] mean and std.dev: (1373.12, 1574.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 2027, 2707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1942.74, 1037.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205598 reads in 375.334 CPU sec, 67.529 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518680, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 413, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (498.23, 475.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.93, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1130, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7969)
[0000][PE] mean and std.dev: (1784.67, 1378.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 377.385 CPU sec, 85.201 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518497, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 366, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (784.97, 874.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1626, 4046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9980)
[0000][PE] mean and std.dev: (2369.62, 2100.60)
[0000][PE] low and high boundaries for proper pairs: (1, 12947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 369.868 CPU sec, 68.746 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518468, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 538, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5820)
[0000][PE] mean and std.dev: (1208.97, 1451.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1931, 2839, 3984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (2848.91, 1479.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 375.510 CPU sec, 68.565 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205540
	[0000][ M::kt_pipeline] read 1205540 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518318, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 386, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5416)
[0000][PE] mean and std.dev: (973.32, 1202.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1476, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6316)
[0000][PE] mean and std.dev: (1503.17, 892.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 370.137 CPU sec, 62.870 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205546
	[0000][ M::kt_pipeline] read 1205546 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (46, 518373, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 461, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3656)
[0000][PE] mean and std.dev: (760.75, 659.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (469.11, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1078, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (1231.46, 651.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205540 reads in 379.064 CPU sec, 79.452 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518460, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 614, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1066.67, 1109.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.25, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1718, 2808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6434)
[0000][PE] mean and std.dev: (1921.00, 1322.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205546 reads in 376.131 CPU sec, 80.031 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1205578
	[0000][ M::kt_pipeline] read 1205578 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517952, 9, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 560, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (774.65, 795.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 375.917 CPU sec, 60.762 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518987, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 349, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (606.32, 701.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.48, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (748, 1299, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4993)
[0000][PE] mean and std.dev: (1502.65, 1091.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205578 reads in 374.755 CPU sec, 80.761 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518684, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 242, 814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (519.32, 488.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1381, 2348, 3616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8086)
[0000][PE] mean and std.dev: (2249.55, 1212.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 374.826 CPU sec, 70.664 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205496
	[0000][ M::kt_pipeline] read 1205496 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518476, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 367, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (604.46, 608.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.27, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1171, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (1082.22, 473.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 382.138 CPU sec, 95.675 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518489, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 434, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5025)
[0000][PE] mean and std.dev: (1054.58, 1181.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1275, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7073)
[0000][PE] mean and std.dev: (1764.06, 1217.47)
[0000][PE] low and high boundaries for proper pairs: (1, 9107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205496 reads in 375.507 CPU sec, 83.462 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518750, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 317, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (559.69, 581.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1211, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1465.41, 1092.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 371.761 CPU sec, 96.591 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518709, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 753, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1240.76, 1494.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 2139, 3083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6673)
[0000][PE] mean and std.dev: (1970.14, 1107.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 374.554 CPU sec, 94.231 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518308, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 400, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (675.74, 647.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.49, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1189, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (20, 2560)
[0000][PE] mean and std.dev: (1209.29, 704.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4027)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 371.911 CPU sec, 83.008 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205766
	[0000][ M::kt_pipeline] read 1205766 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518366, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 425, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (792.55, 786.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.45, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1516, 1752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (1114.91, 449.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 371.499 CPU sec, 85.392 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205762
	[0000][ M::kt_pipeline] read 1205762 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205766
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518313, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 391, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (467.67, 399.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1651, 4987)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13637)
[0000][PE] mean and std.dev: (2657.36, 2810.91)
[0000][PE] low and high boundaries for proper pairs: (1, 17962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205766 reads in 370.964 CPU sec, 65.532 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518449, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 474, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (879.85, 854.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1476, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6252)
[0000][PE] mean and std.dev: (1510.23, 921.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205762 reads in 371.792 CPU sec, 62.763 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205458
	[0000][ M::kt_pipeline] read 1205458 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518871, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 350, 2863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8321)
[0000][PE] mean and std.dev: (1348.32, 1787.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1071, 1876, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5703)
[0000][PE] mean and std.dev: (1755.05, 947.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 370.144 CPU sec, 101.322 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518370, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 383, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2986)
[0000][PE] mean and std.dev: (703.14, 714.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1507, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1703.05, 1098.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205458 reads in 372.741 CPU sec, 90.527 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205622
	[0000][ M::kt_pipeline] read 1205622 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518296, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 292, 451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1089)
[0000][PE] mean and std.dev: (232.08, 128.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1397, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9790)
[0000][PE] mean and std.dev: (2273.53, 1766.11)
[0000][PE] low and high boundaries for proper pairs: (1, 12682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 372.856 CPU sec, 72.499 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205530
	[0000][ M::kt_pipeline] read 1205530 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205622
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518579, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 340, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (717.06, 847.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1262, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5501)
[0000][PE] mean and std.dev: (1641.27, 990.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205622 reads in 377.429 CPU sec, 92.188 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1205486
	[0000][ M::kt_pipeline] read 1205486 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518570, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 279, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (583.71, 698.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 2449, 3464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8520)
[0000][PE] mean and std.dev: (2353.58, 1534.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205530 reads in 374.987 CPU sec, 75.662 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518765, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 304, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (512.85, 593.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 2111, 3976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9494)
[0000][PE] mean and std.dev: (2803.94, 2117.06)
[0000][PE] low and high boundaries for proper pairs: (1, 12253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205486 reads in 371.916 CPU sec, 84.881 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1205690
	[0000][ M::kt_pipeline] read 1205690 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518246, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 660, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1038.00, 1082.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.94, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1247, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1355.78, 748.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 378.743 CPU sec, 97.422 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205690
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518684, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 407, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (739.92, 770.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.73, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1226, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (162, 2422)
[0000][PE] mean and std.dev: (1215.46, 415.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205690 reads in 373.650 CPU sec, 92.228 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518941, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 350, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3241)
[0000][PE] mean and std.dev: (595.52, 467.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1190, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (1271.73, 745.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 369.684 CPU sec, 72.347 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205644
	[0000][ M::kt_pipeline] read 1205644 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518586, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 529, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (669.81, 493.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1665, 3046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7424)
[0000][PE] mean and std.dev: (2314.68, 1858.39)
[0000][PE] low and high boundaries for proper pairs: (1, 9748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 369.259 CPU sec, 60.871 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1205642
	[0000][ M::kt_pipeline] read 1205642 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205644
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518622, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 441, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (612.74, 597.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 2219, 4011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11053)
[0000][PE] mean and std.dev: (2113.38, 1628.60)
[0000][PE] low and high boundaries for proper pairs: (1, 14574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205644 reads in 373.799 CPU sec, 83.731 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205642
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517961, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 339, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1117.62, 1354.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1571, 1896, 4452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10214)
[0000][PE] mean and std.dev: (2932.69, 2040.10)
[0000][PE] low and high boundaries for proper pairs: (1, 13095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205642 reads in 378.011 CPU sec, 96.643 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518415, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 345, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2448)
[0000][PE] mean and std.dev: (576.84, 548.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1382, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1353.00, 782.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 378.066 CPU sec, 80.620 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205562
	[0000][ M::kt_pipeline] read 1205562 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518560, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 424, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4347)
[0000][PE] mean and std.dev: (788.96, 859.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (474, 1214, 4345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12087)
[0000][PE] mean and std.dev: (2304.00, 2223.36)
[0000][PE] low and high boundaries for proper pairs: (1, 15958)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1376, 1939, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1846.46, 667.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 378.487 CPU sec, 79.082 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518225, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 221, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (704.07, 1028.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1351, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7555)
[0000][PE] mean and std.dev: (1773.60, 1091.89)
[0000][PE] low and high boundaries for proper pairs: (1, 9752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205562 reads in 379.352 CPU sec, 78.161 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205774
	[0000][ M::kt_pipeline] read 1205774 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518243, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 363, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (685.41, 685.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 376.313 CPU sec, 107.250 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1205542
	[0000][ M::kt_pipeline] read 1205542 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205774
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518304, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 430, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (587.83, 484.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1792, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3635)
[0000][PE] mean and std.dev: (1610.85, 473.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205774 reads in 374.470 CPU sec, 89.752 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1205652
	[0000][ M::kt_pipeline] read 1205652 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518093, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 386, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (570.39, 557.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.72, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (543, 932, 3575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9639)
[0000][PE] mean and std.dev: (1537.56, 1405.96)
[0000][PE] low and high boundaries for proper pairs: (1, 12671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205542 reads in 373.745 CPU sec, 66.995 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000292 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205652
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518817, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 338, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3455)
[0000][PE] mean and std.dev: (676.65, 642.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1679, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3230)
[0000][PE] mean and std.dev: (1522.20, 608.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205652 reads in 374.529 CPU sec, 96.521 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518898, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 351, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (744.11, 857.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.54, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1991, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (2219.00, 1307.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 371.430 CPU sec, 87.419 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1205780
	[0000][ M::kt_pipeline] read 1205780 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518338, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 493, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (731.46, 722.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1438, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1541.76, 587.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 374.917 CPU sec, 88.383 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518307, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 347, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (801.74, 838.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.28, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1976, 3626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8654)
[0000][PE] mean and std.dev: (2252.50, 1687.10)
[0000][PE] low and high boundaries for proper pairs: (1, 11168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205780 reads in 374.357 CPU sec, 88.589 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205880
	[0000][ M::kt_pipeline] read 1205880 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518372, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 228, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (848.12, 1075.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.36, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1875, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7310)
[0000][PE] mean and std.dev: (1870.74, 1350.02)
[0000][PE] low and high boundaries for proper pairs: (1, 9400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 376.546 CPU sec, 77.804 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205880
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518536, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 492, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (784.52, 793.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 680, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1040.60, 784.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205880 reads in 372.103 CPU sec, 83.603 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518790, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 416, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (606.53, 563.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 980, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (1317.57, 1091.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 374.336 CPU sec, 91.523 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518779, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 284, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (767.48, 794.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1873, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7159)
[0000][PE] mean and std.dev: (2406.81, 1718.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 373.795 CPU sec, 69.255 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1205674
	[0000][ M::kt_pipeline] read 1205674 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518221, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 549, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (670.15, 603.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1934, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5901)
[0000][PE] mean and std.dev: (1803.24, 995.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 371.936 CPU sec, 63.505 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205674
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518660, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 273, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (410.54, 403.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.39, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1635, 2529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5207)
[0000][PE] mean and std.dev: (1458.89, 894.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205674 reads in 374.128 CPU sec, 72.187 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518635, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 822, 2629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7369)
[0000][PE] mean and std.dev: (1418.12, 1674.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.80, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 2013, 3160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7220)
[0000][PE] mean and std.dev: (2425.95, 1618.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 375.505 CPU sec, 81.217 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518447, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 392, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (726.51, 758.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1240, 1739, 2211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1517.25, 652.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 373.867 CPU sec, 81.728 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518392, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 333, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1964)
[0000][PE] mean and std.dev: (406.16, 337.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1430, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1401.00, 595.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 375.460 CPU sec, 67.789 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518514, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 482, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (890.60, 944.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1531, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1488.89, 1061.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6905)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 374.376 CPU sec, 80.117 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205764
	[0000][ M::kt_pipeline] read 1205764 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518765, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 426, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (530.07, 446.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1066, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (1204.36, 557.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 371.869 CPU sec, 81.639 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518611, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 348, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5313)
[0000][PE] mean and std.dev: (948.31, 1110.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.40, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1409, 2121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1478.00, 963.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205764 reads in 377.628 CPU sec, 62.759 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205660
	[0000][ M::kt_pipeline] read 1205660 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518289, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 448, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (669.23, 670.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.61)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1532, 2126, 4539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10553)
[0000][PE] mean and std.dev: (3029.00, 1984.67)
[0000][PE] low and high boundaries for proper pairs: (1, 13560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 376.774 CPU sec, 59.809 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205660
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518694, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 235, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (562.72, 682.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1146, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (1459.55, 1090.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205660 reads in 378.732 CPU sec, 59.386 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518774, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 495, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (622.93, 585.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1355, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (1334.73, 608.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 373.885 CPU sec, 53.854 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1205702
	[0000][ M::kt_pipeline] read 1205702 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518902, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 358, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3791)
[0000][PE] mean and std.dev: (744.93, 760.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.94, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1374, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (1250.54, 584.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 377.896 CPU sec, 57.828 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1205752
	[0000][ M::kt_pipeline] read 1205752 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205702
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518550, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 352, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (549.33, 476.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1348, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (1263.36, 651.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205702 reads in 375.137 CPU sec, 59.735 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205678
	[0000][ M::kt_pipeline] read 1205678 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205752
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518647, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 361, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (626.54, 767.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.89, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1170, 2459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5957)
[0000][PE] mean and std.dev: (1373.08, 1317.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7706)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205752 reads in 380.565 CPU sec, 61.488 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1205602
	[0000][ M::kt_pipeline] read 1205602 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205678
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518022, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 320, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1289)
[0000][PE] mean and std.dev: (399.86, 322.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1696, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1692.85, 822.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205678 reads in 428.189 CPU sec, 80.657 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1205682
	[0000][ M::kt_pipeline] read 1205682 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205602
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518557, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 681, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (879.48, 776.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1120, 1909, 4272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10576)
[0000][PE] mean and std.dev: (2741.67, 2199.95)
[0000][PE] low and high boundaries for proper pairs: (1, 13728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205602 reads in 378.855 CPU sec, 55.144 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205682
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518275, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 328, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3517)
[0000][PE] mean and std.dev: (729.45, 839.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.83, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1094, 1726, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5963)
[0000][PE] mean and std.dev: (1809.12, 1003.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205682 reads in 374.628 CPU sec, 52.462 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518304, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 404, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3172)
[0000][PE] mean and std.dev: (733.27, 736.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.63, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1662, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5375)
[0000][PE] mean and std.dev: (1784.53, 1233.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 379.502 CPU sec, 61.286 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1205588
	[0000][ M::kt_pipeline] read 1205588 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518386, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 357, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (550.80, 562.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1577, 2560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5882)
[0000][PE] mean and std.dev: (1774.29, 1044.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 377.162 CPU sec, 57.959 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518470, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 323, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (528.87, 500.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.95, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1389, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1355.61, 618.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205588 reads in 409.962 CPU sec, 59.223 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205594
	[0000][ M::kt_pipeline] read 1205594 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518625, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 813, 2920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8154)
[0000][PE] mean and std.dev: (1592.18, 1701.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1702, 3245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7857)
[0000][PE] mean and std.dev: (2447.79, 1935.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 382.590 CPU sec, 68.800 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205596
	[0000][ M::kt_pipeline] read 1205596 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518098, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 474, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (922.57, 866.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 2083, 4378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10868)
[0000][PE] mean and std.dev: (3030.69, 2523.64)
[0000][PE] low and high boundaries for proper pairs: (1, 14113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205594 reads in 381.792 CPU sec, 70.969 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205790
	[0000][ M::kt_pipeline] read 1205790 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518847, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 742, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1014.13, 958.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1711, 2993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7133)
[0000][PE] mean and std.dev: (1925.58, 1171.25)
[0000][PE] low and high boundaries for proper pairs: (1, 9203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205596 reads in 373.301 CPU sec, 67.002 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518879, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 447, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (881.10, 947.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1459, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (1348.94, 585.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205790 reads in 398.357 CPU sec, 62.430 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518713, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 798, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (797.90, 742.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1486, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1661.17, 916.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 376.132 CPU sec, 49.990 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1205638
	[0000][ M::kt_pipeline] read 1205638 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518520, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 409, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6952)
[0000][PE] mean and std.dev: (1472.43, 1871.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.68, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1063, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1364.87, 801.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 370.330 CPU sec, 51.608 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205638
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517967, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 636, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (742.32, 646.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.44, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 926, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (907.54, 434.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205638 reads in 373.987 CPU sec, 61.045 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518639, 10, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 290, 487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1107)
[0000][PE] mean and std.dev: (309.26, 222.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.58, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (80, 3216, 7224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21512)
[0000][PE] mean and std.dev: (3323.00, 3533.89)
[0000][PE] low and high boundaries for proper pairs: (1, 28656)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (861, 1413, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1215.07, 792.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 380.594 CPU sec, 56.208 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1205748
	[0000][ M::kt_pipeline] read 1205748 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518477, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 452, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2971)
[0000][PE] mean and std.dev: (683.50, 668.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 2135, 3871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8905)
[0000][PE] mean and std.dev: (2716.44, 1831.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 381.178 CPU sec, 72.824 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1205710
	[0000][ M::kt_pipeline] read 1205710 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205748
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518588, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 399, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1464)
[0000][PE] mean and std.dev: (349.19, 170.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.53, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 997, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1391.42, 1116.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205748 reads in 376.399 CPU sec, 53.242 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1205468
	[0000][ M::kt_pipeline] read 1205468 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205710
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518610, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 343, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2652)
[0000][PE] mean and std.dev: (581.88, 625.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1390, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1355.67, 489.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205710 reads in 377.503 CPU sec, 54.468 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1205630
	[0000][ M::kt_pipeline] read 1205630 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518210, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 382, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (641.20, 677.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1104, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3819)
[0000][PE] mean and std.dev: (951.18, 435.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205468 reads in 372.540 CPU sec, 55.451 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1205744
	[0000][ M::kt_pipeline] read 1205744 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205630
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518457, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 354, 970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (656.70, 656.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3331)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (808, 1430, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7273)
[0000][PE] mean and std.dev: (1787.05, 1547.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205630 reads in 379.407 CPU sec, 49.480 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205744
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518920, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 677, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3838)
[0000][PE] mean and std.dev: (914.59, 808.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (469.02, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1391, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1246.50, 578.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205744 reads in 372.047 CPU sec, 44.902 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1205640
	[0000][ M::kt_pipeline] read 1205640 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518485, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 532, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (896.83, 844.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1188, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (1175.53, 435.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 383.155 CPU sec, 50.149 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205632
	[0000][ M::kt_pipeline] read 1205632 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518228, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 418, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (638.58, 547.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.60, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1680, 2655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6409)
[0000][PE] mean and std.dev: (1796.76, 1164.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205640 reads in 379.955 CPU sec, 57.492 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1205776
	[0000][ M::kt_pipeline] read 1205776 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205632
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 517824, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 560, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (927.94, 931.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1373, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (1332.08, 711.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205632 reads in 378.572 CPU sec, 53.608 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1205680
	[0000][ M::kt_pipeline] read 1205680 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205776
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518788, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 432, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (784.70, 767.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1382, 1617, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1867.23, 662.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205776 reads in 373.299 CPU sec, 51.960 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205680
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518122, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 349, 948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (519.64, 551.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.58, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1357, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (1427.50, 871.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205680 reads in 404.722 CPU sec, 62.684 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1205704
	[0000][ M::kt_pipeline] read 1205704 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518662, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 448, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4885)
[0000][PE] mean and std.dev: (827.64, 943.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.52, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1300, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3827)
[0000][PE] mean and std.dev: (1377.08, 812.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 401.387 CPU sec, 61.093 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205704
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518760, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 372, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5553)
[0000][PE] mean and std.dev: (928.78, 1079.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.64, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1557, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1757.59, 1012.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205704 reads in 376.313 CPU sec, 53.452 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1205618
	[0000][ M::kt_pipeline] read 1205618 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518767, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 334, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (585.12, 615.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1370, 1914, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (2147.73, 1270.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 381.834 CPU sec, 52.163 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205698
	[0000][ M::kt_pipeline] read 1205698 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205618
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517721, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 301, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2163)
[0000][PE] mean and std.dev: (430.57, 495.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1267, 1687, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1306.00, 660.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205618 reads in 377.928 CPU sec, 57.928 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1205672
	[0000][ M::kt_pipeline] read 1205672 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205698
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518161, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 318, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5365)
[0000][PE] mean and std.dev: (1155.58, 1263.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.92, 114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1598, 2899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7365)
[0000][PE] mean and std.dev: (1803.94, 1419.38)
[0000][PE] low and high boundaries for proper pairs: (1, 9598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205698 reads in 459.037 CPU sec, 77.112 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518543, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 491, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2262)
[0000][PE] mean and std.dev: (537.09, 426.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1272, 3627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9075)
[0000][PE] mean and std.dev: (1886.81, 1330.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205672 reads in 378.044 CPU sec, 60.289 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518554, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 323, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (785.03, 807.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.77, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1155, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1196.13, 728.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 377.902 CPU sec, 49.849 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1205522
	[0000][ M::kt_pipeline] read 1205522 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518944, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 245, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (684.48, 941.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.41, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1352, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1622.68, 858.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 371.944 CPU sec, 49.988 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205580
	[0000][ M::kt_pipeline] read 1205580 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 518631, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 339, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (462.89, 382.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1507, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5579)
[0000][PE] mean and std.dev: (1630.91, 968.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205522 reads in 383.401 CPU sec, 55.590 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205520
	[0000][ M::kt_pipeline] read 1205520 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518540, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 458, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (934.95, 1004.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.96, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 990, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5846)
[0000][PE] mean and std.dev: (1092.59, 861.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205580 reads in 427.237 CPU sec, 67.979 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1205650
	[0000][ M::kt_pipeline] read 1205650 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517815, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 484, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (659.83, 733.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (226, 2243, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8977)
[0000][PE] mean and std.dev: (1717.00, 1571.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11894)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1563, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (1585.56, 707.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205520 reads in 381.677 CPU sec, 49.909 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1205836
	[0000][ M::kt_pipeline] read 1205836 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205650
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 519134, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 275, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3861)
[0000][PE] mean and std.dev: (660.71, 886.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1703, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6008)
[0000][PE] mean and std.dev: (1614.18, 1133.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7721)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205650 reads in 375.402 CPU sec, 50.010 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1205508
	[0000][ M::kt_pipeline] read 1205508 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205836
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518469, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 344, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (615.81, 623.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1406, 2127, 3596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7976)
[0000][PE] mean and std.dev: (2677.12, 1796.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205836 reads in 381.973 CPU sec, 48.884 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205746
	[0000][ M::kt_pipeline] read 1205746 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518692, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 472, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4926)
[0000][PE] mean and std.dev: (1129.35, 1177.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1253, 4209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10199)
[0000][PE] mean and std.dev: (2189.53, 1570.47)
[0000][PE] low and high boundaries for proper pairs: (1, 13194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205508 reads in 384.970 CPU sec, 59.221 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1205582
	[0000][ M::kt_pipeline] read 1205582 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205746
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518298, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 331, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (503.62, 415.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.39, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1373, 2212, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5687)
[0000][PE] mean and std.dev: (2250.94, 1012.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205746 reads in 407.932 CPU sec, 66.928 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1205760
	[0000][ M::kt_pipeline] read 1205760 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518632, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 372, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (808.16, 813.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.94, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1621, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7044)
[0000][PE] mean and std.dev: (1887.89, 1158.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205582 reads in 377.497 CPU sec, 49.097 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1205590
	[0000][ M::kt_pipeline] read 1205590 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205760
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518722, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 359, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (955.33, 1186.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.59, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (721, 1294, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6742)
[0000][PE] mean and std.dev: (1654.40, 1032.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205760 reads in 378.750 CPU sec, 46.600 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205634
	[0000][ M::kt_pipeline] read 1205634 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205590
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518577, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 387, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3426)
[0000][PE] mean and std.dev: (725.19, 764.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205590 reads in 381.018 CPU sec, 59.387 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205568
	[0000][ M::kt_pipeline] read 1205568 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205634
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518484, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 289, 698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1762)
[0000][PE] mean and std.dev: (389.06, 339.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.27, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1612, 3622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9112)
[0000][PE] mean and std.dev: (2003.12, 1485.75)
[0000][PE] low and high boundaries for proper pairs: (1, 11857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205634 reads in 380.033 CPU sec, 47.814 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (40, 518433, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 540, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1327.92, 1646.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (392, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (92, 842)
[0000][PE] mean and std.dev: (468.72, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1953, 3734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8896)
[0000][PE] mean and std.dev: (2444.27, 1829.59)
[0000][PE] low and high boundaries for proper pairs: (1, 11477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205568 reads in 411.635 CPU sec, 65.744 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1205626
	[0000][ M::kt_pipeline] read 1205626 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 518510, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 424, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1165.96, 1448.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 375.887 CPU sec, 53.151 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1205614
	[0000][ M::kt_pipeline] read 1205614 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518702, 8, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 402, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (628.71, 551.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.82, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1394, 2712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6228)
[0000][PE] mean and std.dev: (1765.44, 1102.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205626 reads in 377.548 CPU sec, 51.540 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1205552
	[0000][ M::kt_pipeline] read 1205552 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518765, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 540, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (807.40, 727.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.62, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1331, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3846)
[0000][PE] mean and std.dev: (1341.71, 809.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205614 reads in 378.703 CPU sec, 48.445 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1205502
	[0000][ M::kt_pipeline] read 1205502 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518422, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 210, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (225.83, 128.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.66, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1354, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (1295.87, 815.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205552 reads in 382.305 CPU sec, 54.379 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1205532
	[0000][ M::kt_pipeline] read 1205532 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518309, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 346, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (680.61, 715.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.57, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1260, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1316.79, 774.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205502 reads in 410.681 CPU sec, 76.716 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1205506
	[0000][ M::kt_pipeline] read 1205506 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (44, 518665, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 926, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5051)
[0000][PE] mean and std.dev: (1173.98, 1172.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1504, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1530.92, 797.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205532 reads in 378.607 CPU sec, 47.578 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518348, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 730, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (1024.26, 1013.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.86, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1602, 3821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9227)
[0000][PE] mean and std.dev: (2340.40, 1873.90)
[0000][PE] low and high boundaries for proper pairs: (1, 11930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205506 reads in 382.522 CPU sec, 74.536 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1205448
	[0000][ M::kt_pipeline] read 1205448 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518973, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 494, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (875.35, 1041.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.71)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1477, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1790.88, 900.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 378.889 CPU sec, 61.771 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518477, 10, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 403, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (736.88, 769.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.51, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (183, 777, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (974.30, 1005.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6471)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205448 reads in 402.197 CPU sec, 63.386 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205750
	[0000][ M::kt_pipeline] read 1205750 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518429, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 398, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (562.73, 484.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1165, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4848)
[0000][PE] mean and std.dev: (1574.50, 1080.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 371.621 CPU sec, 49.746 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1205646
	[0000][ M::kt_pipeline] read 1205646 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205750
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518705, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 259, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1690)
[0000][PE] mean and std.dev: (408.24, 427.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1502, 1675, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3776)
[0000][PE] mean and std.dev: (1478.67, 434.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205750 reads in 381.934 CPU sec, 65.139 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1205628
	[0000][ M::kt_pipeline] read 1205628 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205646
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 518631, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 331, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (751.74, 885.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.38, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1128, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1396.00, 748.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205646 reads in 379.127 CPU sec, 54.262 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1205804
	[0000][ M::kt_pipeline] read 1205804 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518393, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 267, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6265)
[0000][PE] mean and std.dev: (905.77, 1256.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.55, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1472, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1663.00, 1072.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205628 reads in 377.681 CPU sec, 52.581 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205570
	[0000][ M::kt_pipeline] read 1205570 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205804
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518522, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 878, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5692)
[0000][PE] mean and std.dev: (1118.57, 1082.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.95, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1236, 2202, 3919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9285)
[0000][PE] mean and std.dev: (2398.25, 1550.03)
[0000][PE] low and high boundaries for proper pairs: (1, 11968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205804 reads in 392.386 CPU sec, 50.175 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518583, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 428, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (531.67, 430.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.60, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1926, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (1873.85, 1093.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205570 reads in 377.890 CPU sec, 47.956 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1205688
	[0000][ M::kt_pipeline] read 1205688 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518190, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 294, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (674.05, 684.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.79, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1877, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5983)
[0000][PE] mean and std.dev: (1837.41, 1028.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 374.315 CPU sec, 55.388 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205636
	[0000][ M::kt_pipeline] read 1205636 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205688
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518850, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 429, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (654.12, 710.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.65, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1395, 1650, 3650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8160)
[0000][PE] mean and std.dev: (2090.81, 1387.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205688 reads in 378.152 CPU sec, 48.943 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1205666
	[0000][ M::kt_pipeline] read 1205666 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205636
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 518722, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 331, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (818.10, 810.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.81, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1097, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5049)
[0000][PE] mean and std.dev: (1237.50, 740.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205636 reads in 373.522 CPU sec, 57.676 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1205604
	[0000][ M::kt_pipeline] read 1205604 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518993, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 463, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (640.89, 588.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.72)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1428, 1894, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (2018.92, 792.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205666 reads in 376.083 CPU sec, 50.863 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1205670
	[0000][ M::kt_pipeline] read 1205670 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518188, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 448, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (617.65, 546.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.76, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1323, 1859, 4154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9816)
[0000][PE] mean and std.dev: (2814.18, 2192.72)
[0000][PE] low and high boundaries for proper pairs: (1, 12647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205604 reads in 383.310 CPU sec, 54.306 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1205516
	[0000][ M::kt_pipeline] read 1205516 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205670
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 518565, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 317, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (514.28, 481.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.49, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1714, 3096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7384)
[0000][PE] mean and std.dev: (1943.78, 1628.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205670 reads in 377.217 CPU sec, 49.373 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518510, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 661, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (837.70, 872.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.35, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1180, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1393.62, 801.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205516 reads in 371.532 CPU sec, 55.810 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1205606
	[0000][ M::kt_pipeline] read 1205606 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 518660, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 868, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (1053.50, 1135.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.57, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (750, 1089, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5748)
[0000][PE] mean and std.dev: (1358.20, 982.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 384.096 CPU sec, 66.843 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1205610
	[0000][ M::kt_pipeline] read 1205610 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205606
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 518940, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 318, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (962.04, 1214.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.71, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1743, 4096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10628)
[0000][PE] mean and std.dev: (2462.15, 2428.77)
[0000][PE] low and high boundaries for proper pairs: (1, 13894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205606 reads in 377.870 CPU sec, 49.755 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1205534
	[0000][ M::kt_pipeline] read 1205534 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518984, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 711, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (765.04, 711.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.69)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1138, 4947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13133)
[0000][PE] mean and std.dev: (2417.73, 2246.51)
[0000][PE] low and high boundaries for proper pairs: (1, 17226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205610 reads in 375.945 CPU sec, 60.829 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1205560
	[0000][ M::kt_pipeline] read 1205560 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 518276, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 348, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (699.54, 614.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4738)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.75, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (350, 1686, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4790)
[0000][PE] mean and std.dev: (1356.50, 1194.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6270)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 2120, 5553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14453)
[0000][PE] mean and std.dev: (3185.00, 2747.45)
[0000][PE] low and high boundaries for proper pairs: (1, 18903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205534 reads in 379.041 CPU sec, 59.970 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1205584
	[0000][ M::kt_pipeline] read 1205584 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 518700, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 781, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5354)
[0000][PE] mean and std.dev: (1329.95, 1439.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.61, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1490, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1406.70, 545.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205560 reads in 380.254 CPU sec, 51.101 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1205624
	[0000][ M::kt_pipeline] read 1205624 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 518835, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 311, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1668)
[0000][PE] mean and std.dev: (368.31, 306.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 1645, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4951)
[0000][PE] mean and std.dev: (1729.25, 758.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205584 reads in 371.826 CPU sec, 58.936 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1205722
	[0000][ M::kt_pipeline] read 1205722 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205624
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518048, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 422, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (826.40, 834.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1372, 1894, 2873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (2167.56, 1305.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205624 reads in 375.783 CPU sec, 52.565 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1205662
	[0000][ M::kt_pipeline] read 1205662 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205722
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518969, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 527, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (733.42, 662.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.91, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 2145, 3125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6909)
[0000][PE] mean and std.dev: (2235.12, 1500.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205722 reads in 373.188 CPU sec, 67.220 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1205554
	[0000][ M::kt_pipeline] read 1205554 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 518321, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 213, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1632)
[0000][PE] mean and std.dev: (289.59, 246.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.59)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 2400, 3789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8917)
[0000][PE] mean and std.dev: (2596.45, 2037.24)
[0000][PE] low and high boundaries for proper pairs: (1, 11481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205662 reads in 374.994 CPU sec, 58.378 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1205730
	[0000][ M::kt_pipeline] read 1205730 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 518381, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 702, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (816.84, 825.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.73, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1122, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2298)
[0000][PE] mean and std.dev: (1060.94, 462.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205554 reads in 382.395 CPU sec, 51.371 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1205510
	[0000][ M::kt_pipeline] read 1205510 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205730
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518904, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 371, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (749.97, 828.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.18, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (665, 1370, 3058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7844)
[0000][PE] mean and std.dev: (1903.73, 1654.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10237)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1498, 5811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15137)
[0000][PE] mean and std.dev: (2833.82, 2317.11)
[0000][PE] low and high boundaries for proper pairs: (1, 19800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205730 reads in 375.761 CPU sec, 66.086 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518426, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 541, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6329)
[0000][PE] mean and std.dev: (1048.04, 1162.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.67, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1892, 3862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9462)
[0000][PE] mean and std.dev: (2176.55, 2260.58)
[0000][PE] low and high boundaries for proper pairs: (1, 12262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205510 reads in 378.295 CPU sec, 68.018 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1205772
	[0000][ M::kt_pipeline] read 1205772 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518709, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 341, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (577.28, 558.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.51, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1175, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (973.20, 512.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 374.221 CPU sec, 63.817 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1205544
	[0000][ M::kt_pipeline] read 1205544 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518311, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 340, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (456.66, 357.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.62, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 2935, 4497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11641)
[0000][PE] mean and std.dev: (3228.50, 2820.87)
[0000][PE] low and high boundaries for proper pairs: (1, 15213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205772 reads in 374.002 CPU sec, 55.761 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1205686
	[0000][ M::kt_pipeline] read 1205686 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 518687, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 520, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1027.09, 1054.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.43, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1743, 3239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7699)
[0000][PE] mean and std.dev: (1829.14, 1243.96)
[0000][PE] low and high boundaries for proper pairs: (1, 9929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205544 reads in 375.758 CPU sec, 60.575 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1205692
	[0000][ M::kt_pipeline] read 1205692 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205686
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 518726, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 296, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4262)
[0000][PE] mean and std.dev: (603.04, 714.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.70, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1370, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1557.00, 788.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205686 reads in 379.968 CPU sec, 64.779 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1205668
	[0000][ M::kt_pipeline] read 1205668 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205692
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 518986, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 401, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (801.07, 797.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.48, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1261, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (1299.20, 655.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205692 reads in 382.039 CPU sec, 63.012 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1205706
	[0000][ M::kt_pipeline] read 1205706 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 518085, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 222, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (452.90, 452.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2989)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 541)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 841)
[0000][PE] mean and std.dev: (468.47, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1752, 3104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7604)
[0000][PE] mean and std.dev: (1956.50, 1335.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205668 reads in 374.078 CPU sec, 55.888 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1205656
	[0000][ M::kt_pipeline] read 1205656 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205706
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 518551, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 260, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (378.31, 472.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.84, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1682, 2437, 5335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12641)
[0000][PE] mean and std.dev: (3620.73, 2751.56)
[0000][PE] low and high boundaries for proper pairs: (1, 16294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205706 reads in 380.054 CPU sec, 67.905 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1205712
	[0000][ M::kt_pipeline] read 1205712 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205656
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 518823, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 489, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (691.35, 654.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.74, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1521, 4006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10002)
[0000][PE] mean and std.dev: (2000.50, 1568.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205656 reads in 373.139 CPU sec, 62.349 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1205754
	[0000][ M::kt_pipeline] read 1205754 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205712
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 518239, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 423, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (644.43, 673.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.50, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1457, 1985, 2429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (1911.75, 891.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205712 reads in 380.917 CPU sec, 43.484 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1205612
	[0000][ M::kt_pipeline] read 1205612 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205754
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 518842, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 355, 723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1711)
[0000][PE] mean and std.dev: (411.39, 299.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.63, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1179, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1634.76, 1287.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205754 reads in 370.186 CPU sec, 62.134 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 167346478, nseq: 1120762
	[0000][ M::kt_pipeline] read 1120762 sequences (167346478 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1205612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 518037, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 495, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (768.64, 663.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 459, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.69, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1655, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1609.07, 714.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1205612 reads in 380.275 CPU sec, 62.438 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1120762
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 482169, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 467, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3233)
[0000][PE] mean and std.dev: (777.14, 769.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (391, 460, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (89, 844)
[0000][PE] mean and std.dev: (468.95, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1473, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1434.83, 865.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1120762 reads in 349.610 CPU sec, 49.180 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.179096 MHz
Runtime profile:

	Time taken for main_mem function: 60237.20 sec

	IO times (sec) :
	Reading IO time (reads) avg: 3280.74, (3280.74, 3280.74)
	Writing IO time (SAM) avg: 5904.37, (5904.37, 5904.37)
	Reading IO time (Reference Genome) avg: 6.05, (6.05, 6.05)
	Index read time avg: 17.36, (17.36, 17.36)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 60213.65
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 60203.84, (60203.84, 60203.84)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 20893.45, (20893.45, 20893.45)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 39148.84, (39148.84, 39148.84)
		SMEM compute avg: 11684.40, (11806.68, 11600.17)
		SAL compute avg: 7601.59, (7750.27, 7336.71)
				MEM_SA avg: 2082.09, (2177.97, 2020.09)

		BSW time, avg: 11851.47, (11872.49, 11832.16)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
