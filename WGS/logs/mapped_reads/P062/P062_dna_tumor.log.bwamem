Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000034 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516448, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 533, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3534)
[0000][PE] mean and std.dev: (838.05, 584.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1248, 2004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1350.08, 843.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 417.239 CPU sec, 23.489 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515903, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 586, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (723.18, 629.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 1207, 3897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10395)
[0000][PE] mean and std.dev: (2235.33, 2192.87)
[0000][PE] low and high boundaries for proper pairs: (1, 13644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 425.308 CPU sec, 23.902 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516266, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 987, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1008.85, 748.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1229, 1439, 4539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11159)
[0000][PE] mean and std.dev: (2331.08, 1886.58)
[0000][PE] low and high boundaries for proper pairs: (1, 14469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 421.598 CPU sec, 23.717 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516509, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 646, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (827.00, 731.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1401, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1742.16, 1079.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 422.037 CPU sec, 23.659 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516800, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1063, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (981.63, 843.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1064, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1202.27, 733.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 422.079 CPU sec, 23.648 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516324, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 948, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1040.21, 846.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 891, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (891.00, 529.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 418.947 CPU sec, 23.506 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516141, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 1269, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4519)
[0000][PE] mean and std.dev: (1267.24, 994.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1304, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (1386.76, 837.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 426.676 CPU sec, 23.960 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516473, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1079, 4095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11607)
[0000][PE] mean and std.dev: (2080.36, 2217.06)
[0000][PE] low and high boundaries for proper pairs: (1, 15363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1651, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1650.39, 832.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5819)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 421.659 CPU sec, 23.642 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516450, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 504, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (837.65, 763.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 992, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (1262.19, 902.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 423.385 CPU sec, 23.706 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516985, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 956, 3423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9499)
[0000][PE] mean and std.dev: (1695.79, 1772.73)
[0000][PE] low and high boundaries for proper pairs: (1, 12537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1495, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1299.08, 675.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 414.265 CPU sec, 23.210 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516682, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 729, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2884)
[0000][PE] mean and std.dev: (809.76, 579.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1234, 1374, 4207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10153)
[0000][PE] mean and std.dev: (2296.08, 1675.05)
[0000][PE] low and high boundaries for proper pairs: (1, 13126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 414.785 CPU sec, 23.261 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516388, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 850, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1131.86, 1090.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1040, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (1240.30, 538.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 422.868 CPU sec, 23.684 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516665, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 840, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2712)
[0000][PE] mean and std.dev: (691.09, 316.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1471, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1375.50, 850.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 420.847 CPU sec, 23.578 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516473, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1089, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (1334.09, 1251.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.28, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 1902, 3747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8901)
[0000][PE] mean and std.dev: (2545.67, 2248.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 418.767 CPU sec, 23.458 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516558, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1082, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1038.17, 710.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1469, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (1533.94, 768.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 422.498 CPU sec, 23.663 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516622, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1059, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6719)
[0000][PE] mean and std.dev: (1583.75, 1624.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1364, 3318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8464)
[0000][PE] mean and std.dev: (2342.84, 2229.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 420.585 CPU sec, 23.623 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516402, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 593, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (908.00, 831.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1097, 1632, 2892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1930.90, 1240.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 418.441 CPU sec, 24.023 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206614
	[0000][ M::kt_pipeline] read 1206614 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516453, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 657, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (718.20, 497.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.21, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1593, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1644.71, 926.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 415.854 CPU sec, 23.442 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206614
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516340, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 1023, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (1038.71, 901.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1279, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4733)
[0000][PE] mean and std.dev: (1534.45, 987.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206614 reads in 417.179 CPU sec, 23.423 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516321, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 369, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (701.48, 723.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1586, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (1518.22, 727.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 410.664 CPU sec, 23.073 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516807, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1217, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4455)
[0000][PE] mean and std.dev: (1078.95, 854.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1415, 2367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1391.11, 691.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 414.864 CPU sec, 23.361 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516306, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 541, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1111.86, 1102.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1266, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5026)
[0000][PE] mean and std.dev: (1505.45, 967.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 416.112 CPU sec, 23.372 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516459, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 754, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6173)
[0000][PE] mean and std.dev: (1231.46, 1349.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1272, 1743, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5679)
[0000][PE] mean and std.dev: (1941.33, 1269.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 414.500 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516716, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 372, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (504.52, 461.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1444, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1667.53, 817.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 412.618 CPU sec, 23.181 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516889, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 269, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (758.06, 822.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 899, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1084.84, 1029.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 413.626 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516360, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 1270, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (1521.46, 1287.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1341, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1490.33, 974.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 412.140 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516457, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 667, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1159.18, 1303.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1287, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (1459.86, 757.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 413.725 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516161, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 569, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4060)
[0000][PE] mean and std.dev: (826.19, 715.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1395, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1538.39, 667.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 415.701 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516286, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1018, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1171.06, 1121.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1096, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1222.05, 776.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 414.099 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516505, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 453, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (797.89, 798.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1000, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (998.93, 412.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 411.986 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516641, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 842, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4979)
[0000][PE] mean and std.dev: (1107.70, 945.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.00, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1225, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (1350.41, 724.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 414.061 CPU sec, 23.287 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516531, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 436, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (497.50, 388.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1239, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (64, 2764)
[0000][PE] mean and std.dev: (1318.07, 528.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 415.348 CPU sec, 23.330 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516685, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 813, 2631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7201)
[0000][PE] mean and std.dev: (1365.48, 1455.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 896, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1264.69, 816.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 413.304 CPU sec, 23.242 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516842, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 649, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (837.74, 669.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1851, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1783.79, 1067.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 409.921 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516480, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 677, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (735.65, 659.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (611, 1082, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1091.00, 717.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 416.608 CPU sec, 23.559 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516437, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 924, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (920.90, 655.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1855, 3433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8275)
[0000][PE] mean and std.dev: (2179.58, 1733.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 411.051 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516578, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 689, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (844.89, 685.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1270, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1250.68, 590.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 410.715 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516773, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 574, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1139.00, 1211.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 1456, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (1354.76, 826.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 412.592 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516376, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 678, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (728.31, 477.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1153, 3738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9382)
[0000][PE] mean and std.dev: (2122.79, 1856.54)
[0000][PE] low and high boundaries for proper pairs: (1, 12204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 411.817 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206540
	[0000][ M::kt_pipeline] read 1206540 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516504, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1148, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1104.33, 932.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 965, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2332)
[0000][PE] mean and std.dev: (861.62, 357.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 413.723 CPU sec, 23.213 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516431, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 703, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1036.21, 1017.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1303, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4803)
[0000][PE] mean and std.dev: (1377.36, 660.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206540 reads in 415.963 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516733, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 380, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (801.78, 796.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (702, 1356, 2041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1323.21, 685.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 409.859 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516111, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 747, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (785.73, 738.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (686, 1060, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5396)
[0000][PE] mean and std.dev: (1491.71, 1163.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 413.613 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516169, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (654, 1072, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3954)
[0000][PE] mean and std.dev: (1150.36, 951.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (512, 1474, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1011.00, 567.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 410.930 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516664, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 578, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1333.19, 1473.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (869, 1095, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1191.47, 485.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 411.593 CPU sec, 23.072 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516391, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 509, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (991.57, 1007.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1505, 4350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11204)
[0000][PE] mean and std.dev: (2335.38, 1816.53)
[0000][PE] low and high boundaries for proper pairs: (1, 14631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 413.135 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516278, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 517, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (950.16, 945.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 1080, 3567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10217)
[0000][PE] mean and std.dev: (1664.71, 1658.66)
[0000][PE] low and high boundaries for proper pairs: (1, 13542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 412.258 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516323, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 1166, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (987.64, 655.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1743, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1799.00, 757.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 412.629 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516967, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 853, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1177.87, 985.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1732, 4011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9979)
[0000][PE] mean and std.dev: (2196.17, 1801.60)
[0000][PE] low and high boundaries for proper pairs: (1, 12963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 410.002 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516158, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 742, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (777.66, 583.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1819, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1874.86, 1135.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 411.122 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516352, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1132, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5542)
[0000][PE] mean and std.dev: (1106.12, 1028.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1416, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1330.00, 665.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 412.745 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516597, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 546, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4541)
[0000][PE] mean and std.dev: (837.33, 742.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.63, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1317, 1457, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1668.21, 847.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 411.694 CPU sec, 23.064 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516182, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 712, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (900.24, 592.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1475, 2180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (1460.87, 727.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 411.174 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206208
	[0000][ M::kt_pipeline] read 1206208 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516277, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 785, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (814.39, 566.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (639, 1622, 2884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7374)
[0000][PE] mean and std.dev: (1988.23, 1459.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 415.143 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516148, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 922, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4269)
[0000][PE] mean and std.dev: (1066.32, 953.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1694, 3123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7307)
[0000][PE] mean and std.dev: (1855.81, 1391.85)
[0000][PE] low and high boundaries for proper pairs: (1, 9399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206208 reads in 413.859 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516583, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 367, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1994)
[0000][PE] mean and std.dev: (410.50, 403.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1538, 2501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1773.73, 946.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 412.321 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516362, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 499, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4077)
[0000][PE] mean and std.dev: (755.26, 735.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1305, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4627)
[0000][PE] mean and std.dev: (1362.72, 826.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 413.817 CPU sec, 23.194 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206242
	[0000][ M::kt_pipeline] read 1206242 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516260, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 698, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (892.10, 739.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1325, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7666)
[0000][PE] mean and std.dev: (1504.06, 1027.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 415.336 CPU sec, 23.308 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516752, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 456, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (750.81, 616.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1258, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (1248.00, 606.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206242 reads in 407.499 CPU sec, 22.799 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516193, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 610, 1432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (906.85, 827.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1731, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4167)
[0000][PE] mean and std.dev: (1476.77, 862.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 411.611 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516317, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 839, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1373.03, 1238.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 1649, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6527)
[0000][PE] mean and std.dev: (1391.08, 1163.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 412.291 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516666, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 496, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1003.42, 1126.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1678, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1589.94, 836.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 409.793 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517089, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 672, 1523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (897.31, 700.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1307, 2897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7363)
[0000][PE] mean and std.dev: (1836.67, 1636.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 408.610 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515854, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 599, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (939.50, 756.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1213, 1623, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1559.54, 629.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 412.523 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516298, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 758, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (818.83, 692.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1135, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (1437.18, 839.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 411.169 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516591, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 915, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (799.53, 453.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1417, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1476.53, 921.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 407.113 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517040, 0, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1302, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1173.09, 913.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1387, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5077)
[0000][PE] mean and std.dev: (1431.90, 680.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 408.847 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516946, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 353, 2443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6991)
[0000][PE] mean and std.dev: (1107.76, 1327.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1740, 3035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1943.88, 1074.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 408.265 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516341, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 865, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1136.05, 1019.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1588, 2341, 3076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6052)
[0000][PE] mean and std.dev: (2455.47, 1065.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 413.431 CPU sec, 23.160 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517000, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 750, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (988.00, 903.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1555, 1716, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6811)
[0000][PE] mean and std.dev: (2246.36, 1295.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 409.791 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516382, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 413, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (661.13, 605.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1452, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1353.21, 687.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 410.650 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517090, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 540, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3591)
[0000][PE] mean and std.dev: (919.59, 874.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (400, 578, 3589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9967)
[0000][PE] mean and std.dev: (1534.55, 1705.43)
[0000][PE] low and high boundaries for proper pairs: (1, 13156)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 1114, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1300.57, 1221.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 410.645 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516585, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 602, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (796.56, 689.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1740, 3791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9271)
[0000][PE] mean and std.dev: (2423.48, 1902.04)
[0000][PE] low and high boundaries for proper pairs: (1, 12011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 409.352 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516869, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 612, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4846)
[0000][PE] mean and std.dev: (900.89, 837.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1268, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5893)
[0000][PE] mean and std.dev: (1685.73, 1350.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 409.107 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516614, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 737, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1079.83, 941.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1193, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6396)
[0000][PE] mean and std.dev: (1840.92, 1558.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 407.985 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516419, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 663, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (711.84, 535.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1273, 2657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5707)
[0000][PE] mean and std.dev: (1635.67, 1103.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 409.243 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516470, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (676, 1030, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1310.43, 957.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (818, 1211, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1087.82, 592.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 408.966 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516537, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 953, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1164.43, 972.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5198)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1436, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3868)
[0000][PE] mean and std.dev: (1498.45, 809.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 409.922 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516897, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 433, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3592)
[0000][PE] mean and std.dev: (758.06, 722.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1474, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1558.38, 919.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 406.145 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516380, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 896, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4730)
[0000][PE] mean and std.dev: (1095.54, 1029.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1144, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (987.20, 528.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 411.810 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516536, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1011, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4349)
[0000][PE] mean and std.dev: (940.04, 919.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1330, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1459.91, 712.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 412.044 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516403, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 272, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2405)
[0000][PE] mean and std.dev: (486.75, 536.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1391, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (1882.13, 1517.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 411.414 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516169, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 554, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (752.36, 636.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1656, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (1481.50, 695.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 413.061 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516506, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (763, 1146, 2355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1457.58, 1060.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1277, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (1275.44, 692.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.243 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516398, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 551, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1032.35, 996.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.21, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1760, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1960.16, 1259.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 411.361 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516724, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1360, 2550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7100)
[0000][PE] mean and std.dev: (1518.30, 1646.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (445, 1334, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (899.50, 586.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 410.090 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516275, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 818, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (999.65, 873.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1151, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1595.23, 1007.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 409.864 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516626, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 944, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4810)
[0000][PE] mean and std.dev: (1143.75, 954.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1230, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (1263.00, 419.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 409.130 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206620
	[0000][ M::kt_pipeline] read 1206620 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516353, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 880, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4376)
[0000][PE] mean and std.dev: (1003.48, 708.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1195, 1330, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1610.40, 911.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 412.160 CPU sec, 23.209 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206620
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516494, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 405, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3995)
[0000][PE] mean and std.dev: (797.30, 794.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 1595, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6043)
[0000][PE] mean and std.dev: (1485.00, 1034.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206620 reads in 411.382 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516898, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 537, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (620.83, 431.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1544, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4140)
[0000][PE] mean and std.dev: (1528.25, 579.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 406.221 CPU sec, 22.799 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206668
	[0000][ M::kt_pipeline] read 1206668 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516625, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (755, 1054, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (1147.59, 715.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1438, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1527.75, 847.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 409.378 CPU sec, 23.032 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206668
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516261, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1264, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1141.81, 735.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1950, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5821)
[0000][PE] mean and std.dev: (1686.77, 851.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7399)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206668 reads in 417.218 CPU sec, 23.409 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516088, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 830, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4450)
[0000][PE] mean and std.dev: (891.17, 592.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1593, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1700.36, 973.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 412.351 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516535, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 613, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4938)
[0000][PE] mean and std.dev: (1130.30, 1186.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1453, 2084, 2647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5035)
[0000][PE] mean and std.dev: (2186.57, 932.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 407.074 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516464, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 812, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (766.80, 560.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1512, 5823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15551)
[0000][PE] mean and std.dev: (2616.81, 2539.30)
[0000][PE] low and high boundaries for proper pairs: (1, 20415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 413.943 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516803, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 750, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (866.09, 673.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.62, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1221, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (1259.18, 529.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 407.146 CPU sec, 22.828 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516112, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 505, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (775.14, 718.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1543, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4296)
[0000][PE] mean and std.dev: (1556.63, 784.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 411.856 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516338, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 465, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (496.84, 374.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1237, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4732)
[0000][PE] mean and std.dev: (1340.62, 932.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 410.172 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516534, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 852, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5081)
[0000][PE] mean and std.dev: (1229.79, 1148.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1632, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5410)
[0000][PE] mean and std.dev: (1739.78, 889.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 409.234 CPU sec, 22.948 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516378, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 667, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1025.27, 980.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1676, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6445)
[0000][PE] mean and std.dev: (1925.08, 919.67)
[0000][PE] low and high boundaries for proper pairs: (1, 8260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 408.124 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206214
	[0000][ M::kt_pipeline] read 1206214 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516505, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 756, 2384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6506)
[0000][PE] mean and std.dev: (1308.16, 1472.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1507, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1557.58, 787.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 408.346 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516830, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 995, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6169)
[0000][PE] mean and std.dev: (1458.96, 1363.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1425, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1609.80, 1176.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206214 reads in 408.951 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206532
	[0000][ M::kt_pipeline] read 1206532 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516455, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 986, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (891.50, 650.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 411.363 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516209, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 335, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2829)
[0000][PE] mean and std.dev: (721.21, 631.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (991, 1355, 2396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1561.83, 935.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206532 reads in 410.019 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516605, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 769, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (975.68, 823.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1485, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1780.82, 1267.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 408.004 CPU sec, 22.929 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516847, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 789, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4008)
[0000][PE] mean and std.dev: (1050.83, 952.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1250, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1440.09, 1008.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 406.947 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516334, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 666, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (1001.72, 951.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1563, 2507, 3703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7983)
[0000][PE] mean and std.dev: (2586.85, 1459.39)
[0000][PE] low and high boundaries for proper pairs: (1, 10123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 408.988 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516752, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 410, 976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (582.16, 540.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1217, 2133)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1581.60, 1199.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 405.801 CPU sec, 22.820 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516527, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 679, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (668.87, 544.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1508, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (1392.92, 458.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 406.101 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516750, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 404, 861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (547.85, 466.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (864, 1326, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (1501.70, 868.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 408.050 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206242
	[0000][ M::kt_pipeline] read 1206242 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516288, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (838, 1755, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6238)
[0000][PE] mean and std.dev: (1834.00, 1344.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (441, 1238, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5541)
[0000][PE] mean and std.dev: (1322.05, 1112.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.204 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516530, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 500, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (708.31, 604.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1415, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (1529.10, 838.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206242 reads in 412.715 CPU sec, 23.107 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516616, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 615, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3142)
[0000][PE] mean and std.dev: (792.62, 740.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1135, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (1242.95, 781.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 412.110 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516614, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1047, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1042.47, 688.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1522, 3963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9317)
[0000][PE] mean and std.dev: (2565.46, 1985.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 410.345 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516407, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 514, 1772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1062.06, 902.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1371, 2478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1555.53, 1091.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 411.168 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516323, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 615, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (854.20, 781.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1715, 2738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1643.18, 1146.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 411.369 CPU sec, 23.064 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516931, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 936, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4521)
[0000][PE] mean and std.dev: (1048.16, 896.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1993, 7527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 20481)
[0000][PE] mean and std.dev: (3207.53, 3004.83)
[0000][PE] low and high boundaries for proper pairs: (1, 26958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 411.077 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517012, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 588, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (840.52, 840.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 1742, 2366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1632.76, 762.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 409.474 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516491, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 1065, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7510)
[0000][PE] mean and std.dev: (1832.78, 1931.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 1905, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7285)
[0000][PE] mean and std.dev: (1816.67, 1467.67)
[0000][PE] low and high boundaries for proper pairs: (1, 9567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 411.727 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516499, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 514, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (828.81, 763.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1250, 2782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6442)
[0000][PE] mean and std.dev: (1474.35, 973.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 410.092 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516452, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 329, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2581)
[0000][PE] mean and std.dev: (584.57, 564.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1268, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1230.85, 503.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 409.257 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516293, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 563, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (755.81, 631.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1599, 3364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7744)
[0000][PE] mean and std.dev: (2298.11, 1560.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9934)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 414.659 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516141, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 1116, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (981.84, 568.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1582, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1560.35, 931.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 412.817 CPU sec, 23.148 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516658, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 825, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1000.48, 680.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1272, 3189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8107)
[0000][PE] mean and std.dev: (1750.38, 1378.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 409.368 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516684, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1217, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1108.36, 869.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (445, 835, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1036.70, 711.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 409.910 CPU sec, 22.999 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516537, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 678, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (837.52, 681.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1703, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5664)
[0000][PE] mean and std.dev: (1753.59, 830.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 409.348 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206548
	[0000][ M::kt_pipeline] read 1206548 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517006, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 399, 959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2291)
[0000][PE] mean and std.dev: (492.25, 330.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (422, 1225, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1045.79, 638.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 409.992 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516699, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 763, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (860.39, 743.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1209, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2193)
[0000][PE] mean and std.dev: (974.42, 376.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206548 reads in 411.411 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516624, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 1136, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5577)
[0000][PE] mean and std.dev: (1358.96, 1455.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1637, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1318.71, 740.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 408.845 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516475, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (560, 1058, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1219.65, 1007.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1099, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1166.43, 742.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 409.800 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516073, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 525, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (745.69, 596.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4090)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (540, 966, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (1049.40, 578.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.486 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206188
	[0000][ M::kt_pipeline] read 1206188 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516443, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 362, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (779.76, 872.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1361, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (1454.50, 888.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 412.395 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516654, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 1030, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (995.95, 729.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1371, 2620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5642)
[0000][PE] mean and std.dev: (1675.63, 1292.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206188 reads in 410.003 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516575, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 481, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (802.68, 692.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (749, 1183, 3477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8933)
[0000][PE] mean and std.dev: (2257.64, 2275.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 411.799 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516546, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 790, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (1012.06, 991.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1410, 2658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5960)
[0000][PE] mean and std.dev: (1578.38, 907.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 409.317 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516793, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (599, 1077, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1161.25, 776.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 412.063 CPU sec, 23.093 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516512, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 439, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2659)
[0000][PE] mean and std.dev: (624.04, 592.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1406, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5168)
[0000][PE] mean and std.dev: (1437.94, 778.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 411.059 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516322, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 658, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2915)
[0000][PE] mean and std.dev: (569.56, 347.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1821, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4520)
[0000][PE] mean and std.dev: (1592.90, 921.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 412.867 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 515735, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 376, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (738.76, 650.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1627, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (420, 2685)
[0000][PE] mean and std.dev: (1562.70, 256.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 416.270 CPU sec, 23.332 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516326, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 779, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (983.21, 988.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1162, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (1250.54, 690.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 410.848 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516815, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 483, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (906.10, 1030.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1116, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1298.83, 1018.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.448 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516529, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 774, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (786.70, 558.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1693, 2650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1802.56, 1089.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 409.925 CPU sec, 22.948 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516665, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 682, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (792.33, 632.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 113.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1137, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4090)
[0000][PE] mean and std.dev: (1256.41, 655.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 411.452 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516949, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 257, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (466.82, 596.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 1381, 3787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10741)
[0000][PE] mean and std.dev: (2286.79, 2292.87)
[0000][PE] low and high boundaries for proper pairs: (1, 14218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 416.394 CPU sec, 23.351 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516775, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 421, 1407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (729.06, 537.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1423, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (1416.43, 756.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 412.723 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516891, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 893, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (787.25, 554.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (593, 788, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6149)
[0000][PE] mean and std.dev: (1369.33, 1111.99)
[0000][PE] low and high boundaries for proper pairs: (1, 8001)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1576, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5105)
[0000][PE] mean and std.dev: (1451.38, 975.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 412.823 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517294, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 476, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3168)
[0000][PE] mean and std.dev: (673.06, 493.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1344, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2731)
[0000][PE] mean and std.dev: (1204.74, 605.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 408.085 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516394, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 764, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (878.18, 799.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1491, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1430.53, 918.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 410.658 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516341, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (427, 913, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (967.25, 520.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1357, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1547.94, 852.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 412.654 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516486, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 910, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1022.78, 809.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1925, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1510.29, 631.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 410.774 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516348, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 364, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1805)
[0000][PE] mean and std.dev: (552.43, 441.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1955, 2027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1666.71, 912.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 411.314 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516592, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 428, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1099.21, 1147.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1607, 1792, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (11, 4001)
[0000][PE] mean and std.dev: (2012.00, 626.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 410.831 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516929, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 590, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (870.79, 988.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1329, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1801.29, 1217.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 413.257 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516445, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (458, 1462, 3022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8150)
[0000][PE] mean and std.dev: (1661.47, 1374.48)
[0000][PE] low and high boundaries for proper pairs: (1, 10714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1337, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (1270.50, 603.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 409.641 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516563, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 835, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1054.84, 1034.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1143, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (1094.80, 454.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 411.647 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516673, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 659, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2612)
[0000][PE] mean and std.dev: (704.00, 499.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1181, 1982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1443.47, 895.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 413.150 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516785, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 527, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2509)
[0000][PE] mean and std.dev: (641.79, 451.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3227)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1496, 1735, 4270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9818)
[0000][PE] mean and std.dev: (2819.20, 2288.21)
[0000][PE] low and high boundaries for proper pairs: (1, 12592)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 411.638 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516430, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 654, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (1429.48, 1512.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1306, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (1115.64, 469.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 410.867 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516704, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 593, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4188)
[0000][PE] mean and std.dev: (989.56, 897.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1623, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1835.63, 1327.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 409.884 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516410, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (689, 1301, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (1181.63, 626.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1404, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (1836.50, 1206.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.409 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516482, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 477, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (643.75, 494.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1664, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (1467.23, 839.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 408.314 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516576, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 568, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (882.16, 802.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1951, 3495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8359)
[0000][PE] mean and std.dev: (2338.80, 1787.91)
[0000][PE] low and high boundaries for proper pairs: (1, 10791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 410.077 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516434, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 668, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (883.79, 727.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1262, 2001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1225.18, 602.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 410.561 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516786, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 751, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (869.21, 802.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1843, 2992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6556)
[0000][PE] mean and std.dev: (1985.89, 1211.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 408.633 CPU sec, 22.858 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516919, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 468, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (509.20, 488.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1438, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5770)
[0000][PE] mean and std.dev: (1669.43, 1085.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 409.919 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516636, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 820, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (974.67, 914.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1109, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (1118.69, 696.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 408.263 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516112, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 622, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4920)
[0000][PE] mean and std.dev: (905.05, 874.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.00, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1237, 2235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1591.71, 1023.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 409.794 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516868, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 383, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (702.33, 629.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.06, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1440, 2152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4920)
[0000][PE] mean and std.dev: (1190.27, 619.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 405.904 CPU sec, 22.738 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517020, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 565, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (560.52, 368.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1043, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1326.86, 886.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 409.652 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516474, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 816, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1102.67, 1037.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1236, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1377.32, 851.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 411.942 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516053, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 730, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1037.85, 874.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1866, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5074)
[0000][PE] mean and std.dev: (1801.84, 1002.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 412.961 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516349, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 841, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5946)
[0000][PE] mean and std.dev: (1230.71, 1220.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.22, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1314, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (1230.62, 692.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 413.461 CPU sec, 23.166 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516691, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 837, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (785.81, 489.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (643, 1237, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5761)
[0000][PE] mean and std.dev: (1566.71, 1243.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 409.171 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516999, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (489, 1155, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (891.25, 496.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 938, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1162.83, 659.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 412.454 CPU sec, 23.081 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516345, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 498, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (922.23, 864.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1466, 2398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5054)
[0000][PE] mean and std.dev: (1505.19, 958.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 414.942 CPU sec, 23.246 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517084, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 951, 2853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8053)
[0000][PE] mean and std.dev: (1827.71, 2004.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 950, 2763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6559)
[0000][PE] mean and std.dev: (1422.50, 1123.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 411.480 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206246
	[0000][ M::kt_pipeline] read 1206246 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516592, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 627, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (773.35, 541.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1560, 2673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5799)
[0000][PE] mean and std.dev: (1864.00, 1021.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 411.452 CPU sec, 23.080 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516823, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 720, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3566)
[0000][PE] mean and std.dev: (745.71, 603.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (356, 1683, 4148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11732)
[0000][PE] mean and std.dev: (2506.70, 2674.08)
[0000][PE] low and high boundaries for proper pairs: (1, 15524)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 1049, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2873)
[0000][PE] mean and std.dev: (1145.00, 605.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206246 reads in 411.142 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516418, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 568, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5344)
[0000][PE] mean and std.dev: (932.71, 976.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7036)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1466, 3689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8379)
[0000][PE] mean and std.dev: (2229.07, 1528.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 414.108 CPU sec, 23.237 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516267, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 939, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (855.31, 692.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1195, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3007)
[0000][PE] mean and std.dev: (1319.82, 497.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 410.452 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517060, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 623, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (637.11, 507.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1798, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4452)
[0000][PE] mean and std.dev: (1591.56, 885.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 411.220 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516093, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 316, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8193)
[0000][PE] mean and std.dev: (1264.26, 1452.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1205, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1303.74, 833.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 411.979 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517180, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 365, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (670.48, 640.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1294, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1455.72, 797.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 409.822 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516491, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1117, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (1146.25, 868.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 1056, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5214)
[0000][PE] mean and std.dev: (1335.78, 953.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 412.123 CPU sec, 23.092 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516759, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 689, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3058)
[0000][PE] mean and std.dev: (595.71, 561.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 1121, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4382)
[0000][PE] mean and std.dev: (1119.19, 775.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 410.529 CPU sec, 23.004 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515934, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 379, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (640.26, 530.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (462, 1225, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5193)
[0000][PE] mean and std.dev: (1281.69, 892.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 416.542 CPU sec, 23.384 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516267, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (728, 1313, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5957)
[0000][PE] mean and std.dev: (1571.87, 1253.63)
[0000][PE] low and high boundaries for proper pairs: (1, 7700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (366, 1423, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6159)
[0000][PE] mean and std.dev: (1396.33, 1082.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 413.042 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516534, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 748, 1156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (771.50, 595.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1055, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4961)
[0000][PE] mean and std.dev: (1380.65, 913.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 412.160 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516726, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 430, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (847.43, 836.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1730, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6278)
[0000][PE] mean and std.dev: (1800.45, 1350.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 408.103 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516535, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 588, 2435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6795)
[0000][PE] mean and std.dev: (1200.09, 1091.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1578, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5934)
[0000][PE] mean and std.dev: (1509.95, 967.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 409.438 CPU sec, 22.935 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516638, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 741, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1076.36, 1005.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.07, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1501, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (1534.14, 909.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 412.977 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516616, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 891, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (964.67, 759.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1040, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 2114)
[0000][PE] mean and std.dev: (1008.25, 395.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 407.475 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516768, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 941, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (927.50, 671.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1679, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1498.90, 755.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 410.279 CPU sec, 22.972 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516660, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 489, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2963)
[0000][PE] mean and std.dev: (601.79, 485.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1099, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2685)
[0000][PE] mean and std.dev: (1105.00, 391.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 410.792 CPU sec, 23.076 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516785, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 806, 2172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5960)
[0000][PE] mean and std.dev: (1464.61, 1609.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 1197, 3560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10204)
[0000][PE] mean and std.dev: (1707.31, 1791.23)
[0000][PE] low and high boundaries for proper pairs: (1, 13526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 414.172 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516602, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 554, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3364)
[0000][PE] mean and std.dev: (675.00, 636.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1188, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (1257.40, 705.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 410.598 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516286, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1019, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4843)
[0000][PE] mean and std.dev: (991.31, 677.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1460, 2841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6297)
[0000][PE] mean and std.dev: (1719.73, 1174.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 416.758 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516585, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 834, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (803.69, 647.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1231, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9328)
[0000][PE] mean and std.dev: (2377.13, 2094.81)
[0000][PE] low and high boundaries for proper pairs: (1, 12130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 412.956 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516375, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 493, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (919.50, 1034.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1909, 2552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5848)
[0000][PE] mean and std.dev: (1762.00, 1222.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 410.682 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516529, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 1208, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5535)
[0000][PE] mean and std.dev: (1052.91, 925.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1143, 1807, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1561.53, 911.90)
[0000][PE] low and high boundaries for proper pairs: (1, 7315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 412.536 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516362, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 389, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1073.58, 1025.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1108, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3029)
[0000][PE] mean and std.dev: (991.60, 427.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 407.990 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516697, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 387, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (632.57, 551.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1146, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (1140.05, 656.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 410.048 CPU sec, 22.974 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516619, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1023, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4671)
[0000][PE] mean and std.dev: (1023.27, 946.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6117)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1616, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4699)
[0000][PE] mean and std.dev: (1517.57, 957.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 415.551 CPU sec, 23.301 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516504, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 986, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (833.93, 586.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1244, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (1297.29, 756.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 412.585 CPU sec, 23.148 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516599, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1009, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6913)
[0000][PE] mean and std.dev: (1479.45, 1538.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (647, 1248, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5810)
[0000][PE] mean and std.dev: (1434.00, 1091.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7531)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 414.799 CPU sec, 23.274 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516838, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 426, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4011)
[0000][PE] mean and std.dev: (827.43, 906.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 1485, 4435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12047)
[0000][PE] mean and std.dev: (2264.82, 2094.50)
[0000][PE] low and high boundaries for proper pairs: (1, 15853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 412.593 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516458, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1005, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3092)
[0000][PE] mean and std.dev: (955.95, 677.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1234, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1497.00, 883.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5031)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 414.318 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516551, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 435, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (726.52, 719.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1408, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1706.94, 1285.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7734)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 412.822 CPU sec, 23.105 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515855, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 520, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (976.10, 931.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1426, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1438.15, 1050.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 414.384 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516653, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 729, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3875)
[0000][PE] mean and std.dev: (897.85, 587.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1115, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4123)
[0000][PE] mean and std.dev: (1138.80, 657.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 411.255 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517012, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 708, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1046.41, 845.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (574, 1027, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1172.21, 861.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 409.517 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516857, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 917, 2357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1313.24, 1325.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1643, 2940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7232)
[0000][PE] mean and std.dev: (1996.92, 1884.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 408.909 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516408, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 783, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (869.96, 748.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1223, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (1151.92, 475.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 416.905 CPU sec, 23.363 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516540, 11, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 536, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2976)
[0000][PE] mean and std.dev: (622.00, 494.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (395, 890, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4478)
[0000][PE] mean and std.dev: (1080.55, 864.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1353, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1437.00, 834.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5174)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 411.333 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516601, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 806, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1157.40, 1086.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 1508, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4822)
[0000][PE] mean and std.dev: (1337.40, 889.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 412.990 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516711, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 670, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (901.94, 772.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1533, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8137)
[0000][PE] mean and std.dev: (1620.38, 1174.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 413.087 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516402, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (554, 936, 2814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7334)
[0000][PE] mean and std.dev: (1313.13, 1231.93)
[0000][PE] low and high boundaries for proper pairs: (1, 9594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 961, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4119)
[0000][PE] mean and std.dev: (1131.42, 728.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 415.055 CPU sec, 23.275 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516654, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (645, 2165, 3449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9057)
[0000][PE] mean and std.dev: (2287.45, 1973.60)
[0000][PE] low and high boundaries for proper pairs: (1, 11861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1463, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4750)
[0000][PE] mean and std.dev: (1762.75, 977.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5946)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 412.181 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516518, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 479, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (839.46, 742.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1390, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3024)
[0000][PE] mean and std.dev: (1078.27, 493.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 415.182 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516297, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 986, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1123.82, 1040.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.41, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1238, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (56, 2351)
[0000][PE] mean and std.dev: (1092.73, 370.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 410.977 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516359, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 644, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (986.61, 867.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (665, 1598, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1426.00, 929.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 413.474 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516469, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 562, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1019.53, 1041.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1295, 2269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (1509.58, 944.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 414.368 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516573, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 973, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (1038.27, 848.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1527, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1512.85, 779.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 413.418 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515436, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1042, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4083)
[0000][PE] mean and std.dev: (984.65, 683.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1230, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6235)
[0000][PE] mean and std.dev: (1670.85, 1355.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 421.406 CPU sec, 23.594 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516585, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1336, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1356.00, 1078.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1560, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6021)
[0000][PE] mean and std.dev: (1597.10, 956.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7699)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 414.799 CPU sec, 23.245 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516350, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 841, 1828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1075.52, 797.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1513, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1592.18, 1107.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 417.547 CPU sec, 23.391 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516108, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 866, 3219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9059)
[0000][PE] mean and std.dev: (2060.56, 2695.61)
[0000][PE] low and high boundaries for proper pairs: (1, 12843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1613, 2522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5418)
[0000][PE] mean and std.dev: (1760.83, 1120.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 415.618 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206224
	[0000][ M::kt_pipeline] read 1206224 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516734, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 773, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1081.33, 962.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1220, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (1377.27, 1062.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 413.417 CPU sec, 23.151 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516562, 9, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 302, 1165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (660.82, 636.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1292, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5404)
[0000][PE] mean and std.dev: (1496.62, 981.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206224 reads in 411.601 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516421, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 669, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (786.28, 607.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1539, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (1664.75, 1210.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 411.820 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516558, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 516, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (873.42, 814.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1337, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5387)
[0000][PE] mean and std.dev: (1718.96, 1296.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6911)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 410.972 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517042, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 679, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1053.69, 836.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1150, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (1078.80, 601.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4375)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 410.063 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516417, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 442, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (801.29, 939.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1389, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (1179.31, 564.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 412.073 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516995, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 908, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7328)
[0000][PE] mean and std.dev: (1273.82, 1321.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1863, 2833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6237)
[0000][PE] mean and std.dev: (1952.89, 1348.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 411.807 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516195, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 824, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5195)
[0000][PE] mean and std.dev: (1099.81, 1018.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1609, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1478.84, 765.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 416.411 CPU sec, 23.317 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516266, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 793, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3188)
[0000][PE] mean and std.dev: (815.94, 549.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1522, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1540.93, 764.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 416.822 CPU sec, 23.354 real sec
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516873, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (725, 1328, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5249)
[0000][PE] mean and std.dev: (1438.78, 883.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1287, 2166, 3794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8808)
[0000][PE] mean and std.dev: (2597.06, 1816.32)
[0000][PE] low and high boundaries for proper pairs: (1, 11315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 410.768 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516409, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 968, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (976.82, 637.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1298, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1323.50, 712.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 413.721 CPU sec, 23.179 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516594, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1040, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1121.27, 771.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1399, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (1324.80, 660.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 413.392 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516574, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 749, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1106.47, 1030.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1473, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1484.87, 674.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 415.855 CPU sec, 23.504 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516009, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 726, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3332)
[0000][PE] mean and std.dev: (888.54, 803.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (725, 1055, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (1030.25, 416.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 411.915 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516419, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 394, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (706.00, 755.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1173, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1433.79, 872.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 415.647 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516625, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1016, 2932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8172)
[0000][PE] mean and std.dev: (1600.35, 1867.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1441, 5410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14846)
[0000][PE] mean and std.dev: (2496.31, 2289.18)
[0000][PE] low and high boundaries for proper pairs: (1, 19564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 412.724 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516535, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 663, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (931.55, 853.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1107, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4041)
[0000][PE] mean and std.dev: (1297.53, 890.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 413.863 CPU sec, 23.272 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516395, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 786, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (878.10, 753.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1151, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (1337.69, 615.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4282)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 415.146 CPU sec, 23.226 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516600, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 786, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5669)
[0000][PE] mean and std.dev: (1329.20, 1375.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1429, 2107, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (1954.78, 977.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 413.053 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516617, 10, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 626, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (945.55, 747.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (121, 288, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2782)
[0000][PE] mean and std.dev: (309.62, 298.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1256, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1397.14, 895.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 411.333 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516463, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 580, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1117.06, 1157.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1297, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2546)
[0000][PE] mean and std.dev: (1174.70, 512.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 411.863 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516382, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 828, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (911.67, 792.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1272, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1517.81, 902.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 412.545 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516709, 8, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (446, 935, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (971.97, 682.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 976, 2157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5315)
[0000][PE] mean and std.dev: (1199.00, 801.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 412.416 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516805, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 750, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (716.20, 555.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1350, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1464.62, 724.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 415.996 CPU sec, 23.340 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517027, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (434, 881, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3878)
[0000][PE] mean and std.dev: (838.76, 561.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1506, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6616)
[0000][PE] mean and std.dev: (1537.44, 896.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.559 CPU sec, 23.102 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516678, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 611, 1293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (791.65, 751.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1294, 1439, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (182, 2962)
[0000][PE] mean and std.dev: (1479.44, 493.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 413.888 CPU sec, 23.252 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516829, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 557, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (713.67, 669.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (669, 1197, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (1110.38, 744.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 412.138 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206202
	[0000][ M::kt_pipeline] read 1206202 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516297, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 523, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (941.00, 896.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1200, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (1368.29, 842.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 415.454 CPU sec, 23.252 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516175, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 756, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (912.30, 615.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.23, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1233, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1527.58, 1083.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206202 reads in 418.419 CPU sec, 23.461 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517195, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 941, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (1101.22, 825.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1469, 2100, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3962)
[0000][PE] mean and std.dev: (1767.21, 736.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 409.784 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516597, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1038, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1159.52, 963.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1464, 4588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11870)
[0000][PE] mean and std.dev: (2624.35, 2374.72)
[0000][PE] low and high boundaries for proper pairs: (1, 15511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 410.823 CPU sec, 23.043 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516679, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 551, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5144)
[0000][PE] mean and std.dev: (1118.57, 1213.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1083, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1316.53, 835.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 412.160 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516582, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (559, 1094, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4396)
[0000][PE] mean and std.dev: (1226.50, 1043.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5675)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1557, 2287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1407.38, 748.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 417.532 CPU sec, 23.384 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516192, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 797, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1147.82, 1025.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1507, 2013, 2850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (2280.24, 982.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 415.523 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516298, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 482, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1824)
[0000][PE] mean and std.dev: (508.05, 403.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2355)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1248, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5277)
[0000][PE] mean and std.dev: (1662.09, 979.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 418.116 CPU sec, 23.416 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516403, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1001, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1181.07, 877.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1049, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (1138.19, 518.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 415.420 CPU sec, 23.314 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516939, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (481, 961, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1109.52, 910.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1265, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1504.05, 1025.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 415.661 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516847, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1106, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5178)
[0000][PE] mean and std.dev: (1144.89, 978.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1394, 1732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (1406.11, 586.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 415.449 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516703, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 1349, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (1335.45, 1245.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 984, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3133)
[0000][PE] mean and std.dev: (1086.44, 645.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 413.221 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516605, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 683, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (773.80, 634.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1383, 1897, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (1937.16, 1116.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 413.793 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516663, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 467, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4579)
[0000][PE] mean and std.dev: (953.24, 979.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1298, 2002, 3652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8360)
[0000][PE] mean and std.dev: (2137.32, 1443.71)
[0000][PE] low and high boundaries for proper pairs: (1, 10714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 415.049 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516375, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 527, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (775.91, 580.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1706, 3101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7421)
[0000][PE] mean and std.dev: (2318.39, 1843.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 414.021 CPU sec, 23.171 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516245, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 900, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1214.62, 954.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1008, 2606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6240)
[0000][PE] mean and std.dev: (1502.89, 1262.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 413.683 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515691, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 860, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (983.04, 784.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (577, 2150, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8275)
[0000][PE] mean and std.dev: (1805.50, 1320.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 418.266 CPU sec, 23.425 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516245, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 817, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5023)
[0000][PE] mean and std.dev: (993.23, 776.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6587)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1659, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7274)
[0000][PE] mean and std.dev: (1859.21, 1341.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 417.386 CPU sec, 23.371 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516817, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 944, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4687)
[0000][PE] mean and std.dev: (1033.00, 688.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 1613, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (1148.38, 815.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 413.791 CPU sec, 23.214 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516351, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 675, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3822)
[0000][PE] mean and std.dev: (908.08, 822.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1413, 2275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5455)
[0000][PE] mean and std.dev: (1627.48, 1231.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 412.478 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516472, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 663, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (893.00, 701.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1601, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1414.90, 974.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 412.098 CPU sec, 23.057 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517223, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 579, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1017.20, 1221.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1367, 3307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8277)
[0000][PE] mean and std.dev: (1710.92, 1202.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 410.840 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516383, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 388, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1271.93, 1417.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.00, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (826, 1024, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (1019.76, 496.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 414.681 CPU sec, 23.257 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516829, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 827, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1022.05, 1151.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1700, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1592.53, 969.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 413.654 CPU sec, 23.194 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516307, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1009, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2709)
[0000][PE] mean and std.dev: (838.54, 484.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (499, 1060, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (982.75, 629.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 413.947 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516824, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1001, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1179.46, 1080.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1601, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1381.27, 684.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 412.970 CPU sec, 23.138 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206558
	[0000][ M::kt_pipeline] read 1206558 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516505, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 786, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (1098.73, 1204.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1531, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6189)
[0000][PE] mean and std.dev: (1723.88, 1274.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 414.011 CPU sec, 23.187 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516356, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 604, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (661.91, 419.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1326, 2916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6510)
[0000][PE] mean and std.dev: (2024.53, 1660.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206558 reads in 414.547 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516357, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 850, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (812.65, 568.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1277, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5456)
[0000][PE] mean and std.dev: (1691.05, 1349.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 417.383 CPU sec, 23.342 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516297, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 363, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (718.80, 640.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1389, 1830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (1248.12, 624.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 416.185 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516844, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 936, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4197)
[0000][PE] mean and std.dev: (1016.68, 821.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1652, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7031)
[0000][PE] mean and std.dev: (1748.67, 1164.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 412.363 CPU sec, 23.098 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516371, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 515, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (638.56, 454.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 956, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1429.76, 1104.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 414.746 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516655, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 441, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (772.03, 766.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1054, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (1130.07, 649.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 409.445 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517063, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 568, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5991)
[0000][PE] mean and std.dev: (1286.68, 1393.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1141, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3006)
[0000][PE] mean and std.dev: (1112.14, 546.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 409.207 CPU sec, 22.956 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516462, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 704, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (929.70, 845.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1555, 4216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10274)
[0000][PE] mean and std.dev: (2429.67, 2050.39)
[0000][PE] low and high boundaries for proper pairs: (1, 13303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 411.662 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516515, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 910, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1237.67, 1022.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1301, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1627.30, 1120.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 415.564 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516262, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 637, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5457)
[0000][PE] mean and std.dev: (1143.71, 1118.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1495, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1460.61, 708.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 417.005 CPU sec, 23.376 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516709, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 356, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (433.18, 371.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1689, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5675)
[0000][PE] mean and std.dev: (1625.62, 1123.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 410.999 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516288, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 763, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5451)
[0000][PE] mean and std.dev: (1185.73, 1117.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1438, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (1240.69, 732.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 415.134 CPU sec, 23.247 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516676, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 852, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5021)
[0000][PE] mean and std.dev: (1203.41, 1203.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1864, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7383)
[0000][PE] mean and std.dev: (2069.00, 1571.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 416.419 CPU sec, 23.330 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516552, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 602, 1836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (968.68, 831.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1447, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1358.70, 704.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 412.183 CPU sec, 23.076 real sec
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516605, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 871, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (896.13, 725.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1098, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1407.04, 827.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 414.562 CPU sec, 23.221 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516671, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 512, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2803)
[0000][PE] mean and std.dev: (666.62, 598.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (554, 1483, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1345.33, 809.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 413.605 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516365, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 891, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (1084.17, 905.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1572, 3674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8608)
[0000][PE] mean and std.dev: (2425.09, 1939.88)
[0000][PE] low and high boundaries for proper pairs: (1, 11075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 413.149 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516792, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 567, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (753.89, 583.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (631, 1306, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5452)
[0000][PE] mean and std.dev: (1390.17, 913.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 411.591 CPU sec, 23.056 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516529, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 836, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3326)
[0000][PE] mean and std.dev: (794.46, 526.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1392, 1615, 3006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6234)
[0000][PE] mean and std.dev: (2188.83, 1278.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 414.402 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516641, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 582, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (894.96, 836.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1401, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1804.23, 1083.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 412.442 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516533, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1179, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4686)
[0000][PE] mean and std.dev: (1149.33, 902.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1313, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1391.58, 865.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 412.732 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517094, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1286, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7577)
[0000][PE] mean and std.dev: (1574.95, 1297.43)
[0000][PE] low and high boundaries for proper pairs: (1, 9988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1490, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5340)
[0000][PE] mean and std.dev: (1443.54, 728.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 413.660 CPU sec, 23.177 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516483, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 824, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5344)
[0000][PE] mean and std.dev: (1202.64, 1167.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1384, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1504.14, 1002.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 414.462 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516739, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 370, 1078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (631.39, 623.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 2011, 3419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8207)
[0000][PE] mean and std.dev: (2327.17, 1507.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 413.502 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516714, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 255, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5328)
[0000][PE] mean and std.dev: (746.00, 974.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1621, 2648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1849.15, 1383.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 415.424 CPU sec, 23.284 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516975, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 696, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (823.08, 744.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1493, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5767)
[0000][PE] mean and std.dev: (1762.18, 1120.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 412.419 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516350, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 615, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2350)
[0000][PE] mean and std.dev: (537.39, 359.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1157, 4055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9989)
[0000][PE] mean and std.dev: (2000.79, 1666.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 414.825 CPU sec, 23.229 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516974, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 961, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6455)
[0000][PE] mean and std.dev: (1478.10, 1593.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (603, 986, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (1080.07, 597.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 411.910 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516623, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 445, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5097)
[0000][PE] mean and std.dev: (639.89, 672.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1469, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (1514.80, 924.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 414.508 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516653, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 949, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1019.68, 857.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.63, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1190, 2767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6495)
[0000][PE] mean and std.dev: (1651.46, 973.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 414.128 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516284, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (827, 1174, 2371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1501.35, 1084.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1267, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (1515.25, 916.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 415.467 CPU sec, 23.301 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516554, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 494, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3997)
[0000][PE] mean and std.dev: (932.33, 888.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 987, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2392)
[0000][PE] mean and std.dev: (1048.00, 513.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 412.016 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516729, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1163, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5430)
[0000][PE] mean and std.dev: (1332.26, 1193.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1054, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (1186.87, 596.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 417.354 CPU sec, 23.380 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516312, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 657, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (564.00, 366.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1248, 2895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6671)
[0000][PE] mean and std.dev: (2076.94, 1572.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 411.572 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516338, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 471, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (967.04, 863.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1203, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7133)
[0000][PE] mean and std.dev: (1679.88, 1449.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 416.084 CPU sec, 23.289 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206582
	[0000][ M::kt_pipeline] read 1206582 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516218, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 406, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6515)
[0000][PE] mean and std.dev: (1137.00, 1278.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (348, 1034, 2797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7695)
[0000][PE] mean and std.dev: (1712.24, 1580.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 415.429 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516618, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 869, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3770)
[0000][PE] mean and std.dev: (910.46, 838.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1343, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1348.29, 748.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206582 reads in 418.208 CPU sec, 23.420 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516429, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 878, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (977.19, 701.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1504, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6384)
[0000][PE] mean and std.dev: (1960.38, 1192.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 412.356 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517049, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 470, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (856.39, 771.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1554, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6009)
[0000][PE] mean and std.dev: (1660.45, 944.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 409.202 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516144, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 647, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (829.71, 756.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1519, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6455)
[0000][PE] mean and std.dev: (1816.18, 1526.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 414.916 CPU sec, 23.227 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516794, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 970, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6646)
[0000][PE] mean and std.dev: (1547.58, 1541.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1294, 2201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1554.00, 857.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 411.715 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516370, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 684, 2856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7882)
[0000][PE] mean and std.dev: (1522.96, 1791.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1548, 3482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8554)
[0000][PE] mean and std.dev: (1782.85, 1146.64)
[0000][PE] low and high boundaries for proper pairs: (1, 11090)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 412.333 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516328, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 972, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5147)
[0000][PE] mean and std.dev: (1088.41, 845.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1462, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (1656.93, 878.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 415.297 CPU sec, 23.232 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516872, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 965, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (1094.83, 946.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1284, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4904)
[0000][PE] mean and std.dev: (1365.21, 670.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 413.641 CPU sec, 23.188 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516530, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1031, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1069.57, 926.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1926, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5222)
[0000][PE] mean and std.dev: (1838.85, 1043.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 413.143 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516584, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 803, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4185)
[0000][PE] mean and std.dev: (807.23, 689.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5533)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1325, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3935)
[0000][PE] mean and std.dev: (1509.09, 853.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 416.998 CPU sec, 23.331 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516322, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 742, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (765.80, 709.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1522, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1605.48, 1191.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 413.630 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516764, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 374, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (683.36, 576.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4968)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1317, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3432)
[0000][PE] mean and std.dev: (1325.35, 481.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 412.869 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516326, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1197, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4512)
[0000][PE] mean and std.dev: (1127.03, 729.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1031, 3344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8086)
[0000][PE] mean and std.dev: (1449.08, 1015.19)
[0000][PE] low and high boundaries for proper pairs: (1, 10457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 413.459 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516503, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 949, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1098.00, 981.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (565, 1268, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1419.14, 1016.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 412.087 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516475, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (500, 1034, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1241.84, 1000.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1142, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2943)
[0000][PE] mean and std.dev: (1261.74, 649.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 414.257 CPU sec, 23.182 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206570
	[0000][ M::kt_pipeline] read 1206570 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516626, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 902, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5223)
[0000][PE] mean and std.dev: (1193.64, 1040.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1356, 1600, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3678)
[0000][PE] mean and std.dev: (1503.24, 608.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 418.656 CPU sec, 23.439 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516188, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 682, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5928)
[0000][PE] mean and std.dev: (1366.26, 1443.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1508, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7064)
[0000][PE] mean and std.dev: (1949.24, 1426.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206570 reads in 413.681 CPU sec, 23.153 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516618, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 564, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (727.48, 570.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1171, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1509.50, 936.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7062)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 410.594 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516835, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 438, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (885.87, 984.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.20, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1217, 1905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1170.20, 486.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 413.091 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206578
	[0000][ M::kt_pipeline] read 1206578 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516611, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 583, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4340)
[0000][PE] mean and std.dev: (903.21, 898.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1104, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1453.57, 1021.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.596 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516950, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 646, 2350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6520)
[0000][PE] mean and std.dev: (1201.70, 1127.90)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1292, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1650.86, 1267.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206578 reads in 415.875 CPU sec, 23.273 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516292, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 715, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (860.29, 694.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1581, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5234)
[0000][PE] mean and std.dev: (1512.00, 901.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 413.893 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516441, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 529, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5335)
[0000][PE] mean and std.dev: (970.09, 1085.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1565, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1618.95, 808.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 410.609 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206306
	[0000][ M::kt_pipeline] read 1206306 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516268, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 468, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (617.05, 503.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1527, 1880, 4430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10236)
[0000][PE] mean and std.dev: (2235.69, 1455.27)
[0000][PE] low and high boundaries for proper pairs: (1, 13139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 413.115 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206536
	[0000][ M::kt_pipeline] read 1206536 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516888, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (479, 926, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1084.58, 860.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 1200, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6255)
[0000][PE] mean and std.dev: (1482.67, 971.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206306 reads in 410.163 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516338, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 659, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (918.52, 894.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1287, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2679)
[0000][PE] mean and std.dev: (1330.00, 547.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206536 reads in 413.590 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516838, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1319, 3058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8610)
[0000][PE] mean and std.dev: (1942.11, 1898.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (774, 1358, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4863)
[0000][PE] mean and std.dev: (1386.50, 660.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 414.967 CPU sec, 23.231 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516543, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 463, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7120)
[0000][PE] mean and std.dev: (952.21, 1126.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (701, 855, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (1178.00, 839.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.695 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516567, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 877, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (795.55, 656.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1247, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2607)
[0000][PE] mean and std.dev: (1242.38, 558.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 407.534 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516300, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 440, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (814.09, 672.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1615, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1466.69, 927.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 407.952 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516811, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 929, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (1092.29, 804.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1622, 3530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9126)
[0000][PE] mean and std.dev: (1870.19, 1583.94)
[0000][PE] low and high boundaries for proper pairs: (1, 11924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 409.909 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516629, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 503, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2847)
[0000][PE] mean and std.dev: (821.28, 808.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (466, 1057, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1122.79, 764.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 405.844 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516840, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 399, 1277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (715.00, 704.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1270, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (1439.85, 874.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 406.951 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516763, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (775, 1145, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1474.00, 1168.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1335, 2099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3991)
[0000][PE] mean and std.dev: (1347.84, 676.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 408.057 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516553, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 799, 1923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1031.38, 840.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1229, 2829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6919)
[0000][PE] mean and std.dev: (1646.75, 1352.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 405.339 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516305, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 581, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (974.58, 884.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5485)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1269, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (1245.36, 641.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 409.336 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206182
	[0000][ M::kt_pipeline] read 1206182 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516812, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 924, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (1279.43, 1185.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1399, 2936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6546)
[0000][PE] mean and std.dev: (1805.37, 1081.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 406.196 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206242
	[0000][ M::kt_pipeline] read 1206242 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517128, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 831, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1307.63, 1270.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1239, 1529, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5370)
[0000][PE] mean and std.dev: (1501.38, 655.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206182 reads in 406.061 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516485, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 894, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (997.76, 910.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.23, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (463, 1232, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4138)
[0000][PE] mean and std.dev: (1188.36, 687.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206242 reads in 409.016 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206246
	[0000][ M::kt_pipeline] read 1206246 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516889, 9, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 376, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (794.50, 843.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1077, 1429, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1525.23, 862.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 403.154 CPU sec, 22.534 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516163, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 764, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (849.36, 690.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1406, 1553, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5906)
[0000][PE] mean and std.dev: (1961.50, 942.14)
[0000][PE] low and high boundaries for proper pairs: (1, 7406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206246 reads in 406.259 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516605, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 904, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (1132.96, 1060.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1343, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (352, 2367)
[0000][PE] mean and std.dev: (1313.79, 236.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 408.180 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516660, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 1400, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5327)
[0000][PE] mean and std.dev: (1389.00, 1098.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 1527, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6482)
[0000][PE] mean and std.dev: (1671.14, 1303.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 405.431 CPU sec, 22.726 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516470, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 449, 1360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3524)
[0000][PE] mean and std.dev: (669.26, 536.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 2185, 3952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9840)
[0000][PE] mean and std.dev: (2333.50, 1635.31)
[0000][PE] low and high boundaries for proper pairs: (1, 12784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 407.271 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516293, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 838, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1154.75, 1144.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1346, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5744)
[0000][PE] mean and std.dev: (1320.00, 1102.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 405.128 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516476, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 842, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (908.75, 780.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1348, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4225)
[0000][PE] mean and std.dev: (1583.45, 900.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 408.186 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516257, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (346, 790, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (725.52, 511.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1208, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1323.04, 999.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 404.803 CPU sec, 22.661 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516898, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (520, 1220, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5278)
[0000][PE] mean and std.dev: (1293.94, 905.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.02, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1352, 3236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8252)
[0000][PE] mean and std.dev: (1694.62, 1411.01)
[0000][PE] low and high boundaries for proper pairs: (1, 10760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 404.934 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206196
	[0000][ M::kt_pipeline] read 1206196 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516775, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 400, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7399)
[0000][PE] mean and std.dev: (1401.04, 1691.34)
[0000][PE] low and high boundaries for proper pairs: (1, 9768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1194, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (1102.11, 398.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 408.133 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516420, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 729, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (866.96, 578.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (635, 1118, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1124.11, 714.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206196 reads in 406.947 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206214
	[0000][ M::kt_pipeline] read 1206214 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516778, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 574, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1111.12, 1020.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1228, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5793)
[0000][PE] mean and std.dev: (1452.00, 1029.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 407.084 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516353, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 391, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1935)
[0000][PE] mean and std.dev: (519.42, 453.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (614, 959, 1915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4517)
[0000][PE] mean and std.dev: (1226.50, 863.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206214 reads in 405.096 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516672, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1167, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1128.82, 753.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1451, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (1416.48, 638.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 406.013 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516343, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 639, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (793.40, 750.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1258, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1432.32, 816.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 408.724 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516805, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 774, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (858.67, 687.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1707, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1844.71, 1092.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 409.365 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516401, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1007, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4342)
[0000][PE] mean and std.dev: (1056.83, 867.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1292, 2006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1473.06, 964.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 405.955 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516586, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 704, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (861.92, 800.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1552, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1292.18, 746.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 412.317 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516368, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 802, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6414)
[0000][PE] mean and std.dev: (1410.00, 1407.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1563, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4199)
[0000][PE] mean and std.dev: (1328.12, 541.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 406.840 CPU sec, 22.780 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516564, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1003, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (887.40, 634.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1450, 3471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7917)
[0000][PE] mean and std.dev: (2120.47, 1348.17)
[0000][PE] low and high boundaries for proper pairs: (1, 10140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 407.737 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517086, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 688, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (834.75, 694.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1549, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1474.06, 950.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6213)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 404.626 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516198, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1030, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3250)
[0000][PE] mean and std.dev: (866.25, 613.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1013, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3859)
[0000][PE] mean and std.dev: (1150.25, 630.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 408.438 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516733, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 626, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4205)
[0000][PE] mean and std.dev: (843.75, 761.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1787, 2343, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (231, 4121)
[0000][PE] mean and std.dev: (2191.46, 774.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 404.266 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516440, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 440, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (753.18, 653.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1634, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5161)
[0000][PE] mean and std.dev: (1512.06, 821.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 405.672 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516410, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 686, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (857.60, 838.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1386, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1152.07, 629.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5056)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 410.061 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516399, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 936, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5312)
[0000][PE] mean and std.dev: (1110.58, 1253.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1307, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4337)
[0000][PE] mean and std.dev: (1439.68, 641.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 405.000 CPU sec, 22.683 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516615, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (820, 1275, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1350.89, 919.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1629, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4976)
[0000][PE] mean and std.dev: (1857.81, 907.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 407.906 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516910, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 1041, 2592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (1779.29, 1897.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9492)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.63, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1345, 4042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10204)
[0000][PE] mean and std.dev: (2104.19, 1838.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 406.226 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516490, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1094, 1911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5063)
[0000][PE] mean and std.dev: (1368.48, 1400.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 406.731 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516372, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 806, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4318)
[0000][PE] mean and std.dev: (1192.04, 1175.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1158, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (199, 2344)
[0000][PE] mean and std.dev: (1127.82, 237.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 408.444 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516162, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 746, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3502)
[0000][PE] mean and std.dev: (897.63, 703.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1574, 5318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14050)
[0000][PE] mean and std.dev: (2823.00, 2742.53)
[0000][PE] low and high boundaries for proper pairs: (1, 18416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 405.600 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516940, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1164, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1195.76, 889.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1424, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5845)
[0000][PE] mean and std.dev: (1816.60, 1457.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7645)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 403.710 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516769, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 888, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3613)
[0000][PE] mean and std.dev: (806.15, 692.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1226, 2419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1606.67, 1141.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 409.071 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516484, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 589, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5316)
[0000][PE] mean and std.dev: (949.06, 855.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (411, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (115, 855)
[0000][PE] mean and std.dev: (487.06, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1003)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1161, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1215.81, 676.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 406.373 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516407, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (569, 1234, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5231)
[0000][PE] mean and std.dev: (1404.92, 1205.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1143, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (1451.21, 923.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 408.655 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516597, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 739, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (906.22, 728.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1305, 3088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6788)
[0000][PE] mean and std.dev: (1853.09, 1246.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 406.858 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516217, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 568, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3530)
[0000][PE] mean and std.dev: (728.33, 601.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (532, 1118, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5593)
[0000][PE] mean and std.dev: (1302.27, 1005.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 408.838 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206254
	[0000][ M::kt_pipeline] read 1206254 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516415, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 850, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4911)
[0000][PE] mean and std.dev: (963.26, 967.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1277, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1336.23, 946.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 406.565 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516420, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 633, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3650)
[0000][PE] mean and std.dev: (816.70, 590.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1423, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1540.53, 896.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206254 reads in 407.574 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516928, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 583, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (889.45, 653.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1778, 3256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7542)
[0000][PE] mean and std.dev: (2168.33, 1545.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 411.482 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516776, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 1465, 2915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7757)
[0000][PE] mean and std.dev: (2130.45, 2091.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1653, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6582)
[0000][PE] mean and std.dev: (1886.29, 1046.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 408.204 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517021, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 642, 4689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13135)
[0000][PE] mean and std.dev: (1950.15, 2009.57)
[0000][PE] low and high boundaries for proper pairs: (1, 17358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1077, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (1289.40, 822.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.042 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516647, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1392, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7363)
[0000][PE] mean and std.dev: (1566.90, 1283.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1003, 1165, 3282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7840)
[0000][PE] mean and std.dev: (1673.00, 1415.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 409.367 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516659, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 758, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5320)
[0000][PE] mean and std.dev: (960.85, 790.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1162, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (1033.67, 597.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 406.476 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516685, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1286, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4425)
[0000][PE] mean and std.dev: (1360.41, 1087.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1358, 1941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (1408.42, 452.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 406.545 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516539, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 925, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3466)
[0000][PE] mean and std.dev: (972.85, 807.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1285, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4276)
[0000][PE] mean and std.dev: (1293.83, 692.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 408.297 CPU sec, 22.869 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516444, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 391, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3539)
[0000][PE] mean and std.dev: (609.56, 502.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1533, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6306)
[0000][PE] mean and std.dev: (1808.50, 1293.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 406.286 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516447, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 916, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (1094.18, 927.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 988, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5717)
[0000][PE] mean and std.dev: (1327.29, 1111.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 407.041 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516493, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 936, 2661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7407)
[0000][PE] mean and std.dev: (1560.96, 1550.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1427, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (1430.00, 406.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 407.149 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516627, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 972, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4074)
[0000][PE] mean and std.dev: (1009.81, 737.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1542, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6304)
[0000][PE] mean and std.dev: (1986.87, 1691.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 408.433 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516744, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1441, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5956)
[0000][PE] mean and std.dev: (1454.71, 1254.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1113, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4551)
[0000][PE] mean and std.dev: (1460.45, 748.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 408.652 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516155, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 442, 1037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (579.36, 474.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1470, 3585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8895)
[0000][PE] mean and std.dev: (1971.29, 1442.74)
[0000][PE] low and high boundaries for proper pairs: (1, 11550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 409.686 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516480, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 760, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (830.00, 696.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1590, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1546.73, 1138.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 406.305 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516178, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 530, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (783.40, 768.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1336, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (1242.18, 623.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 409.586 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516643, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 650, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (729.40, 447.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1288, 1946, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1879.33, 1108.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 407.715 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516764, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 653, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1038.85, 1022.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (586, 903, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4954)
[0000][PE] mean and std.dev: (1246.50, 1094.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 403.258 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516311, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 424, 534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (360.86, 155.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1198, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (1384.09, 716.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 407.252 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516209, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 971, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (829.29, 653.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1157, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3459)
[0000][PE] mean and std.dev: (1219.88, 676.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 412.587 CPU sec, 23.150 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516411, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 926, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4768)
[0000][PE] mean and std.dev: (1142.65, 843.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1294, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7161)
[0000][PE] mean and std.dev: (1951.38, 1759.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 411.179 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516543, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 749, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (979.90, 846.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1359, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (1187.39, 732.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 409.502 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516624, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 363, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (815.65, 734.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1725, 2784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5684)
[0000][PE] mean and std.dev: (2081.06, 1269.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 410.554 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517101, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 377, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (627.25, 622.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (474, 1609, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4815)
[0000][PE] mean and std.dev: (1280.67, 855.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 408.990 CPU sec, 22.909 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516354, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 461, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5361)
[0000][PE] mean and std.dev: (950.87, 991.78)
[0000][PE] low and high boundaries for proper pairs: (1, 7056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1598, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (1601.71, 961.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 407.385 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516204, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 1329, 2964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8118)
[0000][PE] mean and std.dev: (1701.78, 1493.10)
[0000][PE] low and high boundaries for proper pairs: (1, 10695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1206, 1610, 3233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7287)
[0000][PE] mean and std.dev: (2231.00, 1549.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.737 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516750, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 780, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (937.67, 831.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1310, 1861, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4313)
[0000][PE] mean and std.dev: (1757.95, 827.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 406.624 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516840, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 361, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (544.05, 606.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1389, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4121)
[0000][PE] mean and std.dev: (1413.88, 542.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 405.624 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516676, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1269, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1255.71, 963.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 406.433 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516414, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 310, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (757.91, 748.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (728, 1039, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3536)
[0000][PE] mean and std.dev: (1137.79, 727.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 408.589 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516653, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 550, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (703.14, 541.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3541)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1643, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5589)
[0000][PE] mean and std.dev: (1748.44, 1103.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 404.545 CPU sec, 22.640 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516782, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 628, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3258)
[0000][PE] mean and std.dev: (672.22, 467.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1548, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4307)
[0000][PE] mean and std.dev: (1584.16, 988.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 405.567 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516797, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1245, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7173)
[0000][PE] mean and std.dev: (1720.56, 1612.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1246, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5278)
[0000][PE] mean and std.dev: (1900.24, 1380.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 405.634 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517111, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 769, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1027.39, 1106.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1331, 2575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5459)
[0000][PE] mean and std.dev: (1694.33, 981.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 404.942 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516098, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 938, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (894.56, 637.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1367, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3198)
[0000][PE] mean and std.dev: (1239.94, 589.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 408.949 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516225, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 869, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (799.95, 544.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1425, 3537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8655)
[0000][PE] mean and std.dev: (2003.17, 1611.16)
[0000][PE] low and high boundaries for proper pairs: (1, 11214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 411.112 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516515, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 514, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (905.68, 824.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1325, 1428, 2184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3902)
[0000][PE] mean and std.dev: (1554.00, 867.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 408.465 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516820, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 825, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7810)
[0000][PE] mean and std.dev: (1519.59, 1548.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1220, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1229.56, 677.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 406.912 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516380, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 428, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3717)
[0000][PE] mean and std.dev: (818.94, 840.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (596, 1238, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1255.22, 765.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 407.634 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516822, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 397, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (607.15, 497.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1203, 1867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (1195.29, 639.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 404.147 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516042, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1107, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1110.31, 819.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1300, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6527)
[0000][PE] mean and std.dev: (1816.60, 1249.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 409.904 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516323, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 1092, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1044.07, 740.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1369, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (1281.21, 569.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 406.517 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516809, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 579, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (763.31, 722.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1128, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4062)
[0000][PE] mean and std.dev: (1142.92, 762.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 406.893 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516311, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 755, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6759)
[0000][PE] mean and std.dev: (1407.41, 1436.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8904)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1037, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3264)
[0000][PE] mean and std.dev: (1246.50, 700.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 408.691 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516703, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 469, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5182)
[0000][PE] mean and std.dev: (1048.05, 1089.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1319, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1192.80, 636.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 407.496 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516267, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 458, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3508)
[0000][PE] mean and std.dev: (712.26, 726.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1266, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (1194.50, 613.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 407.505 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206504
	[0000][ M::kt_pipeline] read 1206504 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516951, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1021, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (922.56, 661.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1380, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2761)
[0000][PE] mean and std.dev: (1258.26, 447.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3320)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 409.553 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516500, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 344, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (667.41, 642.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.24, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 922, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1203.73, 882.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206504 reads in 409.958 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516254, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 520, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (1154.14, 1166.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1415, 2533, 5511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13703)
[0000][PE] mean and std.dev: (3350.83, 2825.98)
[0000][PE] low and high boundaries for proper pairs: (1, 17799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 412.229 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516323, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (682, 1202, 2422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5902)
[0000][PE] mean and std.dev: (1341.19, 978.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1594, 2693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6287)
[0000][PE] mean and std.dev: (2118.08, 1567.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 410.890 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516579, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1281, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1176.76, 755.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1277, 1876, 3341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7469)
[0000][PE] mean and std.dev: (2256.71, 1190.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 411.620 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516827, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 602, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (598.38, 548.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1312, 2607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6173)
[0000][PE] mean and std.dev: (1881.18, 1619.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.052 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517201, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 427, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (607.89, 493.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1161, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1487.67, 959.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 409.316 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516747, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 1420, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (1173.50, 866.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1625, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1524.72, 742.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6050)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 406.587 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516252, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 777, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3339)
[0000][PE] mean and std.dev: (841.83, 596.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1559, 2881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6387)
[0000][PE] mean and std.dev: (2044.65, 1464.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8140)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 410.377 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516671, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 760, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5573)
[0000][PE] mean and std.dev: (1413.54, 1693.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1100, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (1179.72, 692.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 411.922 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516110, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 658, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (817.67, 629.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1441, 2263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4831)
[0000][PE] mean and std.dev: (1605.29, 968.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 411.331 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516708, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (880, 1401, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (1395.53, 777.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1467, 2694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (1869.60, 1292.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 409.264 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516631, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 719, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (772.23, 568.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1371, 2963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7347)
[0000][PE] mean and std.dev: (1656.76, 1147.15)
[0000][PE] low and high boundaries for proper pairs: (1, 9539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 410.877 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516305, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 872, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3715)
[0000][PE] mean and std.dev: (849.00, 672.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1319, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (1178.17, 530.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 409.101 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516793, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 535, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (946.86, 979.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1609, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4652)
[0000][PE] mean and std.dev: (1592.56, 856.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 410.185 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516456, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 518, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (916.20, 1091.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1321, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1303.33, 513.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 406.902 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516996, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 324, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2648)
[0000][PE] mean and std.dev: (619.48, 577.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1732, 2717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6359)
[0000][PE] mean and std.dev: (1804.75, 1248.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 408.965 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517019, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 907, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (1074.91, 790.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1211, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (1124.14, 425.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 408.966 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516752, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 758, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4028)
[0000][PE] mean and std.dev: (948.90, 699.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5254)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (696, 1113, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4845)
[0000][PE] mean and std.dev: (1309.81, 954.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 410.095 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516785, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 493, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (667.28, 508.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1831, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7996)
[0000][PE] mean and std.dev: (2563.79, 1742.09)
[0000][PE] low and high boundaries for proper pairs: (1, 10231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 407.196 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516504, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 837, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1224.27, 1395.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1404, 1787, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1949.33, 1378.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 406.383 CPU sec, 22.753 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516434, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 924, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3799)
[0000][PE] mean and std.dev: (908.81, 585.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (621, 1640, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1270.94, 619.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 413.782 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516429, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 881, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1144.96, 1159.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1242, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (1069.33, 492.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 408.705 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516257, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 984, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1206.38, 1104.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (753, 1351, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (1289.21, 808.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 411.463 CPU sec, 23.137 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206204
	[0000][ M::kt_pipeline] read 1206204 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517123, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 418, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (549.83, 406.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 2419, 3620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (2597.00, 1471.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 407.309 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516429, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 721, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3073)
[0000][PE] mean and std.dev: (933.28, 786.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1103, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1127.36, 515.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206204 reads in 406.484 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516760, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 909, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (828.38, 525.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1933, 3081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (2311.05, 1560.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 408.986 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516517, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 887, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (1031.63, 938.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.19, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1549, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5221)
[0000][PE] mean and std.dev: (1493.21, 889.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 409.646 CPU sec, 22.956 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516292, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 557, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (903.33, 764.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1286, 1493, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (1555.57, 846.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 409.592 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516566, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 644, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (745.63, 566.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1196, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1350.11, 1074.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 407.180 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516745, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 1186, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1091.10, 786.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1014, 1598, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3900)
[0000][PE] mean and std.dev: (1386.89, 587.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 407.767 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516691, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 395, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4460)
[0000][PE] mean and std.dev: (1009.80, 1110.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (376, 1379, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5782)
[0000][PE] mean and std.dev: (1582.05, 1436.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.374 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206236
	[0000][ M::kt_pipeline] read 1206236 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516346, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 577, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (985.36, 985.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1314, 1934, 3374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7494)
[0000][PE] mean and std.dev: (2196.42, 1434.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 409.779 CPU sec, 22.935 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516406, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 959, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5240)
[0000][PE] mean and std.dev: (1099.69, 824.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.01, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (722, 963, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (1061.53, 688.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206236 reads in 413.758 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516525, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 711, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5276)
[0000][PE] mean and std.dev: (1026.32, 1108.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1089, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (1074.38, 403.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 406.028 CPU sec, 22.753 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516253, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 879, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7069)
[0000][PE] mean and std.dev: (1324.00, 1276.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1530, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5708)
[0000][PE] mean and std.dev: (1688.65, 1074.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 412.596 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516563, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 1064, 1824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4756)
[0000][PE] mean and std.dev: (1124.68, 823.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6222)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1645, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1775.35, 963.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 410.157 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516656, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (586, 1613, 2788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7192)
[0000][PE] mean and std.dev: (1640.20, 1517.21)
[0000][PE] low and high boundaries for proper pairs: (1, 9394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (694, 1137, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1312.76, 757.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 409.845 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516371, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1132, 1816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1294.43, 1121.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 991, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3021)
[0000][PE] mean and std.dev: (1085.56, 643.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 409.153 CPU sec, 22.925 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516666, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 771, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (994.59, 1003.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1638, 3367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7873)
[0000][PE] mean and std.dev: (1848.11, 1217.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 410.418 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516862, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 779, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (812.46, 624.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1232, 2985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7253)
[0000][PE] mean and std.dev: (1858.62, 1637.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 406.421 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516568, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (666, 901, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2283)
[0000][PE] mean and std.dev: (836.00, 497.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1309, 1885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1353.27, 906.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 408.203 CPU sec, 22.882 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516751, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 947, 3043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7941)
[0000][PE] mean and std.dev: (1307.50, 1211.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1448, 2365, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6959)
[0000][PE] mean and std.dev: (2546.70, 1420.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 406.908 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517015, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 374, 1288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3456)
[0000][PE] mean and std.dev: (729.79, 700.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4540)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 405.230 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516394, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 777, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (929.29, 756.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1004, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4139)
[0000][PE] mean and std.dev: (1160.58, 654.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 406.614 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516653, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 602, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (885.04, 844.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1582, 2425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1731.87, 897.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 406.100 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516770, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 571, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5482)
[0000][PE] mean and std.dev: (1113.60, 1011.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1259, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (1264.21, 592.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 405.974 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206554
	[0000][ M::kt_pipeline] read 1206554 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516548, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 912, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5448)
[0000][PE] mean and std.dev: (1195.72, 1258.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1120, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (1364.92, 828.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 407.971 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516327, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 996, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (747.18, 546.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1667, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1511.79, 687.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206554 reads in 410.665 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516608, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 1133, 2424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6746)
[0000][PE] mean and std.dev: (1446.65, 1467.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1165, 3541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9045)
[0000][PE] mean and std.dev: (1905.72, 1496.63)
[0000][PE] low and high boundaries for proper pairs: (1, 11797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 407.035 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516460, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1372, 2888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7746)
[0000][PE] mean and std.dev: (1434.87, 1264.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 1105, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4016)
[0000][PE] mean and std.dev: (1224.44, 871.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 407.065 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516667, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 504, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2642)
[0000][PE] mean and std.dev: (611.12, 440.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1535, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (1657.41, 776.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 402.746 CPU sec, 22.527 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516305, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 494, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (951.96, 1173.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (660, 1338, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (1153.41, 599.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 407.928 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516635, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 816, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (882.57, 727.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1312, 1721, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (1690.19, 759.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 406.460 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516300, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 718, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6151)
[0000][PE] mean and std.dev: (1120.82, 1082.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1135, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (1072.82, 500.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 407.045 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516327, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (750, 1072, 1683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (1161.50, 659.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1819, 3838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9250)
[0000][PE] mean and std.dev: (2530.47, 2069.92)
[0000][PE] low and high boundaries for proper pairs: (1, 11956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 407.919 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516757, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 698, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3741)
[0000][PE] mean and std.dev: (857.43, 779.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (426, 1382, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (1231.07, 697.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 406.670 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516109, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 838, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4799)
[0000][PE] mean and std.dev: (1207.80, 1150.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.67, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1793, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6966)
[0000][PE] mean and std.dev: (2151.39, 1421.39)
[0000][PE] low and high boundaries for proper pairs: (1, 8917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 408.908 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516653, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (529, 1083, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (1039.14, 678.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (539, 1185, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1157.58, 764.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 407.319 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516624, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 870, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (758.45, 516.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1223, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (1240.00, 652.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 406.809 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516445, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 487, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (679.19, 567.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1328, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5079)
[0000][PE] mean and std.dev: (1430.25, 978.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 408.812 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516762, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 583, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (696.67, 592.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1583, 4291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10293)
[0000][PE] mean and std.dev: (2754.87, 2262.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 409.415 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516024, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (598, 949, 1553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3463)
[0000][PE] mean and std.dev: (1027.23, 749.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 929, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3798)
[0000][PE] mean and std.dev: (1062.86, 553.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 406.871 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515818, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 1095, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4325)
[0000][PE] mean and std.dev: (998.86, 719.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1187, 3297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8389)
[0000][PE] mean and std.dev: (1945.82, 1757.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10935)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 410.980 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515891, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 548, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (898.20, 912.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1045, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4056)
[0000][PE] mean and std.dev: (1115.73, 700.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 410.559 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516531, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 1273, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4774)
[0000][PE] mean and std.dev: (1244.50, 1090.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1341, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (1428.70, 572.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 406.851 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516956, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 887, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3651)
[0000][PE] mean and std.dev: (990.00, 717.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1232, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4624)
[0000][PE] mean and std.dev: (1494.40, 832.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 407.196 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516339, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 394, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (592.40, 504.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1142, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (1380.10, 785.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 407.755 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516617, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 905, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (915.09, 715.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1127, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1019.47, 648.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 408.738 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516859, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 681, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2500)
[0000][PE] mean and std.dev: (707.04, 624.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1227, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3693)
[0000][PE] mean and std.dev: (1499.61, 880.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 406.522 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206180
	[0000][ M::kt_pipeline] read 1206180 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516387, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 909, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5438)
[0000][PE] mean and std.dev: (1151.00, 1141.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 1217, 3155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8359)
[0000][PE] mean and std.dev: (1430.31, 1115.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 405.322 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516940, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (702, 1249, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1280.53, 858.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1189, 1563, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1524.26, 524.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206180 reads in 404.926 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516664, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 826, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (887.35, 724.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1383, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1761.08, 961.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 405.885 CPU sec, 22.728 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516691, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 982, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6691)
[0000][PE] mean and std.dev: (1132.22, 980.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8805)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 948, 1530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1005.47, 726.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 405.743 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516958, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 441, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2839)
[0000][PE] mean and std.dev: (630.84, 517.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1227, 1584, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1594.27, 847.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 406.527 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516565, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (606, 853, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (788.94, 471.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1118, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1498.60, 998.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 405.863 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517090, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 476, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (558.23, 384.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1226, 2205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4773)
[0000][PE] mean and std.dev: (1542.00, 1041.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 405.431 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515972, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (493, 821, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1051.42, 790.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1851, 3450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7886)
[0000][PE] mean and std.dev: (2288.88, 1659.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.121 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516651, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 409, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4525)
[0000][PE] mean and std.dev: (1044.38, 1160.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1168, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7569)
[0000][PE] mean and std.dev: (1697.32, 1442.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 410.638 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516103, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 783, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (800.56, 568.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1307, 2300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1498.05, 869.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 407.379 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516367, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (705, 1051, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (955.59, 445.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1042, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3904)
[0000][PE] mean and std.dev: (988.43, 576.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 408.611 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515980, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 755, 1411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (919.87, 704.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (802, 1071, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4666)
[0000][PE] mean and std.dev: (1449.25, 1026.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 408.220 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516324, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1174, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4921)
[0000][PE] mean and std.dev: (1403.72, 1176.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1282, 1323, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (212, 2887)
[0000][PE] mean and std.dev: (1372.30, 410.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 406.977 CPU sec, 22.765 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206170
	[0000][ M::kt_pipeline] read 1206170 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516855, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1113, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5612)
[0000][PE] mean and std.dev: (1179.50, 1046.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1352, 1738, 2427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4577)
[0000][PE] mean and std.dev: (1829.64, 594.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 406.223 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516669, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 350, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (543.00, 510.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1405, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (1369.31, 577.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206170 reads in 405.625 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516398, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 846, 1660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4416)
[0000][PE] mean and std.dev: (853.07, 633.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1412, 2749, 6113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15515)
[0000][PE] mean and std.dev: (3375.83, 2868.92)
[0000][PE] low and high boundaries for proper pairs: (1, 20216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 407.761 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516537, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 632, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2994)
[0000][PE] mean and std.dev: (652.40, 434.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1433, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (1348.80, 612.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 402.869 CPU sec, 22.567 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516400, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 909, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2470)
[0000][PE] mean and std.dev: (744.90, 434.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1601, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6132)
[0000][PE] mean and std.dev: (1600.93, 978.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7867)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 406.679 CPU sec, 22.811 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516702, 10, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 788, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (913.59, 862.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (821, 3166, 7669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 21365)
[0000][PE] mean and std.dev: (4024.30, 3338.42)
[0000][PE] low and high boundaries for proper pairs: (1, 28213)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1401, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (1280.07, 472.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 408.698 CPU sec, 22.886 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516818, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 936, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (910.55, 674.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1235, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (1284.55, 551.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 405.208 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516533, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 707, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6116)
[0000][PE] mean and std.dev: (1199.92, 1273.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1528, 3012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7138)
[0000][PE] mean and std.dev: (1525.80, 851.07)
[0000][PE] low and high boundaries for proper pairs: (1, 9201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 407.718 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516845, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 1203, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5567)
[0000][PE] mean and std.dev: (1578.92, 1490.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1457, 2779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6443)
[0000][PE] mean and std.dev: (1948.00, 1594.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 406.205 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516155, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 781, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (1181.61, 1087.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1224, 1436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (1070.43, 383.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 409.496 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516605, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 589, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (878.32, 811.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1195, 3029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7313)
[0000][PE] mean and std.dev: (1899.75, 1620.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 404.987 CPU sec, 22.685 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516704, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (396, 940, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (898.47, 668.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (508, 1439, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1144.71, 633.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 405.594 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516504, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 626, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (753.42, 682.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (602, 926, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3014)
[0000][PE] mean and std.dev: (1118.67, 777.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 408.426 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516484, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1062, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (1210.62, 1188.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1339, 3616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9154)
[0000][PE] mean and std.dev: (2056.31, 1745.44)
[0000][PE] low and high boundaries for proper pairs: (1, 11923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 405.482 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516527, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 835, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3422)
[0000][PE] mean and std.dev: (877.77, 607.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1466, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7757)
[0000][PE] mean and std.dev: (1729.38, 1273.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 409.461 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516653, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 425, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1003.00, 916.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1453, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1342.11, 781.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 407.439 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516792, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 774, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (873.35, 733.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1190, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1618.17, 1023.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 409.613 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516687, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 419, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (727.62, 706.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (484, 1254, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1380.00, 1023.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 405.137 CPU sec, 22.689 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206542
	[0000][ M::kt_pipeline] read 1206542 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516383, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 832, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3958)
[0000][PE] mean and std.dev: (855.39, 657.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1605, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4667)
[0000][PE] mean and std.dev: (1569.25, 664.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5812)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 410.820 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516308, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 774, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (903.44, 713.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1392, 1756, 2310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (1666.13, 795.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206542 reads in 409.738 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516434, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 663, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (767.04, 577.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (637, 1544, 5617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15577)
[0000][PE] mean and std.dev: (2902.60, 2789.05)
[0000][PE] low and high boundaries for proper pairs: (1, 20557)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1146, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1127.05, 605.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 406.046 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516458, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 889, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (925.26, 727.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1446, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6866)
[0000][PE] mean and std.dev: (2085.00, 1675.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 410.359 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516080, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 1023, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6459)
[0000][PE] mean and std.dev: (1409.22, 1476.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1166, 2497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5797)
[0000][PE] mean and std.dev: (1268.57, 781.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 406.762 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516653, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 334, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2311)
[0000][PE] mean and std.dev: (526.66, 530.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 1174, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1201.67, 819.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 407.126 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516903, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 412, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (591.30, 514.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1403, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4741)
[0000][PE] mean and std.dev: (1423.89, 819.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 404.187 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516777, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 901, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4087)
[0000][PE] mean and std.dev: (930.36, 661.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (398, 1731, 3496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9692)
[0000][PE] mean and std.dev: (2067.00, 2048.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12790)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1292, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3664)
[0000][PE] mean and std.dev: (1340.54, 547.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 409.399 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516663, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 375, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1735)
[0000][PE] mean and std.dev: (514.72, 366.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 1510, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4842)
[0000][PE] mean and std.dev: (1443.00, 1214.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6316)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 409.288 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516874, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 674, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3738)
[0000][PE] mean and std.dev: (711.70, 588.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (498, 944, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3645)
[0000][PE] mean and std.dev: (910.80, 417.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4694)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 406.654 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516522, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 825, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3934)
[0000][PE] mean and std.dev: (996.79, 697.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1129, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2462)
[0000][PE] mean and std.dev: (1075.25, 466.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 408.365 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516446, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 399, 1143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (644.93, 524.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.59, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1560, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7657)
[0000][PE] mean and std.dev: (2010.15, 1563.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 405.616 CPU sec, 22.707 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516167, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 856, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2697)
[0000][PE] mean and std.dev: (732.13, 384.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1461, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (1519.08, 773.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.372 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516824, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 508, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3067)
[0000][PE] mean and std.dev: (793.68, 728.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1705, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4360)
[0000][PE] mean and std.dev: (1569.00, 696.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5418)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 404.123 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516660, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 429, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (751.33, 809.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1198, 1363, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5629)
[0000][PE] mean and std.dev: (1720.37, 1003.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 405.474 CPU sec, 22.704 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516520, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 1078, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6050)
[0000][PE] mean and std.dev: (1426.97, 1407.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1574, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (1358.37, 593.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 404.054 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516794, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 638, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4190)
[0000][PE] mean and std.dev: (816.05, 791.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5513)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1371, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3694)
[0000][PE] mean and std.dev: (1314.33, 567.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 407.902 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206220
	[0000][ M::kt_pipeline] read 1206220 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516512, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 687, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7119)
[0000][PE] mean and std.dev: (1647.56, 1970.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.18, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1172, 2059, 3869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9263)
[0000][PE] mean and std.dev: (2083.50, 1303.35)
[0000][PE] low and high boundaries for proper pairs: (1, 11960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 407.434 CPU sec, 22.797 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516605, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 410, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (752.45, 641.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1135, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1467.48, 1150.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206220 reads in 409.597 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517011, 11, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 338, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (717.59, 686.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (313, 1751, 3866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10972)
[0000][PE] mean and std.dev: (2197.27, 2077.73)
[0000][PE] low and high boundaries for proper pairs: (1, 14525)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1172, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1114.07, 527.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5126)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 405.869 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516271, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 796, 1209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (734.17, 569.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 973, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1079.33, 512.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 407.586 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516653, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 826, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (699.00, 514.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3867)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1557, 2141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (1518.44, 667.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 405.238 CPU sec, 22.717 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516372, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 770, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (780.85, 599.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1308, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3637)
[0000][PE] mean and std.dev: (1226.81, 585.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 406.691 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516850, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 441, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (803.06, 632.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1249, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (1230.53, 659.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 408.086 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516801, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 686, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3529)
[0000][PE] mean and std.dev: (763.78, 585.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1233, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3987)
[0000][PE] mean and std.dev: (1156.57, 496.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 405.966 CPU sec, 22.707 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516522, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 498, 1017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (600.61, 522.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1344, 1684, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1662.00, 907.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 408.856 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516663, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 412, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (821.37, 752.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1063, 2252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1283.73, 946.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 405.963 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516601, 0, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 399, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (561.94, 410.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1301, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4305)
[0000][PE] mean and std.dev: (1211.67, 581.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.919 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517074, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 1129, 1898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4772)
[0000][PE] mean and std.dev: (1281.44, 975.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1345, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1336.32, 860.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 407.358 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516750, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 879, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (790.35, 729.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1414, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5925)
[0000][PE] mean and std.dev: (1595.65, 1109.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7660)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 407.403 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516716, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1157, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (1290.67, 1073.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.07, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1307, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (1537.84, 853.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 409.518 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516525, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 526, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (830.67, 594.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1387, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5220)
[0000][PE] mean and std.dev: (1724.06, 1088.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 407.306 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517160, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 1002, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4706)
[0000][PE] mean and std.dev: (1136.65, 1129.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1349, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1400.00, 879.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 404.544 CPU sec, 22.620 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516695, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 961, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4046)
[0000][PE] mean and std.dev: (941.12, 751.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1500, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3569)
[0000][PE] mean and std.dev: (1501.00, 791.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 405.157 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516557, 8, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 844, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (902.57, 661.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1496, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4942)
[0000][PE] mean and std.dev: (1720.50, 1004.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 407.266 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516343, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 687, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (834.75, 667.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1045, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1251.42, 691.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 407.169 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516582, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 640, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3003)
[0000][PE] mean and std.dev: (760.11, 713.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1263, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1539.08, 825.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 404.170 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516324, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 407, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (561.44, 476.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1372, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6392)
[0000][PE] mean and std.dev: (1819.41, 1632.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 406.931 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206542
	[0000][ M::kt_pipeline] read 1206542 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516599, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 878, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (886.75, 728.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1288, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5962)
[0000][PE] mean and std.dev: (1718.58, 1192.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 408.759 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516866, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (744, 1369, 3070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7722)
[0000][PE] mean and std.dev: (1770.12, 1465.64)
[0000][PE] low and high boundaries for proper pairs: (1, 10048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1437, 3095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7495)
[0000][PE] mean and std.dev: (2103.80, 1952.64)
[0000][PE] low and high boundaries for proper pairs: (1, 9914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206542 reads in 403.876 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516255, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 499, 1428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (813.45, 752.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1529, 2313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5243)
[0000][PE] mean and std.dev: (1577.52, 1144.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 409.783 CPU sec, 22.941 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516754, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 607, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (803.06, 711.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1388, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4719)
[0000][PE] mean and std.dev: (1831.44, 1079.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 405.235 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516694, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 853, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (927.57, 607.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1160, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1423.27, 649.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 406.903 CPU sec, 22.780 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516303, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1024, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4374)
[0000][PE] mean and std.dev: (1173.73, 1111.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 1399, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (408, 2393)
[0000][PE] mean and std.dev: (1322.50, 254.85)
[0000][PE] low and high boundaries for proper pairs: (11, 2790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 405.495 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516223, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 656, 2303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6199)
[0000][PE] mean and std.dev: (1430.06, 1398.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8147)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1388, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5082)
[0000][PE] mean and std.dev: (1613.65, 1004.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 406.047 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516535, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 400, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (638.87, 705.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1194, 1617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (1070.22, 569.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 405.669 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517000, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 546, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2297)
[0000][PE] mean and std.dev: (642.54, 501.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1195, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7085)
[0000][PE] mean and std.dev: (1856.00, 1303.88)
[0000][PE] low and high boundaries for proper pairs: (1, 9162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 404.038 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516488, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 742, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3581)
[0000][PE] mean and std.dev: (886.30, 645.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4663)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1487, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6883)
[0000][PE] mean and std.dev: (1791.09, 1220.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 404.923 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516506, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (973, 1769, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5758)
[0000][PE] mean and std.dev: (1671.43, 1077.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1294, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5471)
[0000][PE] mean and std.dev: (1165.42, 667.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 405.825 CPU sec, 22.695 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516507, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 664, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (827.95, 657.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (663, 1215, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (1159.50, 671.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 407.532 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516593, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 776, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4092)
[0000][PE] mean and std.dev: (873.27, 700.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1631, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5602)
[0000][PE] mean and std.dev: (1969.00, 1171.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 412.043 CPU sec, 23.049 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516068, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 473, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3763)
[0000][PE] mean and std.dev: (867.00, 948.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (623, 991, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1022.76, 753.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 404.014 CPU sec, 22.613 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516611, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1072, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (1158.88, 1002.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (671, 976, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (904.89, 406.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 407.791 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516521, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 876, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1089.62, 1024.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1592, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4957)
[0000][PE] mean and std.dev: (1254.71, 889.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6439)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 407.903 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516753, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 1090, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1233.79, 958.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1523, 2532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5066)
[0000][PE] mean and std.dev: (1845.78, 1235.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 405.317 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516699, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 1095, 2239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6281)
[0000][PE] mean and std.dev: (1272.52, 1168.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1562, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4098)
[0000][PE] mean and std.dev: (1333.85, 711.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 406.455 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516458, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 589, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5405)
[0000][PE] mean and std.dev: (1031.60, 970.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1713, 2504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5770)
[0000][PE] mean and std.dev: (1591.06, 1027.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 405.737 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516868, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 611, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (711.93, 523.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1244, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1537.67, 1185.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 405.130 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516570, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 805, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4063)
[0000][PE] mean and std.dev: (908.32, 732.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5287)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1063, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5481)
[0000][PE] mean and std.dev: (1415.24, 1121.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 404.189 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516899, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 612, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (797.88, 601.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1115, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (1147.06, 640.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 406.992 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516254, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 789, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (878.75, 725.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1304, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5948)
[0000][PE] mean and std.dev: (1267.92, 759.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 405.570 CPU sec, 22.673 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516173, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 683, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (1120.82, 1232.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1510, 2508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5158)
[0000][PE] mean and std.dev: (1879.56, 1000.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 405.964 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516504, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 1190, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6791)
[0000][PE] mean and std.dev: (1669.97, 1605.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1286, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (1356.55, 783.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 401.925 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516226, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 536, 750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (426.50, 293.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 1367, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (1555.66, 1339.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 408.541 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516877, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 436, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (744.81, 647.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1651, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1556.33, 752.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 405.458 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516317, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 366, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (705.89, 658.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1633, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6806)
[0000][PE] mean and std.dev: (1628.13, 1257.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 408.882 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516870, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 785, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (800.43, 669.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 998, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5976)
[0000][PE] mean and std.dev: (1341.95, 1008.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 404.001 CPU sec, 22.651 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516521, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 766, 1891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1059.26, 979.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1173, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (1312.36, 782.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 409.220 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516427, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 795, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (820.14, 588.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1215, 3416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8198)
[0000][PE] mean and std.dev: (1974.24, 1638.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 406.755 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516635, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 334, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3910)
[0000][PE] mean and std.dev: (673.88, 707.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1270, 3699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9749)
[0000][PE] mean and std.dev: (1702.38, 1605.30)
[0000][PE] low and high boundaries for proper pairs: (1, 12774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 406.295 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516614, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 1030, 4668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13456)
[0000][PE] mean and std.dev: (2340.86, 2841.28)
[0000][PE] low and high boundaries for proper pairs: (1, 17850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1641, 2479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1754.29, 835.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 403.415 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516504, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 309, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 793)
[0000][PE] mean and std.dev: (285.20, 126.11)
[0000][PE] low and high boundaries for proper pairs: (1, 975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1217, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1255.36, 789.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 407.571 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516943, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 398, 1103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2917)
[0000][PE] mean and std.dev: (734.59, 718.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1337, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1504.12, 1052.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6101)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 407.157 CPU sec, 22.808 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516062, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 920, 1146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (892.56, 623.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1418, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4240)
[0000][PE] mean and std.dev: (1405.13, 696.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 406.982 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516656, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 450, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (653.55, 558.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1299, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3856)
[0000][PE] mean and std.dev: (1313.61, 636.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 404.860 CPU sec, 22.645 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516543, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 335, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (703.28, 692.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 2487, 4467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11595)
[0000][PE] mean and std.dev: (2286.75, 1687.46)
[0000][PE] low and high boundaries for proper pairs: (1, 15159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 412.204 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516463, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 741, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (774.22, 587.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1260, 3130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7404)
[0000][PE] mean and std.dev: (1675.04, 1339.98)
[0000][PE] low and high boundaries for proper pairs: (1, 9541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 401.971 CPU sec, 22.506 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516834, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 424, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9326)
[0000][PE] mean and std.dev: (1390.50, 1903.12)
[0000][PE] low and high boundaries for proper pairs: (1, 12389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (439, 927, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2578)
[0000][PE] mean and std.dev: (884.62, 593.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 401.092 CPU sec, 22.473 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516390, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 961, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (902.18, 680.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (658, 1359, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5257)
[0000][PE] mean and std.dev: (1758.35, 1405.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7380)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 404.639 CPU sec, 22.678 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516385, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 892, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2921)
[0000][PE] mean and std.dev: (855.35, 715.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (403, 1224, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1261.67, 1016.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 406.891 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206558
	[0000][ M::kt_pipeline] read 1206558 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516355, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 815, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1080.85, 855.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.58, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1132, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (1149.65, 650.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 406.333 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206558
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516304, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 384, 1255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (726.27, 724.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1571, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5649)
[0000][PE] mean and std.dev: (1720.35, 1081.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206558 reads in 405.841 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516825, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 1186, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7300)
[0000][PE] mean and std.dev: (1629.64, 1736.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 1032, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4599)
[0000][PE] mean and std.dev: (1323.50, 953.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 405.220 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516563, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 623, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6362)
[0000][PE] mean and std.dev: (1260.12, 1545.65)
[0000][PE] low and high boundaries for proper pairs: (1, 8380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1237, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5084)
[0000][PE] mean and std.dev: (1595.81, 1107.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 406.613 CPU sec, 22.760 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516457, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 709, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3576)
[0000][PE] mean and std.dev: (987.19, 785.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4647)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1533, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (1376.69, 681.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 409.126 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516217, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 633, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3445)
[0000][PE] mean and std.dev: (790.32, 607.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1558, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4413)
[0000][PE] mean and std.dev: (1591.76, 1007.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 405.712 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516552, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 847, 1925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1211.40, 1239.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1490, 4496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11366)
[0000][PE] mean and std.dev: (2438.80, 2136.09)
[0000][PE] low and high boundaries for proper pairs: (1, 14801)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 408.664 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516432, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1056, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4061)
[0000][PE] mean and std.dev: (1058.40, 852.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1177, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (1263.33, 863.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 404.488 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516525, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 690, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (829.94, 691.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1611, 3293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7807)
[0000][PE] mean and std.dev: (1759.07, 967.22)
[0000][PE] low and high boundaries for proper pairs: (1, 10064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 404.198 CPU sec, 22.609 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206246
	[0000][ M::kt_pipeline] read 1206246 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516508, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 1006, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (888.87, 617.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1871, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6888)
[0000][PE] mean and std.dev: (2236.71, 1593.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 403.682 CPU sec, 22.578 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516442, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 616, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (860.71, 613.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1363, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (1303.73, 660.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4576)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206246 reads in 402.466 CPU sec, 22.537 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516883, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 448, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (683.04, 565.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (946, 1252, 2227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (1510.67, 948.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 407.074 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516530, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 792, 1498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3896)
[0000][PE] mean and std.dev: (916.83, 742.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 925, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (976.71, 601.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 404.243 CPU sec, 22.627 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516662, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1266, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7658)
[0000][PE] mean and std.dev: (1595.95, 1597.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (662, 1576, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6902)
[0000][PE] mean and std.dev: (1741.44, 1676.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 402.113 CPU sec, 22.499 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516229, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 436, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (759.56, 649.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1412, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1778.71, 1153.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 407.586 CPU sec, 22.811 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516752, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 1036, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5259)
[0000][PE] mean and std.dev: (1041.44, 952.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1624, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6371)
[0000][PE] mean and std.dev: (1960.16, 1432.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 405.736 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516088, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1054, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7074)
[0000][PE] mean and std.dev: (1568.64, 1603.37)
[0000][PE] low and high boundaries for proper pairs: (1, 9309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1652, 2244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1566.14, 761.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 406.246 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516683, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 321, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2030)
[0000][PE] mean and std.dev: (431.81, 418.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1631, 1834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3990)
[0000][PE] mean and std.dev: (1138.12, 564.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 405.223 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516639, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 1038, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4168)
[0000][PE] mean and std.dev: (1009.45, 766.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (710, 1044, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (1415.53, 1133.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 404.134 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516096, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 616, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4640)
[0000][PE] mean and std.dev: (716.00, 647.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1101, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (1118.80, 523.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3215)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 414.826 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516625, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 753, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (738.21, 491.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1921, 3131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7493)
[0000][PE] mean and std.dev: (1769.53, 1109.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 405.921 CPU sec, 22.718 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516411, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 1114, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1310.14, 980.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1605, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4703)
[0000][PE] mean and std.dev: (1413.80, 846.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 406.220 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516779, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 377, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (818.00, 826.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1243, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4250)
[0000][PE] mean and std.dev: (1438.23, 665.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 406.153 CPU sec, 22.734 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516223, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 722, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (888.35, 750.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1304, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1327.40, 682.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 406.029 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206528
	[0000][ M::kt_pipeline] read 1206528 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516340, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1463, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6476)
[0000][PE] mean and std.dev: (1525.00, 1252.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.92, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1240, 1792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (1197.26, 654.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 406.563 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516641, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 657, 1794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1121.61, 991.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5985)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 995, 3241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8365)
[0000][PE] mean and std.dev: (1781.82, 1656.78)
[0000][PE] low and high boundaries for proper pairs: (1, 10927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206528 reads in 408.738 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206594
	[0000][ M::kt_pipeline] read 1206594 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516583, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1231, 2836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7652)
[0000][PE] mean and std.dev: (1807.65, 1925.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1245, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (1119.14, 399.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 408.231 CPU sec, 22.898 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516334, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 978, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (990.50, 645.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.68, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (802, 2063, 5122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13762)
[0000][PE] mean and std.dev: (3209.00, 2955.17)
[0000][PE] low and high boundaries for proper pairs: (1, 18082)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1688, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (1755.65, 804.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206594 reads in 407.325 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516494, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 1189, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1451.04, 1431.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1339, 2431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1575.50, 1243.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 403.021 CPU sec, 22.575 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516374, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 282, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4071)
[0000][PE] mean and std.dev: (579.38, 668.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1524, 3051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7117)
[0000][PE] mean and std.dev: (1825.62, 1239.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 407.420 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516382, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 1059, 3631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10315)
[0000][PE] mean and std.dev: (1847.14, 1899.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1598, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3191)
[0000][PE] mean and std.dev: (1423.68, 500.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.450 CPU sec, 22.948 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516857, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 819, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (961.52, 777.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1307, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (1413.30, 756.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4898)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 408.020 CPU sec, 22.862 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516148, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 655, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4515)
[0000][PE] mean and std.dev: (1078.00, 962.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1119, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (1420.24, 1049.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 408.839 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206230
	[0000][ M::kt_pipeline] read 1206230 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516321, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 335, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4492)
[0000][PE] mean and std.dev: (729.63, 718.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5913)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1084, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (1049.40, 320.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 410.952 CPU sec, 23.034 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516789, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (660, 1655, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6627)
[0000][PE] mean and std.dev: (1623.65, 1298.03)
[0000][PE] low and high boundaries for proper pairs: (1, 8616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1103, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (1138.10, 536.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206230 reads in 407.469 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206598
	[0000][ M::kt_pipeline] read 1206598 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516402, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 443, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (533.85, 469.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1250, 2119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1503.00, 853.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.161 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516570, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 369, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4392)
[0000][PE] mean and std.dev: (758.85, 677.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1470, 2954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6808)
[0000][PE] mean and std.dev: (1992.31, 1446.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206598 reads in 408.359 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517142, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 764, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3077)
[0000][PE] mean and std.dev: (846.57, 587.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (755, 1121, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1252.32, 805.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 405.907 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516288, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 637, 1494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3746)
[0000][PE] mean and std.dev: (847.55, 743.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1315, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1274.55, 704.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 408.226 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516641, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1165, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5379)
[0000][PE] mean and std.dev: (1213.83, 1109.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1607, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (1417.05, 864.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 407.256 CPU sec, 22.797 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516613, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 397, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (737.50, 708.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 947, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (1154.27, 530.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 405.792 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516581, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 751, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (853.68, 732.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1347, 2437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1917.43, 1640.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 406.371 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516536, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 424, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (661.15, 661.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1373, 3991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9743)
[0000][PE] mean and std.dev: (2083.00, 1526.50)
[0000][PE] low and high boundaries for proper pairs: (1, 12619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 409.438 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516428, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (802, 1014, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (1046.24, 592.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4498)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.62, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 1543, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3888)
[0000][PE] mean and std.dev: (1562.13, 664.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 403.191 CPU sec, 22.574 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516571, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 739, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (1114.19, 1110.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1240, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1458.07, 1237.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 405.040 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516390, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 762, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6927)
[0000][PE] mean and std.dev: (1308.13, 1607.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1418, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (1596.63, 764.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 407.431 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517124, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 686, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (713.12, 575.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1494, 4854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12206)
[0000][PE] mean and std.dev: (2813.11, 2259.82)
[0000][PE] low and high boundaries for proper pairs: (1, 15882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 405.585 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516590, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 895, 2805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7817)
[0000][PE] mean and std.dev: (1419.04, 1457.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (409, 857, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1151.54, 961.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 407.425 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (43, 516822, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 890, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (968.00, 833.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1050, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (1261.79, 739.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 404.895 CPU sec, 22.658 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516619, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 591, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (1113.22, 1089.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1253, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8508)
[0000][PE] mean and std.dev: (2152.45, 2096.58)
[0000][PE] low and high boundaries for proper pairs: (1, 11051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 408.035 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516317, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 687, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3800)
[0000][PE] mean and std.dev: (738.74, 501.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1468, 2837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6435)
[0000][PE] mean and std.dev: (1817.10, 1389.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 408.917 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517015, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 910, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3471)
[0000][PE] mean and std.dev: (900.00, 855.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 407.911 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516565, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 600, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3535)
[0000][PE] mean and std.dev: (798.52, 749.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1412, 1882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3152)
[0000][PE] mean and std.dev: (1467.31, 401.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 406.251 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516239, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 903, 1367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (924.25, 637.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1383, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4357)
[0000][PE] mean and std.dev: (1157.83, 620.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 409.586 CPU sec, 22.908 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516143, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 625, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3243)
[0000][PE] mean and std.dev: (667.29, 493.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1220, 2286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1513.29, 974.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 405.679 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515843, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 720, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (932.43, 994.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1569, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4830)
[0000][PE] mean and std.dev: (1448.67, 603.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 407.523 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516624, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 424, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (822.00, 1057.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1503, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5004)
[0000][PE] mean and std.dev: (1466.47, 1107.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 403.713 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516031, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 727, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2667)
[0000][PE] mean and std.dev: (763.95, 560.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.15, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1460, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (1283.27, 421.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 403.443 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516515, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 975, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4402)
[0000][PE] mean and std.dev: (1169.78, 988.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1110, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3401)
[0000][PE] mean and std.dev: (1198.07, 636.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 405.003 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206194
	[0000][ M::kt_pipeline] read 1206194 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516664, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 538, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3873)
[0000][PE] mean and std.dev: (879.92, 781.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1118, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3038)
[0000][PE] mean and std.dev: (1209.20, 646.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 407.878 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516656, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 1033, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (1013.50, 902.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1567, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4813)
[0000][PE] mean and std.dev: (1620.94, 716.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206194 reads in 407.791 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516402, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1086, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6488)
[0000][PE] mean and std.dev: (1378.37, 1266.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1703, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5724)
[0000][PE] mean and std.dev: (1842.83, 1177.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 405.794 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516356, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 753, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (879.17, 757.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (654, 1330, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4530)
[0000][PE] mean and std.dev: (1240.67, 901.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 403.937 CPU sec, 22.624 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516675, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 893, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6441)
[0000][PE] mean and std.dev: (1221.57, 1355.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8516)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1474, 2949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6783)
[0000][PE] mean and std.dev: (1761.41, 1193.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 401.128 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516841, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 1376, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1253.95, 889.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1365, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (1395.82, 618.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 405.598 CPU sec, 22.696 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516346, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 659, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3556)
[0000][PE] mean and std.dev: (840.29, 785.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1452, 2660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5940)
[0000][PE] mean and std.dev: (1957.85, 1331.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 405.361 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515864, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 484, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (661.12, 433.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1433, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6038)
[0000][PE] mean and std.dev: (1825.87, 1090.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 403.596 CPU sec, 22.583 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516564, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1258, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (1179.17, 842.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1326, 1633, 2755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5613)
[0000][PE] mean and std.dev: (1811.39, 1301.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 406.201 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516668, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 397, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5778)
[0000][PE] mean and std.dev: (1159.18, 1175.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (437, 1190, 2248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5870)
[0000][PE] mean and std.dev: (1556.14, 1361.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 406.701 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516391, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 507, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3577)
[0000][PE] mean and std.dev: (863.37, 854.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1418, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3636)
[0000][PE] mean and std.dev: (1276.75, 577.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 407.833 CPU sec, 22.833 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206168
	[0000][ M::kt_pipeline] read 1206168 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516836, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 399, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (664.29, 592.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1452, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1698.17, 913.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 406.323 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516862, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 572, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5349)
[0000][PE] mean and std.dev: (1079.22, 1177.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1519, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6285)
[0000][PE] mean and std.dev: (1650.19, 821.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206168 reads in 402.933 CPU sec, 22.605 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515923, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1026, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1090.90, 877.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1701, 3745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9335)
[0000][PE] mean and std.dev: (2188.31, 1543.90)
[0000][PE] low and high boundaries for proper pairs: (1, 12130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 411.452 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516260, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 772, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4114)
[0000][PE] mean and std.dev: (999.00, 850.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (705, 1309, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (1110.75, 506.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 401.316 CPU sec, 22.458 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516425, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1223, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (1244.92, 782.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1512, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3462)
[0000][PE] mean and std.dev: (1275.47, 767.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 411.035 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516641, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1027, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1111.34, 1069.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1377, 2399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5155)
[0000][PE] mean and std.dev: (1573.56, 967.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 403.636 CPU sec, 22.570 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516512, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 348, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2663)
[0000][PE] mean and std.dev: (598.80, 623.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1534, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1382.88, 491.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 401.936 CPU sec, 22.501 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516507, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 605, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (811.48, 636.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1268, 1954, 2710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5594)
[0000][PE] mean and std.dev: (2094.40, 1350.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 405.991 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516851, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 702, 2178)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5952)
[0000][PE] mean and std.dev: (1058.37, 1030.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1444, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1425.19, 711.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 405.130 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516831, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 663, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (703.00, 482.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1369, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1170.70, 686.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 402.272 CPU sec, 22.512 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516826, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 562, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2482)
[0000][PE] mean and std.dev: (595.21, 461.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (648, 966, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (808.55, 387.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 404.305 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516375, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 433, 1636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (829.89, 801.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1260, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (1168.81, 609.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 405.933 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516700, 1, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (830, 1258, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4934)
[0000][PE] mean and std.dev: (1166.29, 824.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (969, 1474, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1332.67, 600.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 406.514 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516505, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 730, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4231)
[0000][PE] mean and std.dev: (998.35, 959.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 405.712 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516806, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (756, 1625, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4980)
[0000][PE] mean and std.dev: (1481.74, 978.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1279, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5343)
[0000][PE] mean and std.dev: (1593.12, 1147.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 404.321 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516348, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1101, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5208)
[0000][PE] mean and std.dev: (1151.52, 911.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1008, 2684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6392)
[0000][PE] mean and std.dev: (1506.07, 1049.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 408.395 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517115, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 592, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (831.35, 608.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1542, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1479.53, 1027.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 404.781 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516390, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 791, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (1010.95, 775.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.40, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1279, 1404, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3835)
[0000][PE] mean and std.dev: (1524.75, 837.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 406.144 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516804, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 862, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4102)
[0000][PE] mean and std.dev: (1111.16, 1088.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 1398, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (70, 3020)
[0000][PE] mean and std.dev: (1472.56, 548.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 402.582 CPU sec, 22.520 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517038, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 884, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (923.88, 671.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1307, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (1305.23, 465.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 404.102 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516355, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (634, 1060, 2511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6265)
[0000][PE] mean and std.dev: (1515.55, 1387.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1418, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1651.38, 877.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 404.202 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516406, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 880, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (998.53, 812.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1483, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1737.82, 1017.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 405.315 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516607, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 1157, 1631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (1229.00, 940.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1530, 2187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1626.00, 911.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 406.562 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516365, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 852, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5044)
[0000][PE] mean and std.dev: (1105.31, 898.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (590, 1645, 3663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9809)
[0000][PE] mean and std.dev: (1724.46, 1532.68)
[0000][PE] low and high boundaries for proper pairs: (1, 12882)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 403.652 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516682, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 627, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (664.00, 574.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (690, 1466, 2220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1519.35, 977.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6810)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 405.600 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516622, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 755, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (1020.67, 971.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1152, 1761, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1532.07, 546.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 406.147 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516967, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 808, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5331)
[0000][PE] mean and std.dev: (1095.31, 1029.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (668, 1777, 3018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7718)
[0000][PE] mean and std.dev: (1966.41, 1676.74)
[0000][PE] low and high boundaries for proper pairs: (1, 10068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 402.396 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516450, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 990, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5037)
[0000][PE] mean and std.dev: (1168.47, 989.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1243, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (1321.94, 528.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 408.061 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516531, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 846, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3686)
[0000][PE] mean and std.dev: (899.21, 816.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1418, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1499.57, 704.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 406.964 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516306, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 473, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (682.67, 684.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1622, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6558)
[0000][PE] mean and std.dev: (1688.18, 1064.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8416)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 406.675 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516584, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 948, 1876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5182)
[0000][PE] mean and std.dev: (1046.83, 988.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1312, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1408.59, 818.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 404.024 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515917, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1487, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (1170.67, 815.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 1096, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1076.75, 818.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 409.150 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516568, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 732, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (595.89, 336.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (468, 1088, 2028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5148)
[0000][PE] mean and std.dev: (1399.94, 1176.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 406.063 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516632, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 377, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (489.83, 439.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3616)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1207, 2839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6889)
[0000][PE] mean and std.dev: (1748.82, 1402.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 404.424 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516457, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (656, 1489, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1577.27, 1180.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1479, 3845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9617)
[0000][PE] mean and std.dev: (2046.06, 1310.62)
[0000][PE] low and high boundaries for proper pairs: (1, 12503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 408.550 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516187, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 569, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3985)
[0000][PE] mean and std.dev: (856.43, 806.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.06, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (726, 1453, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (1523.29, 1024.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 410.017 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206584
	[0000][ M::kt_pipeline] read 1206584 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516969, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 332, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (626.00, 574.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 1032, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1289.43, 991.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 405.088 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516772, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 588, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (718.32, 526.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1155, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3615)
[0000][PE] mean and std.dev: (1218.60, 706.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206584 reads in 409.288 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516338, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (525, 846, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4104)
[0000][PE] mean and std.dev: (1023.89, 780.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1334, 1748, 2948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6176)
[0000][PE] mean and std.dev: (2039.59, 1170.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 408.213 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516159, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (630, 1064, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5262)
[0000][PE] mean and std.dev: (1504.84, 1400.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1188, 1246, 1953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (1406.73, 643.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 407.249 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516967, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 414, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3208)
[0000][PE] mean and std.dev: (735.53, 716.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1481, 2104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1399.69, 703.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 405.368 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517192, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 1036, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1067.89, 926.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5519)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1933, 2441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1822.58, 909.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 401.702 CPU sec, 22.472 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516771, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 467, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (667.71, 483.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1581, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1554.07, 749.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 408.746 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516437, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 826, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (960.23, 779.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1397, 2477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5325)
[0000][PE] mean and std.dev: (1735.30, 1071.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 405.919 CPU sec, 22.723 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516751, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 493, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1011.89, 915.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1112, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (1120.00, 595.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4655)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 404.971 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516789, 9, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 945, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1045.40, 845.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1484, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3430)
[0000][PE] mean and std.dev: (1510.64, 465.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 406.187 CPU sec, 22.750 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516495, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 429, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2882)
[0000][PE] mean and std.dev: (676.13, 643.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 1443, 2877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7855)
[0000][PE] mean and std.dev: (1605.00, 1567.95)
[0000][PE] low and high boundaries for proper pairs: (1, 10344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 405.447 CPU sec, 22.732 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516578, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 281, 2601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7299)
[0000][PE] mean and std.dev: (1302.85, 1726.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1295, 2649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6483)
[0000][PE] mean and std.dev: (1726.65, 1454.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 405.947 CPU sec, 22.719 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516834, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 392, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4487)
[0000][PE] mean and std.dev: (878.91, 893.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1608, 2878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6938)
[0000][PE] mean and std.dev: (2075.72, 1718.21)
[0000][PE] low and high boundaries for proper pairs: (1, 8968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 406.555 CPU sec, 22.771 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516637, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 467, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1981)
[0000][PE] mean and std.dev: (558.38, 404.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1337, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (1193.27, 533.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 410.542 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516778, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 979, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1036.55, 834.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1111, 1482, 2320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (1397.40, 631.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 405.309 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516232, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 490, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (765.56, 747.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1197, 1338, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (1460.24, 575.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 412.193 CPU sec, 23.085 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516574, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 574, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3319)
[0000][PE] mean and std.dev: (750.88, 673.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1458, 1680, 2561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4767)
[0000][PE] mean and std.dev: (2068.09, 1038.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6223)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 407.177 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516768, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1210, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1125.10, 871.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1241, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (1184.42, 563.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 407.653 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516543, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 418, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2154)
[0000][PE] mean and std.dev: (542.42, 347.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2754)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1524, 3150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7104)
[0000][PE] mean and std.dev: (2117.36, 1396.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 405.035 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516763, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 809, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (718.58, 593.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (785, 1443, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4523)
[0000][PE] mean and std.dev: (1391.19, 794.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 401.159 CPU sec, 22.507 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206528
	[0000][ M::kt_pipeline] read 1206528 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516333, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (440, 1062, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5003)
[0000][PE] mean and std.dev: (1073.67, 718.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1247, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1368.00, 572.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 403.125 CPU sec, 22.576 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206528
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516206, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (715, 1190, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4549)
[0000][PE] mean and std.dev: (1291.23, 878.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1172, 2192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1153.21, 722.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206528 reads in 407.840 CPU sec, 22.811 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516708, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 411, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3215)
[0000][PE] mean and std.dev: (691.29, 565.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1351, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1558.52, 864.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 404.857 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516487, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 829, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1148.37, 1146.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1412, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1920.20, 1355.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 403.410 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516456, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1135, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6825)
[0000][PE] mean and std.dev: (1597.43, 1664.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1731, 2085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1500.52, 923.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 409.569 CPU sec, 22.924 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206204
	[0000][ M::kt_pipeline] read 1206204 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516407, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 548, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2257)
[0000][PE] mean and std.dev: (703.40, 432.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2883)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (712, 1332, 1970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1175.86, 599.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 404.773 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516353, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 967, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (938.08, 660.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1721, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5241)
[0000][PE] mean and std.dev: (1600.76, 750.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206204 reads in 404.686 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516960, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 541, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (914.75, 742.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1618, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (1363.31, 561.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 404.927 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516573, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 605, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (835.26, 803.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1182, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1269.27, 820.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 409.100 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516566, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1106, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (957.92, 763.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1241, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4682)
[0000][PE] mean and std.dev: (1487.84, 737.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 402.765 CPU sec, 22.519 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517118, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 1219, 2675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7237)
[0000][PE] mean and std.dev: (1443.29, 1161.48)
[0000][PE] low and high boundaries for proper pairs: (1, 9518)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 1285, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5659)
[0000][PE] mean and std.dev: (1513.12, 1243.80)
[0000][PE] low and high boundaries for proper pairs: (1, 7408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 401.284 CPU sec, 22.465 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516906, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 1115, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4443)
[0000][PE] mean and std.dev: (908.37, 715.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 1018, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4031)
[0000][PE] mean and std.dev: (824.44, 694.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 405.116 CPU sec, 22.676 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516959, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1119, 2732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7696)
[0000][PE] mean and std.dev: (1283.00, 1464.13)
[0000][PE] low and high boundaries for proper pairs: (1, 10178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1740, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5219)
[0000][PE] mean and std.dev: (1841.73, 868.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 404.620 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516633, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 1133, 2385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6547)
[0000][PE] mean and std.dev: (1500.48, 1267.18)
[0000][PE] low and high boundaries for proper pairs: (1, 8628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (629, 998, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (1071.29, 648.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 406.894 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516245, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 756, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4872)
[0000][PE] mean and std.dev: (1020.48, 923.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1867, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1718.00, 659.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 408.985 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516511, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (462, 764, 2051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5229)
[0000][PE] mean and std.dev: (1362.19, 1237.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (442, 1451, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1390.21, 861.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 406.446 CPU sec, 22.733 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516736, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 530, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7212)
[0000][PE] mean and std.dev: (1250.55, 1553.29)
[0000][PE] low and high boundaries for proper pairs: (1, 9502)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1421, 4116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10350)
[0000][PE] mean and std.dev: (2198.80, 1665.12)
[0000][PE] low and high boundaries for proper pairs: (1, 13467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 406.208 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516864, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 785, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5007)
[0000][PE] mean and std.dev: (1161.55, 1127.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6573)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1130, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (1258.05, 626.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 407.770 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206184
	[0000][ M::kt_pipeline] read 1206184 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517203, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 559, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (863.82, 721.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1374, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (1309.59, 663.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 403.970 CPU sec, 22.606 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516394, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 762, 2450)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6868)
[0000][PE] mean and std.dev: (1169.25, 1065.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9077)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1392, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1272.33, 481.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206184 reads in 407.649 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516498, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 694, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4268)
[0000][PE] mean and std.dev: (894.32, 683.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1319, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5995)
[0000][PE] mean and std.dev: (1572.53, 1107.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 408.234 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516823, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 503, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (687.14, 505.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1511, 1844, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1917.36, 982.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 404.516 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516714, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 736, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3926)
[0000][PE] mean and std.dev: (972.72, 749.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (489, 973, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (914.21, 476.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 404.584 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516262, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1015, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1097.38, 865.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1111, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1140.92, 417.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 408.194 CPU sec, 22.869 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516503, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 508, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2365)
[0000][PE] mean and std.dev: (613.04, 475.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 968, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (1123.44, 748.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 405.049 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516788, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 572, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (499.05, 431.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1306, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1492.71, 1010.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 404.256 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516911, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1015, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (1211.57, 1092.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1518, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1525.94, 954.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 405.237 CPU sec, 22.678 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516520, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 632, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (696.35, 515.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1154, 2070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1218.81, 514.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 404.572 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516444, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 776, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3785)
[0000][PE] mean and std.dev: (800.16, 550.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4915)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1407, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6982)
[0000][PE] mean and std.dev: (1980.57, 1438.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 406.663 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516543, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 402, 711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1541)
[0000][PE] mean and std.dev: (468.04, 289.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1730, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1469.67, 820.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 405.860 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516907, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 952, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (903.78, 627.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1442, 2834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6288)
[0000][PE] mean and std.dev: (1951.93, 1349.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 408.092 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516866, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 780, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2363)
[0000][PE] mean and std.dev: (760.06, 468.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1247, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (1144.53, 762.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 404.131 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516618, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (395, 816, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (996.00, 687.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1550, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5010)
[0000][PE] mean and std.dev: (1793.64, 980.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 405.052 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516504, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (806, 1007, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (1212.84, 707.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1466, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5064)
[0000][PE] mean and std.dev: (1637.31, 1117.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 409.825 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516604, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 829, 4493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12791)
[0000][PE] mean and std.dev: (1607.31, 1686.06)
[0000][PE] low and high boundaries for proper pairs: (1, 16940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1224, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1364.75, 840.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 404.689 CPU sec, 22.612 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516871, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (577, 942, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6340)
[0000][PE] mean and std.dev: (1364.00, 1036.88)
[0000][PE] low and high boundaries for proper pairs: (1, 8261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.92, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (685, 1090, 1928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1249.95, 972.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 405.744 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516767, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (414, 715, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (1037.48, 844.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1835, 2292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (1782.65, 977.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 411.296 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516602, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (514, 905, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (975.33, 655.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (606, 1018, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (1016.84, 544.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 404.636 CPU sec, 22.642 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516858, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 337, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (953.47, 1007.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1268, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1358.00, 740.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4972)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 405.681 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516538, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1092, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5216)
[0000][PE] mean and std.dev: (1138.04, 895.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1260, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1352.92, 858.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 404.669 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516501, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (510, 887, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3720)
[0000][PE] mean and std.dev: (971.00, 656.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1662, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4641)
[0000][PE] mean and std.dev: (1655.15, 1002.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 405.698 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516452, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 816, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4009)
[0000][PE] mean and std.dev: (920.00, 664.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1239, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4339)
[0000][PE] mean and std.dev: (1038.58, 638.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 404.915 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516129, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 1138, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4445)
[0000][PE] mean and std.dev: (1086.94, 1055.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.14, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1807, 2400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1683.53, 686.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 406.701 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516318, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 594, 1619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (869.00, 778.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1406, 2578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1110.64, 778.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 406.772 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517057, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 401, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (683.91, 644.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1211, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3779)
[0000][PE] mean and std.dev: (1501.12, 789.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 405.241 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516373, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 549, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2590)
[0000][PE] mean and std.dev: (795.21, 605.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1283, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4595)
[0000][PE] mean and std.dev: (1309.82, 726.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 410.559 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516198, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 656, 2167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6159)
[0000][PE] mean and std.dev: (1097.61, 986.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1205, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (1143.95, 554.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 408.113 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516181, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 911, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7045)
[0000][PE] mean and std.dev: (1443.47, 1419.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 3011, 5549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 14325)
[0000][PE] mean and std.dev: (3204.88, 2497.18)
[0000][PE] low and high boundaries for proper pairs: (1, 18713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 409.233 CPU sec, 22.882 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516464, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 537, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4587)
[0000][PE] mean and std.dev: (975.76, 897.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1227, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (1264.77, 623.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 406.439 CPU sec, 22.718 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516823, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (727, 793, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1208.07, 904.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 528, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (901.67, 715.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 408.337 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516207, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 868, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5280)
[0000][PE] mean and std.dev: (1123.45, 890.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1415, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 2735)
[0000][PE] mean and std.dev: (1356.06, 495.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.236 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516708, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 431, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1006.71, 1047.35)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1338, 2769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6345)
[0000][PE] mean and std.dev: (1834.38, 1415.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.246 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516319, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 747, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3905)
[0000][PE] mean and std.dev: (998.39, 912.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1215, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5530)
[0000][PE] mean and std.dev: (1540.81, 1098.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 411.399 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516339, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 378, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (686.21, 717.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1300, 1843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3733)
[0000][PE] mean and std.dev: (1187.89, 483.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 406.079 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517429, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 783, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1080.43, 1212.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1635, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3906)
[0000][PE] mean and std.dev: (1437.89, 739.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 402.413 CPU sec, 22.490 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515862, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (745, 1211, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (1132.50, 817.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1382, 2452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1550.19, 749.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 412.815 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206574
	[0000][ M::kt_pipeline] read 1206574 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516370, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1180, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1398.84, 1331.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6726)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1548, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (1418.21, 724.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 408.114 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516395, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 358, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4263)
[0000][PE] mean and std.dev: (1113.82, 1270.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (612, 1291, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3378)
[0000][PE] mean and std.dev: (1193.29, 734.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206574 reads in 410.906 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516487, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 825, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (847.61, 780.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1930, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1849.55, 928.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 408.829 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516730, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 648, 2514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1307.68, 1327.11)
[0000][PE] low and high boundaries for proper pairs: (1, 8991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1537, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5836)
[0000][PE] mean and std.dev: (1765.59, 1107.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 408.946 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516494, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (603, 1011, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3345)
[0000][PE] mean and std.dev: (910.14, 516.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1247, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (1151.89, 475.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.057 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206164
	[0000][ M::kt_pipeline] read 1206164 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516373, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (487, 906, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5806)
[0000][PE] mean and std.dev: (1170.39, 915.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (374, 998, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6116)
[0000][PE] mean and std.dev: (1257.77, 921.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 409.500 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517034, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 557, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (667.21, 560.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1160, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (1288.11, 787.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206164 reads in 411.205 CPU sec, 23.030 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206194
	[0000][ M::kt_pipeline] read 1206194 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 517283, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 728, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (895.69, 719.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.40, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1611, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (75, 2840)
[0000][PE] mean and std.dev: (1373.89, 608.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 406.198 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516371, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 878, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (779.05, 445.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1197, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (1115.50, 467.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206194 reads in 409.663 CPU sec, 22.884 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516869, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 759, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2827)
[0000][PE] mean and std.dev: (803.70, 627.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1200, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4144)
[0000][PE] mean and std.dev: (1406.00, 867.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 406.968 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516634, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 655, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (817.20, 850.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 1250, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3297)
[0000][PE] mean and std.dev: (1243.31, 421.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 407.844 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516451, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 1086, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1196.42, 885.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (778, 1103, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (1026.00, 550.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.634 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516724, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1171, 2476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1287.82, 1125.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (320, 615, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (654.85, 389.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 407.901 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516658, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (430, 566, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1187.40, 1191.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1466, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1341.67, 539.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 406.024 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516972, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (668, 997, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3473)
[0000][PE] mean and std.dev: (1159.75, 800.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1311, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1532.43, 832.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 406.745 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516419, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 867, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (978.33, 762.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (458, 1207, 2381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6227)
[0000][PE] mean and std.dev: (1723.95, 1604.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 405.683 CPU sec, 22.668 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516845, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 539, 2020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (1031.24, 1150.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1535, 2650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5838)
[0000][PE] mean and std.dev: (1912.62, 1292.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 401.188 CPU sec, 22.442 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516705, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 565, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3203)
[0000][PE] mean and std.dev: (720.38, 644.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1187, 1513, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (271, 2561)
[0000][PE] mean and std.dev: (1372.08, 505.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 404.330 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516049, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 756, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4953)
[0000][PE] mean and std.dev: (1187.04, 1199.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1334, 2864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6998)
[0000][PE] mean and std.dev: (1866.42, 1763.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 412.354 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516914, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (686, 1120, 2154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1358.41, 1014.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1336, 3266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7572)
[0000][PE] mean and std.dev: (1923.64, 1738.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 408.634 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516928, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 751, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3631)
[0000][PE] mean and std.dev: (871.78, 621.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.68, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1662, 1803, 2406)
[0000][PE] low and high boundaries for computing mean and std.dev: (174, 3894)
[0000][PE] mean and std.dev: (1754.64, 672.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 409.786 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516696, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 522, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (944.20, 920.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1449, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (13, 2613)
[0000][PE] mean and std.dev: (1318.21, 459.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 410.553 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516287, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 949, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4572)
[0000][PE] mean and std.dev: (1121.43, 1046.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1475, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1356.88, 710.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6080)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 411.894 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516343, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 479, 2456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6692)
[0000][PE] mean and std.dev: (1140.21, 1066.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1366, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1149.45, 578.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 407.333 CPU sec, 22.789 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516364, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 552, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2347)
[0000][PE] mean and std.dev: (611.00, 528.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1317, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (1377.06, 400.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 409.868 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516443, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 306, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2929)
[0000][PE] mean and std.dev: (443.85, 419.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.34, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1096, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4379)
[0000][PE] mean and std.dev: (1292.06, 817.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 407.804 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516862, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 1281, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4761)
[0000][PE] mean and std.dev: (1108.52, 924.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1209, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (1286.13, 577.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 407.539 CPU sec, 22.803 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516034, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 813, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3634)
[0000][PE] mean and std.dev: (731.35, 484.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1291, 1979, 2576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (2011.12, 1227.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 409.702 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516716, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (771, 1081, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3081)
[0000][PE] mean and std.dev: (1028.38, 507.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1434, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1380.27, 778.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 408.720 CPU sec, 22.858 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516850, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 677, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (729.46, 535.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (605, 1485, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1379.00, 884.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 408.598 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516598, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1093, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5071)
[0000][PE] mean and std.dev: (1349.37, 1192.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1849, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1604.35, 875.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 408.570 CPU sec, 22.847 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516783, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 486, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (532.83, 429.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1694, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5436)
[0000][PE] mean and std.dev: (1707.06, 1065.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 407.885 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516814, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (561, 853, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3261)
[0000][PE] mean and std.dev: (875.74, 614.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 2121, 4107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9865)
[0000][PE] mean and std.dev: (2448.00, 1588.32)
[0000][PE] low and high boundaries for proper pairs: (1, 12744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 402.503 CPU sec, 22.509 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516381, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 893, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4378)
[0000][PE] mean and std.dev: (1112.34, 1038.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1733, 3057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6809)
[0000][PE] mean and std.dev: (1935.04, 1393.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 409.346 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516621, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 709, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (806.19, 817.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1404, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3363)
[0000][PE] mean and std.dev: (1293.69, 531.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 403.841 CPU sec, 22.587 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516809, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 757, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3419)
[0000][PE] mean and std.dev: (881.48, 725.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4452)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1373, 2423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1522.85, 667.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 407.496 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516475, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 736, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (940.68, 691.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1102, 3144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7442)
[0000][PE] mean and std.dev: (1931.84, 1582.26)
[0000][PE] low and high boundaries for proper pairs: (1, 9591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 408.390 CPU sec, 22.828 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516373, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 897, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (985.92, 871.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1481, 2510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6040)
[0000][PE] mean and std.dev: (1694.00, 1414.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 409.528 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206548
	[0000][ M::kt_pipeline] read 1206548 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517120, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (682, 962, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (1005.64, 496.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1371, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5901)
[0000][PE] mean and std.dev: (1712.65, 1041.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 408.130 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516363, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 527, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7089)
[0000][PE] mean and std.dev: (1226.79, 1484.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1612, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3948)
[0000][PE] mean and std.dev: (1638.50, 838.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206548 reads in 411.192 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516490, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 826, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (909.20, 777.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1378, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1469.25, 1060.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 407.458 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516825, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 830, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4369)
[0000][PE] mean and std.dev: (971.35, 950.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1603, 2539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5969)
[0000][PE] mean and std.dev: (1815.67, 1293.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7684)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 407.549 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 516632, 3, 24)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1608, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5260)
[0000][PE] mean and std.dev: (1581.48, 989.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 406.368 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516509, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 715, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (826.61, 785.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1506, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4647)
[0000][PE] mean and std.dev: (1564.04, 905.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 410.082 CPU sec, 22.960 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517218, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 804, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (900.50, 750.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (332, 933, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1264.72, 1168.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 404.566 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516827, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 528, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1093.64, 1110.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6611)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (57, 1412, 6156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 18354)
[0000][PE] mean and std.dev: (2403.40, 2852.10)
[0000][PE] low and high boundaries for proper pairs: (1, 24453)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1224, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4110)
[0000][PE] mean and std.dev: (1229.56, 779.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 405.342 CPU sec, 22.762 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517051, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 693, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5337)
[0000][PE] mean and std.dev: (741.24, 670.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1311, 2454, 3433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7677)
[0000][PE] mean and std.dev: (2112.55, 1084.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 413.648 CPU sec, 23.102 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516101, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 550, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (901.76, 856.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1165, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3884)
[0000][PE] mean and std.dev: (1208.50, 698.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 413.784 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516476, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 401, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (672.41, 627.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (839, 1230, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1244.56, 608.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 409.622 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516272, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 687, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3195)
[0000][PE] mean and std.dev: (790.95, 583.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1272, 2574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6194)
[0000][PE] mean and std.dev: (1701.56, 1348.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 408.384 CPU sec, 22.867 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516943, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 584, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3599)
[0000][PE] mean and std.dev: (786.29, 682.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 1128, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (1030.74, 379.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 406.003 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516585, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 898, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (861.09, 742.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1242, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1254.50, 761.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 411.126 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516938, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 601, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2768)
[0000][PE] mean and std.dev: (626.14, 587.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1708, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3523)
[0000][PE] mean and std.dev: (1554.43, 579.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 408.675 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516362, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1282, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1261.11, 854.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (488, 919, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5633)
[0000][PE] mean and std.dev: (1106.25, 794.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 413.785 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516378, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 984, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1149.10, 1091.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1751, 2902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6938)
[0000][PE] mean and std.dev: (1838.62, 1532.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 409.244 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516791, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 738, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (1155.86, 988.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1387, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (1380.05, 694.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 409.193 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516814, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 746, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (869.39, 584.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (384, 880, 2278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6066)
[0000][PE] mean and std.dev: (1589.82, 1673.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 406.091 CPU sec, 22.730 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516787, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 660, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1201.77, 1201.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1392, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1486.32, 883.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 412.052 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516696, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 327, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2511)
[0000][PE] mean and std.dev: (443.58, 460.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1087, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4913)
[0000][PE] mean and std.dev: (1025.10, 579.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 408.219 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516464, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 885, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5344)
[0000][PE] mean and std.dev: (1080.13, 858.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1366, 3620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8820)
[0000][PE] mean and std.dev: (2564.62, 2436.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 414.052 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516632, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (776, 1091, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (1174.82, 872.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1283, 1813)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (1371.74, 798.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 415.147 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516554, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 733, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (992.70, 694.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1330, 2926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6922)
[0000][PE] mean and std.dev: (1830.79, 1394.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 408.487 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206566
	[0000][ M::kt_pipeline] read 1206566 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516636, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 1319, 4896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13874)
[0000][PE] mean and std.dev: (2462.25, 2695.69)
[0000][PE] low and high boundaries for proper pairs: (1, 18363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1490, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1663.18, 1012.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 403.591 CPU sec, 22.610 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516236, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 430, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (554.10, 429.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1412, 1926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3494)
[0000][PE] mean and std.dev: (1465.62, 527.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4278)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206566 reads in 415.056 CPU sec, 23.234 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516467, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 462, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3511)
[0000][PE] mean and std.dev: (723.04, 672.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 412.027 CPU sec, 23.082 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516951, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 726, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (588.93, 347.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1533, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1482.80, 542.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 408.285 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516879, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 567, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (870.43, 932.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1569, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5181)
[0000][PE] mean and std.dev: (1456.83, 967.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 407.388 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516738, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 1189, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5251)
[0000][PE] mean and std.dev: (1298.85, 1115.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1022, 1319, 2938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6770)
[0000][PE] mean and std.dev: (1944.05, 1428.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 405.625 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516591, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 464, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2632)
[0000][PE] mean and std.dev: (607.39, 547.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1214, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2931)
[0000][PE] mean and std.dev: (1052.71, 410.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3604)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 407.903 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516687, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 903, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1031.17, 840.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1089, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3361)
[0000][PE] mean and std.dev: (1189.33, 696.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 408.132 CPU sec, 22.861 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516353, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 729, 1900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (953.80, 841.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1515, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (1304.00, 701.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 412.073 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516739, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 773, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3190)
[0000][PE] mean and std.dev: (898.04, 786.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.03, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1834, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7400)
[0000][PE] mean and std.dev: (1273.91, 950.06)
[0000][PE] low and high boundaries for proper pairs: (1, 9743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 403.233 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516642, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 606, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (603.12, 471.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1283, 2991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7249)
[0000][PE] mean and std.dev: (1614.75, 1076.84)
[0000][PE] low and high boundaries for proper pairs: (1, 9378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 406.102 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516605, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (624, 950, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2760)
[0000][PE] mean and std.dev: (992.38, 628.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1290, 1570, 3127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6801)
[0000][PE] mean and std.dev: (1877.29, 1146.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 407.216 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516377, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 359, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (507.26, 499.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1367, 1977, 3171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6779)
[0000][PE] mean and std.dev: (2300.56, 1425.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 407.134 CPU sec, 22.791 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516805, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 792, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (859.00, 633.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (579, 994, 2058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1477.96, 1224.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6495)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 408.931 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516712, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 730, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (972.17, 898.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1336, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6579)
[0000][PE] mean and std.dev: (1800.11, 1289.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 405.065 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516527, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 622, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5261)
[0000][PE] mean and std.dev: (967.58, 968.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6937)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1081, 1519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (1154.59, 619.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 403.437 CPU sec, 22.585 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516337, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 636, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (768.41, 700.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1521, 2480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5022)
[0000][PE] mean and std.dev: (1589.83, 875.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 408.016 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206212
	[0000][ M::kt_pipeline] read 1206212 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516534, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1162, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (1133.52, 806.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 407.364 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516971, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 1122, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7464)
[0000][PE] mean and std.dev: (1748.86, 1605.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206212 reads in 400.280 CPU sec, 22.399 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516552, 1, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 456, 1477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3893)
[0000][PE] mean and std.dev: (755.63, 723.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1610, 3278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7714)
[0000][PE] mean and std.dev: (2002.71, 1513.19)
[0000][PE] low and high boundaries for proper pairs: (1, 9932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 405.740 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516992, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 870, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4636)
[0000][PE] mean and std.dev: (1210.19, 1122.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (678, 1165, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5658)
[0000][PE] mean and std.dev: (1517.17, 1291.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 409.349 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206254
	[0000][ M::kt_pipeline] read 1206254 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516479, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 925, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (1061.89, 1012.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1146, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6784)
[0000][PE] mean and std.dev: (1427.33, 856.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 406.469 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516886, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 1063, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1052.91, 705.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1611, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7271)
[0000][PE] mean and std.dev: (2282.47, 1791.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206254 reads in 405.486 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516569, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1359, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6305)
[0000][PE] mean and std.dev: (1378.00, 1154.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8282)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1523, 2933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7053)
[0000][PE] mean and std.dev: (2038.95, 1413.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 408.809 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517304, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 699, 1390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (883.20, 627.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4660)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1430, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (1328.40, 922.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 400.978 CPU sec, 22.436 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516319, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 321, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (818.57, 967.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1456, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1306.83, 533.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 405.370 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516982, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 435, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3700)
[0000][PE] mean and std.dev: (712.03, 688.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (460, 1010, 2312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6016)
[0000][PE] mean and std.dev: (1390.62, 1058.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 403.840 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516529, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 335, 699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1773)
[0000][PE] mean and std.dev: (405.84, 361.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2310)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1436, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (1455.84, 668.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 405.722 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517257, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (494, 782, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2264)
[0000][PE] mean and std.dev: (826.74, 482.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1415, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3582)
[0000][PE] mean and std.dev: (1454.25, 631.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 402.042 CPU sec, 22.503 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516728, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 885, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4668)
[0000][PE] mean and std.dev: (1106.77, 1268.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1240, 2783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6675)
[0000][PE] mean and std.dev: (1774.00, 1368.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 405.658 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516510, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 776, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3504)
[0000][PE] mean and std.dev: (897.12, 778.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1351, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5614)
[0000][PE] mean and std.dev: (1786.73, 1138.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 408.369 CPU sec, 22.850 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516514, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 1371, 2458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6536)
[0000][PE] mean and std.dev: (1617.58, 1303.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1555, 3194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7900)
[0000][PE] mean and std.dev: (1834.08, 1256.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 410.108 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516477, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 631, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5197)
[0000][PE] mean and std.dev: (1115.58, 1050.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1298, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3924)
[0000][PE] mean and std.dev: (1424.55, 597.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4849)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 406.003 CPU sec, 22.754 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206236
	[0000][ M::kt_pipeline] read 1206236 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517024, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 349, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (666.10, 706.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1742, 2668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1880.50, 1124.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 407.216 CPU sec, 22.852 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516235, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 488, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (806.00, 727.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1774, 2674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5380)
[0000][PE] mean and std.dev: (1892.76, 912.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206236 reads in 405.289 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516704, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 850, 2022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5306)
[0000][PE] mean and std.dev: (1150.19, 1100.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1167, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (1177.20, 508.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 407.286 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516564, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 728, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3528)
[0000][PE] mean and std.dev: (931.54, 726.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1116, 1390, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4713)
[0000][PE] mean and std.dev: (1671.88, 917.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 407.653 CPU sec, 22.822 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516632, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 749, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4035)
[0000][PE] mean and std.dev: (884.35, 626.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5246)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1806, 3430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8178)
[0000][PE] mean and std.dev: (2219.36, 1252.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 406.839 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516366, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 1126, 2243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1367.14, 1233.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1347, 2054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (1459.74, 780.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 405.393 CPU sec, 22.669 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206248
	[0000][ M::kt_pipeline] read 1206248 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516928, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 1061, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1209.22, 958.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1496, 2919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (1955.63, 1217.27)
[0000][PE] low and high boundaries for proper pairs: (1, 8400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 406.897 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516495, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (536, 1115, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4727)
[0000][PE] mean and std.dev: (1250.62, 1004.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (688, 1224, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4420)
[0000][PE] mean and std.dev: (1109.20, 583.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206248 reads in 404.355 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516232, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 898, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4786)
[0000][PE] mean and std.dev: (1036.00, 806.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1366, 1933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1468.50, 686.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 404.770 CPU sec, 22.712 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516502, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (735, 1199, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5583)
[0000][PE] mean and std.dev: (1503.88, 1304.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1402, 2858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6340)
[0000][PE] mean and std.dev: (1890.77, 1380.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 404.686 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516154, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (422, 922, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (917.87, 612.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 407.227 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516513, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 726, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1037.27, 963.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1338, 2089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (1543.93, 1048.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 406.254 CPU sec, 22.749 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516718, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 460, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3575)
[0000][PE] mean and std.dev: (798.18, 633.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.24, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 2100, 3677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9199)
[0000][PE] mean and std.dev: (2287.00, 2081.99)
[0000][PE] low and high boundaries for proper pairs: (1, 11960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 403.651 CPU sec, 22.579 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516514, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 1021, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (908.80, 917.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (856, 1223, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (1224.35, 580.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 403.943 CPU sec, 22.620 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206504
	[0000][ M::kt_pipeline] read 1206504 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516813, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 913, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6402)
[0000][PE] mean and std.dev: (1331.04, 1396.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1118, 1512, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1804.71, 980.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 402.828 CPU sec, 22.573 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516288, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 452, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (662.36, 542.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4100)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1488, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3075)
[0000][PE] mean and std.dev: (1412.88, 557.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206504 reads in 403.373 CPU sec, 22.571 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516744, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (643, 1184, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4486)
[0000][PE] mean and std.dev: (1035.71, 516.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5767)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1677, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5794)
[0000][PE] mean and std.dev: (1901.55, 1159.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 402.570 CPU sec, 22.513 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516526, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 670, 2549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6911)
[0000][PE] mean and std.dev: (1162.88, 952.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1488, 2643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5743)
[0000][PE] mean and std.dev: (1834.68, 1141.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.965 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516212, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 326, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2232)
[0000][PE] mean and std.dev: (526.71, 477.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1457, 2080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1341.71, 837.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 405.892 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206516
	[0000][ M::kt_pipeline] read 1206516 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516372, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 891, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3606)
[0000][PE] mean and std.dev: (937.95, 751.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1445, 3279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7437)
[0000][PE] mean and std.dev: (2131.47, 1614.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 403.556 CPU sec, 22.594 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516133, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 780, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (1020.95, 830.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1604, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4824)
[0000][PE] mean and std.dev: (1506.52, 985.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206516 reads in 405.921 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516455, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 728, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (933.62, 729.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (888, 1157, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (1098.08, 426.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 404.022 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516553, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 411, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2112)
[0000][PE] mean and std.dev: (578.00, 406.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1703, 2563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5699)
[0000][PE] mean and std.dev: (1777.71, 1132.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 403.587 CPU sec, 22.597 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516548, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 798, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4319)
[0000][PE] mean and std.dev: (915.50, 869.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1480, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1489.80, 669.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 409.692 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515965, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 366, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (589.63, 533.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1543, 2816)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6688)
[0000][PE] mean and std.dev: (1758.94, 1114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 8624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 411.305 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516720, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (112, 1088, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5428)
[0000][PE] mean and std.dev: (1271.94, 1160.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1219, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1193.65, 615.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 405.996 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516159, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 802, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3034)
[0000][PE] mean and std.dev: (750.57, 509.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3927)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1262, 2155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (1430.89, 1023.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 407.770 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516330, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 737, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3943)
[0000][PE] mean and std.dev: (884.68, 781.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1308, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (1387.48, 803.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 406.119 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516642, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1021, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7181)
[0000][PE] mean and std.dev: (1500.43, 1557.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1183, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1319.29, 662.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 401.465 CPU sec, 22.486 real sec
[0000] Calling mem_process_seqs.., task: 928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516054, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 419, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (565.70, 457.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (807, 1231, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3780)
[0000][PE] mean and std.dev: (1320.07, 771.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 405.448 CPU sec, 22.705 real sec
[0000] Calling mem_process_seqs.., task: 929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516735, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 932, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1240.72, 1181.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1389, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5740)
[0000][PE] mean and std.dev: (1567.08, 1022.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 405.909 CPU sec, 22.729 real sec
[0000] Calling mem_process_seqs.., task: 930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516696, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 375, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (663.84, 519.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1110, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (1034.18, 603.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 402.272 CPU sec, 22.556 real sec
[0000] Calling mem_process_seqs.., task: 931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516475, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 883, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (917.78, 908.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1385, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3185)
[0000][PE] mean and std.dev: (1289.15, 602.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3888)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 407.440 CPU sec, 22.839 real sec
[0000] Calling mem_process_seqs.., task: 932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516277, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 568, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5381)
[0000][PE] mean and std.dev: (1234.95, 1161.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1592, 2904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6878)
[0000][PE] mean and std.dev: (1815.56, 1345.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.053 CPU sec, 22.917 real sec
[0000] Calling mem_process_seqs.., task: 933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516095, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 349, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (715.06, 719.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1177, 2055, 2775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5971)
[0000][PE] mean and std.dev: (2273.17, 1460.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 406.691 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516565, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 1109, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4133)
[0000][PE] mean and std.dev: (880.17, 619.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1336, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3369)
[0000][PE] mean and std.dev: (1257.43, 620.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 406.804 CPU sec, 22.757 real sec
[0000] Calling mem_process_seqs.., task: 935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515843, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 798, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4248)
[0000][PE] mean and std.dev: (936.32, 814.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (592, 1057, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4246)
[0000][PE] mean and std.dev: (981.93, 617.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 414.147 CPU sec, 23.273 real sec
[0000] Calling mem_process_seqs.., task: 936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516132, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 489, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (853.96, 829.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1343, 3391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8367)
[0000][PE] mean and std.dev: (2449.32, 2560.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 408.763 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516451, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (518, 1185, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4973)
[0000][PE] mean and std.dev: (1194.17, 917.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1018, 1879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (1183.12, 620.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 404.853 CPU sec, 22.679 real sec
[0000] Calling mem_process_seqs.., task: 938
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516085, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 942, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4918)
[0000][PE] mean and std.dev: (845.88, 661.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1138, 1821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (1279.84, 892.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 404.801 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206666
	[0000][ M::kt_pipeline] read 1206666 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516531, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1043, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6600)
[0000][PE] mean and std.dev: (1554.67, 1537.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1167, 1809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3897)
[0000][PE] mean and std.dev: (1148.50, 775.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 406.699 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206666
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516389, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 466, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2543)
[0000][PE] mean and std.dev: (735.06, 556.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3277)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1293, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7512)
[0000][PE] mean and std.dev: (1696.52, 1312.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9776)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206666 reads in 406.108 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516218, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 502, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2779)
[0000][PE] mean and std.dev: (746.84, 598.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 859)
[0000][PE] mean and std.dev: (486.43, 114.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1974, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6518)
[0000][PE] mean and std.dev: (1901.39, 1020.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 408.232 CPU sec, 22.886 real sec
[0000] Calling mem_process_seqs.., task: 942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516294, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 457, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4650)
[0000][PE] mean and std.dev: (1047.32, 1026.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1625, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4565)
[0000][PE] mean and std.dev: (1463.62, 747.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5738)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 407.804 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516556, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1060, 2468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6728)
[0000][PE] mean and std.dev: (1415.81, 1588.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 904, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (1073.29, 783.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 408.710 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516839, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 734, 1526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3744)
[0000][PE] mean and std.dev: (939.14, 730.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 409.022 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516804, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 427, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2688)
[0000][PE] mean and std.dev: (650.58, 603.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1448, 1651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (1344.07, 553.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.546 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516742, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 813, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3286)
[0000][PE] mean and std.dev: (823.88, 496.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1232, 1552, 2803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5945)
[0000][PE] mean and std.dev: (1673.39, 899.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 405.721 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516983, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 806, 2107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (1141.90, 1124.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1209, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4563)
[0000][PE] mean and std.dev: (1487.64, 1034.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 406.079 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516562, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 437, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (426.93, 231.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 944, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1125.83, 575.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 402.998 CPU sec, 22.596 real sec
[0000] Calling mem_process_seqs.., task: 949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516286, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 783, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1332.24, 1371.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1019, 1698, 2807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6383)
[0000][PE] mean and std.dev: (1757.00, 1132.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 407.881 CPU sec, 22.864 real sec
[0000] Calling mem_process_seqs.., task: 950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516481, 7, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 575, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4673)
[0000][PE] mean and std.dev: (995.12, 1005.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1298, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5479)
[0000][PE] mean and std.dev: (1521.25, 1131.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 403.910 CPU sec, 22.646 real sec
[0000] Calling mem_process_seqs.., task: 951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516276, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (641, 954, 2831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7211)
[0000][PE] mean and std.dev: (1374.33, 1188.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1069, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4658)
[0000][PE] mean and std.dev: (1320.06, 976.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 405.345 CPU sec, 22.710 real sec
[0000] Calling mem_process_seqs.., task: 952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516668, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 863, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4571)
[0000][PE] mean and std.dev: (932.35, 868.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1294, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1805.62, 1240.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 407.643 CPU sec, 22.816 real sec
[0000] Calling mem_process_seqs.., task: 953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516355, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (673, 1128, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4405)
[0000][PE] mean and std.dev: (1037.72, 658.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5649)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1445, 2530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1562.82, 1174.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 406.595 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516773, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 866, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1162.65, 1209.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 962, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (1034.56, 497.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 403.548 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516424, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 465, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (548.59, 410.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.69, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1218, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1484.88, 855.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5148)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 406.306 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516302, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 761, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (705.61, 470.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1581, 2912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6544)
[0000][PE] mean and std.dev: (2190.25, 1524.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 402.114 CPU sec, 22.539 real sec
[0000] Calling mem_process_seqs.., task: 957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516803, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 735, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (760.31, 616.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1673, 3230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7816)
[0000][PE] mean and std.dev: (1579.29, 960.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 403.935 CPU sec, 22.650 real sec
[0000] Calling mem_process_seqs.., task: 958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516512, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 893, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6208)
[0000][PE] mean and std.dev: (1201.19, 1304.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1375, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1680.91, 1005.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 405.847 CPU sec, 22.735 real sec
[0000] Calling mem_process_seqs.., task: 959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516856, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 515, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (857.10, 741.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1248, 1695, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1697.67, 541.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5512)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 406.364 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516250, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 753, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (822.67, 670.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1327, 2405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1550.05, 816.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 407.892 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206532
	[0000][ M::kt_pipeline] read 1206532 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516714, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 577, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (691.30, 594.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1140, 1602, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4878)
[0000][PE] mean and std.dev: (1753.86, 783.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 403.448 CPU sec, 22.636 real sec
[0000] Calling mem_process_seqs.., task: 962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516475, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 631, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (765.70, 637.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (898, 1484, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6466)
[0000][PE] mean and std.dev: (1686.43, 1037.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206532 reads in 407.436 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516574, 2, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 764, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (794.38, 671.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1231, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3783)
[0000][PE] mean and std.dev: (1352.79, 813.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 406.643 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516465, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1056, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1340.12, 1154.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1158, 1400, 2280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1634.43, 948.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5646)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 406.277 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515993, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 396, 689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1511)
[0000][PE] mean and std.dev: (449.33, 268.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1676, 3900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9580)
[0000][PE] mean and std.dev: (2679.78, 2283.66)
[0000][PE] low and high boundaries for proper pairs: (1, 12420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 409.411 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516555, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 739, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (848.62, 695.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.14, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1425, 1755, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5034)
[0000][PE] mean and std.dev: (2106.54, 976.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 408.035 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516590, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (596, 880, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1288.63, 1088.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1532, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8151)
[0000][PE] mean and std.dev: (2374.25, 2294.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 410.287 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516484, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 818, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (819.90, 622.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1270, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (1352.68, 763.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 404.892 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516225, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 241, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (676.00, 903.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (599, 1047, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (1200.00, 931.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 408.057 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516971, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 833, 1774)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4782)
[0000][PE] mean and std.dev: (1053.57, 1043.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (880, 1236, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (1535.42, 1064.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 404.345 CPU sec, 22.658 real sec
[0000] Calling mem_process_seqs.., task: 971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516471, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 828, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (999.09, 911.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1611, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5131)
[0000][PE] mean and std.dev: (1663.10, 1098.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 410.271 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516240, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (702, 1031, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (1148.52, 720.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1104, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3440)
[0000][PE] mean and std.dev: (1126.79, 670.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.195 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (37, 516423, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 601, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (949.86, 930.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1029, 1746, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1834.90, 982.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5764)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 408.258 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206640
	[0000][ M::kt_pipeline] read 1206640 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516316, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 731, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4356)
[0000][PE] mean and std.dev: (790.05, 645.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1263, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5796)
[0000][PE] mean and std.dev: (1568.62, 1272.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 404.989 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516169, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 753, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (797.54, 575.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (914, 1575, 1689)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (1398.58, 632.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206640 reads in 410.924 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516624, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 949, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5603)
[0000][PE] mean and std.dev: (972.05, 838.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1836, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5910)
[0000][PE] mean and std.dev: (1959.58, 1531.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 408.090 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516351, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 849, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3171)
[0000][PE] mean and std.dev: (716.05, 482.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1376, 1827, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4421)
[0000][PE] mean and std.dev: (1725.42, 733.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 409.015 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516569, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1190, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (1224.62, 917.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (626, 1366, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1533.11, 1179.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 401.128 CPU sec, 22.470 real sec
[0000] Calling mem_process_seqs.., task: 979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516103, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 798, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2899)
[0000][PE] mean and std.dev: (744.56, 581.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1315, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (1293.86, 541.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 407.268 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516572, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 639, 1287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (1033.77, 909.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1204, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (1323.47, 816.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 406.282 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516418, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 452, 1094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (700.57, 673.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (890, 1384, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (1318.25, 647.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 405.627 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516417, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 892, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6881)
[0000][PE] mean and std.dev: (1551.14, 1438.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1456, 2095, 3337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7099)
[0000][PE] mean and std.dev: (2110.54, 866.59)
[0000][PE] low and high boundaries for proper pairs: (1, 8980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 407.822 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516339, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 550, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3240)
[0000][PE] mean and std.dev: (736.73, 675.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1286, 2591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5667)
[0000][PE] mean and std.dev: (1750.89, 1193.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 406.579 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516656, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 1212, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5586)
[0000][PE] mean and std.dev: (1042.00, 703.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1324, 1648, 2753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5611)
[0000][PE] mean and std.dev: (1909.86, 920.97)
[0000][PE] low and high boundaries for proper pairs: (1, 7040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 405.015 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516701, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 565, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4130)
[0000][PE] mean and std.dev: (941.65, 887.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (827, 1534, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5225)
[0000][PE] mean and std.dev: (1411.60, 858.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 405.169 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206200
	[0000][ M::kt_pipeline] read 1206200 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516081, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 608, 1587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4183)
[0000][PE] mean and std.dev: (1045.50, 1062.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1144, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (1191.18, 705.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 407.126 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516747, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 1008, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (1016.61, 701.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4369)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1098, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4377)
[0000][PE] mean and std.dev: (1128.00, 703.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206200 reads in 404.668 CPU sec, 22.671 real sec
[0000] Calling mem_process_seqs.., task: 988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516326, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 933, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4778)
[0000][PE] mean and std.dev: (1184.60, 1010.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1443, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4883)
[0000][PE] mean and std.dev: (1650.50, 860.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 408.096 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516861, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 1167, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3696)
[0000][PE] mean and std.dev: (1043.25, 836.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1017, 1433, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (1645.00, 1104.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 403.705 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516084, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 963, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (942.00, 824.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1171, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (1198.23, 568.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 409.904 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516433, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 810, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (1077.25, 1021.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1427, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (1234.00, 471.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 408.652 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206562
	[0000][ M::kt_pipeline] read 1206562 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516653, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 488, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6035)
[0000][PE] mean and std.dev: (1249.65, 1488.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1085, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5117)
[0000][PE] mean and std.dev: (1326.25, 1017.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 407.428 CPU sec, 22.797 real sec
[0000] Calling mem_process_seqs.., task: 993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206562
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516408, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 818, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1073.35, 1059.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206562 reads in 408.546 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516928, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 774, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4798)
[0000][PE] mean and std.dev: (990.26, 916.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1042, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6103)
[0000][PE] mean and std.dev: (1539.06, 907.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 402.982 CPU sec, 22.559 real sec
[0000] Calling mem_process_seqs.., task: 995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516652, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 948, 2158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5264)
[0000][PE] mean and std.dev: (1239.12, 1015.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1209, 2293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5247)
[0000][PE] mean and std.dev: (1566.62, 1040.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 405.257 CPU sec, 22.728 real sec
[0000] Calling mem_process_seqs.., task: 996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516194, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 801, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (724.39, 611.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (800, 891, 3668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9404)
[0000][PE] mean and std.dev: (1737.27, 1546.53)
[0000][PE] low and high boundaries for proper pairs: (1, 12272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 406.517 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516459, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 643, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (967.12, 857.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1719, 4372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11640)
[0000][PE] mean and std.dev: (2405.71, 1854.20)
[0000][PE] low and high boundaries for proper pairs: (1, 15274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 405.287 CPU sec, 22.743 real sec
[0000] Calling mem_process_seqs.., task: 998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516484, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 683, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1133.94, 1202.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1342, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4326)
[0000][PE] mean and std.dev: (1233.17, 490.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 406.253 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516395, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (649, 1029, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6958)
[0000][PE] mean and std.dev: (1638.04, 1365.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1577, 2261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4849)
[0000][PE] mean and std.dev: (1355.80, 793.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 404.704 CPU sec, 22.652 real sec
[0000] Calling mem_process_seqs.., task: 1000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516608, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 913, 1088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2666)
[0000][PE] mean and std.dev: (857.67, 670.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1329, 2200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1562.96, 725.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 405.914 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 1001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516948, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 824, 1322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (903.64, 718.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1209, 1849, 2820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (1861.33, 1144.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 407.454 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516511, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 520, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5008)
[0000][PE] mean and std.dev: (979.27, 1132.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (792, 1192, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1132.55, 578.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 409.807 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 1003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 515823, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 997, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1035.75, 840.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5984)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1247, 2439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5625)
[0000][PE] mean and std.dev: (1508.74, 1158.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.474 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 1004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516355, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 780, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6312)
[0000][PE] mean and std.dev: (1118.56, 1096.06)
[0000][PE] low and high boundaries for proper pairs: (1, 8327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (757, 1346, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1240.75, 662.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 408.354 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 1005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516897, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 589, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3736)
[0000][PE] mean and std.dev: (912.04, 815.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 1916, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8555)
[0000][PE] mean and std.dev: (1938.00, 1764.12)
[0000][PE] low and high boundaries for proper pairs: (1, 11274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 408.887 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 1006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516591, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1055, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3695)
[0000][PE] mean and std.dev: (1141.59, 903.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1099, 1538, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (1624.22, 748.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 410.456 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 1007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516094, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 468, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3184)
[0000][PE] mean and std.dev: (755.93, 697.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1687, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5525)
[0000][PE] mean and std.dev: (1754.27, 778.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 410.094 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516701, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (407, 740, 2541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6809)
[0000][PE] mean and std.dev: (1341.76, 1342.42)
[0000][PE] low and high boundaries for proper pairs: (1, 8943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1166, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1264.71, 668.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 409.419 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 1009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206532
	[0000][ M::kt_pipeline] read 1206532 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516498, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 1191, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6856)
[0000][PE] mean and std.dev: (1585.38, 1331.80)
[0000][PE] low and high boundaries for proper pairs: (1, 9001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1060, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (1178.83, 667.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 406.277 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516617, 4, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 551, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4745)
[0000][PE] mean and std.dev: (915.73, 922.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1021, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3814)
[0000][PE] mean and std.dev: (1215.55, 741.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206532 reads in 408.292 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 1011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516910, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 535, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (754.59, 626.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1495, 2247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (1582.35, 900.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 405.193 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516330, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 493, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3075)
[0000][PE] mean and std.dev: (618.91, 503.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1233, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1368.63, 468.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 406.512 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516588, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 832, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4370)
[0000][PE] mean and std.dev: (914.95, 751.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1481, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1522.87, 1042.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 407.403 CPU sec, 22.817 real sec
[0000] Calling mem_process_seqs.., task: 1014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 516934, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 882, 1908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5130)
[0000][PE] mean and std.dev: (985.00, 794.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1216, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (470, 1855)
[0000][PE] mean and std.dev: (1085.55, 261.04)
[0000][PE] low and high boundaries for proper pairs: (41, 2132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 404.328 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 1015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516479, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1091, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4568)
[0000][PE] mean and std.dev: (991.24, 724.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1416, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1587.21, 997.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 407.351 CPU sec, 22.843 real sec
[0000] Calling mem_process_seqs.., task: 1016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206546
	[0000][ M::kt_pipeline] read 1206546 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516528, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 678, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1078.12, 909.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6083)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1288, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3510)
[0000][PE] mean and std.dev: (1240.67, 653.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 406.309 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516624, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 844, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (1040.61, 1022.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 998, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (1144.79, 742.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206546 reads in 406.736 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 1018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206604
	[0000][ M::kt_pipeline] read 1206604 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516250, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 857, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (795.81, 580.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1310, 3285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7721)
[0000][PE] mean and std.dev: (1918.23, 1309.41)
[0000][PE] low and high boundaries for proper pairs: (1, 9939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 407.827 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206604
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516625, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 1075, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4463)
[0000][PE] mean and std.dev: (1086.24, 1089.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1408, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (1243.23, 637.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206604 reads in 404.134 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 1020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516550, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 313, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4737)
[0000][PE] mean and std.dev: (905.40, 1117.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1527, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (71, 2896)
[0000][PE] mean and std.dev: (1496.92, 485.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3461)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 405.478 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 1021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516484, 10, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 390, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (662.85, 693.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (153, 1092, 4126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12072)
[0000][PE] mean and std.dev: (2122.80, 2468.25)
[0000][PE] low and high boundaries for proper pairs: (1, 16045)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1608, 2027, 2321)
[0000][PE] low and high boundaries for computing mean and std.dev: (182, 3747)
[0000][PE] mean and std.dev: (1890.44, 451.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 404.189 CPU sec, 22.618 real sec
[0000] Calling mem_process_seqs.., task: 1022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516818, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 723, 1431)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (793.00, 689.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1762, 3203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7759)
[0000][PE] mean and std.dev: (1901.56, 1069.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 404.244 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516230, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 498, 1264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (739.04, 614.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1658, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4471)
[0000][PE] mean and std.dev: (1552.70, 815.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 407.283 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 1024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516239, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 715, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (814.11, 595.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1329, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3545)
[0000][PE] mean and std.dev: (1324.54, 564.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 408.191 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 1025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516266, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 559, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (940.31, 909.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1343, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1362.15, 776.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 405.742 CPU sec, 22.726 real sec
[0000] Calling mem_process_seqs.., task: 1026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516500, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 1067, 1624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (1011.88, 894.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1332, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (1024.60, 574.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 404.796 CPU sec, 22.686 real sec
[0000] Calling mem_process_seqs.., task: 1027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516566, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 423, 1544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4024)
[0000][PE] mean and std.dev: (759.28, 868.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1522, 1900, 2464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1879.88, 911.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 403.408 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 1028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516502, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1044, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5622)
[0000][PE] mean and std.dev: (1319.80, 1101.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.13, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1934, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5884)
[0000][PE] mean and std.dev: (1905.90, 1163.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 405.110 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516423, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 984, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4163)
[0000][PE] mean and std.dev: (1089.85, 675.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1337, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3362)
[0000][PE] mean and std.dev: (1152.22, 618.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 405.805 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516312, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 629, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4808)
[0000][PE] mean and std.dev: (1064.48, 1109.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.28, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1685, 2939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7285)
[0000][PE] mean and std.dev: (1891.08, 1263.99)
[0000][PE] low and high boundaries for proper pairs: (1, 9458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 406.284 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516662, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 462, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5050)
[0000][PE] mean and std.dev: (850.90, 835.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.92, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1632, 3061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7413)
[0000][PE] mean and std.dev: (2059.07, 1358.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 402.652 CPU sec, 22.590 real sec
[0000] Calling mem_process_seqs.., task: 1032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516489, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 495, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (772.05, 750.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1432, 2602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5286)
[0000][PE] mean and std.dev: (1648.23, 1028.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 406.989 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 1033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516869, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 691, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3867)
[0000][PE] mean and std.dev: (797.42, 660.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1320, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4166)
[0000][PE] mean and std.dev: (1337.89, 662.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5269)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 403.483 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 1034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516556, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 697, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4721)
[0000][PE] mean and std.dev: (1060.00, 1082.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1235, 1638, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1803.24, 1018.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 404.968 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 1035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516474, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 1189, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5686)
[0000][PE] mean and std.dev: (1273.00, 1303.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (765, 1149, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1465.82, 1082.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 407.365 CPU sec, 22.834 real sec
[0000] Calling mem_process_seqs.., task: 1036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516911, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 779, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2536)
[0000][PE] mean and std.dev: (730.17, 479.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1488, 2588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1571.38, 965.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 401.961 CPU sec, 22.518 real sec
[0000] Calling mem_process_seqs.., task: 1037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516367, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 980, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5073)
[0000][PE] mean and std.dev: (1008.90, 716.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1857, 3030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6944)
[0000][PE] mean and std.dev: (2016.31, 1235.73)
[0000][PE] low and high boundaries for proper pairs: (1, 8901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 403.631 CPU sec, 22.623 real sec
[0000] Calling mem_process_seqs.., task: 1038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515976, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 841, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (820.04, 628.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1530, 2466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5936)
[0000][PE] mean and std.dev: (1505.83, 928.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 404.514 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516650, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 1076, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5202)
[0000][PE] mean and std.dev: (1247.79, 1051.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1189, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3851)
[0000][PE] mean and std.dev: (1272.76, 759.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 399.888 CPU sec, 22.411 real sec
[0000] Calling mem_process_seqs.., task: 1040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516360, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 531, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (929.06, 940.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (483, 1100, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5727)
[0000][PE] mean and std.dev: (1273.80, 1049.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 401.309 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 1041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516398, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 700, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (876.52, 705.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1496, 1875, 3164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (2224.56, 1219.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 403.220 CPU sec, 22.568 real sec
[0000] Calling mem_process_seqs.., task: 1042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516633, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 677, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (900.91, 846.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (697, 1179, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5098)
[0000][PE] mean and std.dev: (1287.19, 778.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 402.746 CPU sec, 22.572 real sec
[0000] Calling mem_process_seqs.., task: 1043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516256, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 690, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5057)
[0000][PE] mean and std.dev: (977.50, 1050.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.08, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1099, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4606)
[0000][PE] mean and std.dev: (1409.62, 910.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5837)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 404.297 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 1044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516359, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (605, 1034, 1999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1177.61, 933.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1356, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3396)
[0000][PE] mean and std.dev: (1172.04, 635.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 405.248 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516892, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 457, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4605)
[0000][PE] mean and std.dev: (846.80, 862.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1376, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1476.42, 986.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 402.171 CPU sec, 22.535 real sec
[0000] Calling mem_process_seqs.., task: 1046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516415, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (556, 906, 1901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1261.42, 1052.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (713, 904, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (975.19, 476.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 403.770 CPU sec, 22.632 real sec
[0000] Calling mem_process_seqs.., task: 1047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517046, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 657, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6158)
[0000][PE] mean and std.dev: (1010.40, 934.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8119)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1448, 2246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1628.50, 982.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 403.533 CPU sec, 22.599 real sec
[0000] Calling mem_process_seqs.., task: 1048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516195, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 477, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3915)
[0000][PE] mean and std.dev: (867.33, 787.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1303, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4059)
[0000][PE] mean and std.dev: (1343.29, 812.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 407.867 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 1049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516682, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 996, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4265)
[0000][PE] mean and std.dev: (1058.10, 663.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 916, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (983.93, 357.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2566)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 401.368 CPU sec, 22.466 real sec
[0000] Calling mem_process_seqs.., task: 1050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516819, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 826, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (922.63, 758.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5724)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (771, 1394, 1779)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1204.77, 676.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 408.798 CPU sec, 22.911 real sec
[0000] Calling mem_process_seqs.., task: 1051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516781, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 839, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1082.96, 876.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1327, 1960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (1206.74, 795.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5524)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 401.966 CPU sec, 22.524 real sec
[0000] Calling mem_process_seqs.., task: 1052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206516
	[0000][ M::kt_pipeline] read 1206516 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516642, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 844, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (1157.88, 1066.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1266, 1486, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1550.75, 822.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 403.997 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516230, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 572, 1584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (976.65, 853.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1858, 2351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (1805.29, 1154.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206516 reads in 406.190 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 1054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516291, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 407, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2367)
[0000][PE] mean and std.dev: (675.67, 581.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1489, 1981, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1761.50, 730.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 405.407 CPU sec, 22.708 real sec
[0000] Calling mem_process_seqs.., task: 1055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516035, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 993, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (1101.15, 968.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (514, 624, 3547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9613)
[0000][PE] mean and std.dev: (1686.18, 1817.16)
[0000][PE] low and high boundaries for proper pairs: (1, 12646)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1237, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (200, 2215)
[0000][PE] mean and std.dev: (1101.92, 390.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2666)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 407.226 CPU sec, 22.786 real sec
[0000] Calling mem_process_seqs.., task: 1056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516156, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 731, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (828.61, 775.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.58, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1550, 3822, 6856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17468)
[0000][PE] mean and std.dev: (3929.00, 2944.05)
[0000][PE] low and high boundaries for proper pairs: (1, 22774)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1685, 2223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4385)
[0000][PE] mean and std.dev: (1704.59, 696.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 408.042 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 1057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516117, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 900, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (732.59, 507.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1535, 1921, 2216)
[0000][PE] low and high boundaries for computing mean and std.dev: (173, 3578)
[0000][PE] mean and std.dev: (1800.27, 594.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4259)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 405.432 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516267, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (451, 1383, 2469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6505)
[0000][PE] mean and std.dev: (1783.69, 1618.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1222, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (1399.27, 716.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 403.135 CPU sec, 22.602 real sec
[0000] Calling mem_process_seqs.., task: 1059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516666, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1104, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4261)
[0000][PE] mean and std.dev: (1203.81, 995.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.02, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1636, 3289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7897)
[0000][PE] mean and std.dev: (1994.90, 1348.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 407.759 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516515, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (714, 1219, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5775)
[0000][PE] mean and std.dev: (1604.68, 1353.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (741, 1606, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (1503.00, 934.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 405.854 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 1061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516796, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 684, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2638)
[0000][PE] mean and std.dev: (720.41, 689.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1640, 2199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1531.50, 785.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 403.095 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516066, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 945, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5559)
[0000][PE] mean and std.dev: (1145.65, 1029.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1375, 2150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4914)
[0000][PE] mean and std.dev: (1355.00, 738.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 408.642 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 1063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516387, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 815, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3979)
[0000][PE] mean and std.dev: (875.48, 653.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.11, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (980, 1621, 3785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9395)
[0000][PE] mean and std.dev: (2384.60, 2229.38)
[0000][PE] low and high boundaries for proper pairs: (1, 12200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 409.019 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516228, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 631, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5036)
[0000][PE] mean and std.dev: (1140.38, 1212.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1418, 2197)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (1555.27, 756.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 408.836 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 1065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516174, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 1232, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1396.10, 1334.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1453, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5069)
[0000][PE] mean and std.dev: (1513.50, 931.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6496)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 409.852 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516129, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 848, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1175.43, 988.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 1181, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3683)
[0000][PE] mean and std.dev: (1252.36, 798.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 412.587 CPU sec, 23.086 real sec
[0000] Calling mem_process_seqs.., task: 1067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516451, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 632, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1039.17, 1041.65)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 2112, 2644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5766)
[0000][PE] mean and std.dev: (1687.50, 771.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 406.887 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 1068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516419, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 473, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (890.10, 894.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1306, 1694, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4990)
[0000][PE] mean and std.dev: (1851.60, 941.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 406.137 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 1069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516336, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 448, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (620.56, 577.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1297, 1664, 2368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1699.38, 999.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 404.135 CPU sec, 22.653 real sec
[0000] Calling mem_process_seqs.., task: 1070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516580, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 408, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (945.91, 879.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5390)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.28, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1386, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5139)
[0000][PE] mean and std.dev: (1775.15, 1186.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 404.741 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 1071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516646, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 911, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5750)
[0000][PE] mean and std.dev: (1406.92, 1316.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (549, 1074, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1185.82, 827.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5853)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 405.473 CPU sec, 22.700 real sec
[0000] Calling mem_process_seqs.., task: 1072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516773, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (409, 779, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4705)
[0000][PE] mean and std.dev: (1077.89, 1002.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1753, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5183)
[0000][PE] mean and std.dev: (1651.68, 869.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 404.123 CPU sec, 22.629 real sec
[0000] Calling mem_process_seqs.., task: 1073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516656, 7, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 842, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (986.47, 906.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1018, 2331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5661)
[0000][PE] mean and std.dev: (1292.45, 862.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 404.916 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516442, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 387, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (500.39, 383.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1878, 3562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8576)
[0000][PE] mean and std.dev: (2243.05, 1829.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11083)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 406.246 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516011, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 535, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (824.44, 683.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 874, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (1197.78, 883.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 407.572 CPU sec, 22.814 real sec
[0000] Calling mem_process_seqs.., task: 1076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516810, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (443, 906, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (928.11, 506.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1502, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4960)
[0000][PE] mean and std.dev: (1704.47, 1185.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 408.320 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 1077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516911, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 727, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (967.37, 938.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1132, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1282.44, 740.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 406.993 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516500, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 873, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3833)
[0000][PE] mean and std.dev: (928.41, 789.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (444, 757, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (1038.65, 778.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 406.754 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 1079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516578, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1126, 1517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3699)
[0000][PE] mean and std.dev: (999.46, 603.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1046, 1418, 1903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1437.48, 730.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 404.352 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 1080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516461, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 789, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (1009.48, 874.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5544)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (804, 1721, 2376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1671.95, 1185.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 411.117 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 1081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516539, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 562, 2190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5874)
[0000][PE] mean and std.dev: (1203.19, 1276.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1297, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2749)
[0000][PE] mean and std.dev: (1193.35, 382.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 406.817 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516503, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 518, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2420)
[0000][PE] mean and std.dev: (753.15, 599.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1177, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (331, 2191)
[0000][PE] mean and std.dev: (1119.00, 317.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 409.055 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516861, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 884, 1357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3427)
[0000][PE] mean and std.dev: (824.18, 644.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1237, 1549, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (1395.23, 622.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4385)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 405.908 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516871, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1014, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (1125.75, 854.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1677, 2909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6429)
[0000][PE] mean and std.dev: (1745.61, 872.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 405.125 CPU sec, 22.694 real sec
[0000] Calling mem_process_seqs.., task: 1085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516463, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 407, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (638.10, 638.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1461, 2700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5772)
[0000][PE] mean and std.dev: (1886.71, 1136.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 408.179 CPU sec, 22.909 real sec
[0000] Calling mem_process_seqs.., task: 1086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516246, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (420, 1006, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4365)
[0000][PE] mean and std.dev: (1266.84, 1138.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1252, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (1256.71, 640.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 411.285 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516829, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1452, 2404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6738)
[0000][PE] mean and std.dev: (1498.52, 1524.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1421, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4233)
[0000][PE] mean and std.dev: (1302.74, 612.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 404.939 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 1088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516324, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 461, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (801.15, 844.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 2013, 2781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6211)
[0000][PE] mean and std.dev: (1794.94, 1058.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7926)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 408.162 CPU sec, 22.857 real sec
[0000] Calling mem_process_seqs.., task: 1089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516617, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (426, 1751, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6729)
[0000][PE] mean and std.dev: (1687.00, 1307.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1202, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (1263.38, 659.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 405.402 CPU sec, 22.718 real sec
[0000] Calling mem_process_seqs.., task: 1090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516479, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1086, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1111.89, 1039.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1337, 1793, 2967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6227)
[0000][PE] mean and std.dev: (2057.06, 1154.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 404.392 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 1091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516218, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 611, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5476)
[0000][PE] mean and std.dev: (945.12, 905.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1153, 1450, 2989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6661)
[0000][PE] mean and std.dev: (1852.33, 1070.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 405.519 CPU sec, 22.746 real sec
[0000] Calling mem_process_seqs.., task: 1092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206662
	[0000][ M::kt_pipeline] read 1206662 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516899, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 589, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3448)
[0000][PE] mean and std.dev: (762.11, 715.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1059, 1410, 2402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5088)
[0000][PE] mean and std.dev: (1770.20, 1139.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 403.410 CPU sec, 22.615 real sec
[0000] Calling mem_process_seqs.., task: 1093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206662
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516458, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 802, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6256)
[0000][PE] mean and std.dev: (1668.45, 1736.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1304, 2652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6700)
[0000][PE] mean and std.dev: (1457.54, 1014.08)
[0000][PE] low and high boundaries for proper pairs: (1, 8724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206662 reads in 406.124 CPU sec, 22.748 real sec
[0000] Calling mem_process_seqs.., task: 1094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516530, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 649, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (941.38, 792.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1847, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3832)
[0000][PE] mean and std.dev: (1478.31, 526.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 402.265 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 1095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516448, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 525, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (1010.13, 1052.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1549, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6654)
[0000][PE] mean and std.dev: (1843.18, 1494.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 406.108 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 1096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 516470, 3, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1698, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1425.18, 514.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5451)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 407.304 CPU sec, 22.852 real sec
[0000] Calling mem_process_seqs.., task: 1097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516870, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 1094, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1052.32, 1003.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1208, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1076.00, 652.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 405.976 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 1098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516222, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (974, 1555, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1329.06, 722.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1522, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1508.38, 810.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5999)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 408.349 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 1099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516490, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 471, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2549)
[0000][PE] mean and std.dev: (642.88, 519.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1341, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1369.06, 816.59)
[0000][PE] low and high boundaries for proper pairs: (1, 6334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 405.506 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516822, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 577, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3106)
[0000][PE] mean and std.dev: (683.65, 591.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1316, 2798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6578)
[0000][PE] mean and std.dev: (1748.10, 1230.48)
[0000][PE] low and high boundaries for proper pairs: (1, 8468)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 405.003 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 1101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516610, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 368, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2528)
[0000][PE] mean and std.dev: (537.75, 457.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1201, 1372, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1631.46, 786.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 406.002 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 1102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516383, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 550, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (877.36, 850.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1311, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1348.10, 953.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 409.278 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 1103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516531, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 1023, 2129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1346.20, 1469.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (835, 1373, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9751)
[0000][PE] mean and std.dev: (2301.82, 2339.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 407.320 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 1104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516688, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 1002, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (926.38, 712.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1319, 1882, 2291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1630.06, 629.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5207)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 405.345 CPU sec, 22.715 real sec
[0000] Calling mem_process_seqs.., task: 1105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516408, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 545, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (566.94, 432.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1426, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1606.24, 832.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 404.420 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516599, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (858, 1454, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6072)
[0000][PE] mean and std.dev: (1940.42, 1626.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1608, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5128)
[0000][PE] mean and std.dev: (1514.13, 817.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6414)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 403.516 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 1107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516557, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 953, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4501)
[0000][PE] mean and std.dev: (1177.88, 1040.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5898)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1722, 2662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5548)
[0000][PE] mean and std.dev: (1706.87, 911.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 407.836 CPU sec, 22.828 real sec
[0000] Calling mem_process_seqs.., task: 1108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516567, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 568, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3775)
[0000][PE] mean and std.dev: (805.50, 741.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1253, 2270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5172)
[0000][PE] mean and std.dev: (1499.76, 1027.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6623)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 402.969 CPU sec, 22.588 real sec
[0000] Calling mem_process_seqs.., task: 1109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516559, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 745, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1039.54, 1077.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (576, 1246, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (1273.95, 875.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 406.487 CPU sec, 22.776 real sec
[0000] Calling mem_process_seqs.., task: 1110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516333, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (594, 1132, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5076)
[0000][PE] mean and std.dev: (1089.50, 686.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1353, 3412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8430)
[0000][PE] mean and std.dev: (2025.53, 1905.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 407.624 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 1111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516624, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1436, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5516)
[0000][PE] mean and std.dev: (1428.44, 1128.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (799, 1294, 4210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11032)
[0000][PE] mean and std.dev: (2302.25, 2289.65)
[0000][PE] low and high boundaries for proper pairs: (1, 14443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 405.510 CPU sec, 22.701 real sec
[0000] Calling mem_process_seqs.., task: 1112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516427, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 807, 2209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5889)
[0000][PE] mean and std.dev: (1168.60, 1049.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7729)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 1566, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4084)
[0000][PE] mean and std.dev: (1678.55, 776.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 406.539 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206596
	[0000][ M::kt_pipeline] read 1206596 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516744, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 981, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (949.67, 696.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1824, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5875)
[0000][PE] mean and std.dev: (1608.62, 888.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 404.603 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206596
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516592, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 1196, 3195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8871)
[0000][PE] mean and std.dev: (1750.60, 2006.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11709)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1079, 1504, 2013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (1421.80, 810.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206596 reads in 404.326 CPU sec, 22.677 real sec
[0000] Calling mem_process_seqs.., task: 1115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516853, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 899, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4489)
[0000][PE] mean and std.dev: (954.20, 855.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1128, 4394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11638)
[0000][PE] mean and std.dev: (2109.00, 1848.85)
[0000][PE] low and high boundaries for proper pairs: (1, 15260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 402.568 CPU sec, 22.581 real sec
[0000] Calling mem_process_seqs.., task: 1116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516609, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 806, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1056.75, 971.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1066, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (1183.70, 640.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.711 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516296, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 746, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (951.27, 913.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1523, 2564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5678)
[0000][PE] mean and std.dev: (1759.75, 1344.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 404.385 CPU sec, 22.656 real sec
[0000] Calling mem_process_seqs.., task: 1118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516926, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 968, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (886.19, 613.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1312, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1719.40, 1122.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 403.035 CPU sec, 22.586 real sec
[0000] Calling mem_process_seqs.., task: 1119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516829, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 1139, 3305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9443)
[0000][PE] mean and std.dev: (1822.65, 2096.98)
[0000][PE] low and high boundaries for proper pairs: (1, 12512)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1189, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3659)
[0000][PE] mean and std.dev: (1269.46, 596.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 409.121 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 1120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516292, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (393, 988, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2658)
[0000][PE] mean and std.dev: (831.88, 593.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1386, 3104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7368)
[0000][PE] mean and std.dev: (1873.14, 1256.75)
[0000][PE] low and high boundaries for proper pairs: (1, 9500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 410.115 CPU sec, 22.979 real sec
[0000] Calling mem_process_seqs.., task: 1121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516717, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 812, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (778.32, 592.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 1326, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4871)
[0000][PE] mean and std.dev: (1510.96, 849.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6134)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 405.302 CPU sec, 22.704 real sec
[0000] Calling mem_process_seqs.., task: 1122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516388, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 755, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (676.00, 457.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.97, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1306, 2628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5978)
[0000][PE] mean and std.dev: (1634.27, 1099.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7653)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 403.930 CPU sec, 22.643 real sec
[0000] Calling mem_process_seqs.., task: 1123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516240, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 694, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4251)
[0000][PE] mean and std.dev: (946.52, 784.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1190, 1680, 3234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7322)
[0000][PE] mean and std.dev: (2126.65, 1648.33)
[0000][PE] low and high boundaries for proper pairs: (1, 9366)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 409.722 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 1124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516721, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 613, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6461)
[0000][PE] mean and std.dev: (1129.76, 1070.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1233, 1528, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4590)
[0000][PE] mean and std.dev: (1448.20, 724.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 404.715 CPU sec, 22.657 real sec
[0000] Calling mem_process_seqs.., task: 1125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516690, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 771, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3016)
[0000][PE] mean and std.dev: (680.94, 494.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (867, 1298, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (1135.25, 317.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 405.370 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516423, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 563, 1442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (839.79, 782.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1266, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3802)
[0000][PE] mean and std.dev: (1594.88, 811.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 410.493 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 1127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206552
	[0000][ M::kt_pipeline] read 1206552 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516148, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (621, 1006, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3276)
[0000][PE] mean and std.dev: (1147.87, 712.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1183, 1329, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (267, 2557)
[0000][PE] mean and std.dev: (1378.73, 312.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 406.604 CPU sec, 22.769 real sec
[0000] Calling mem_process_seqs.., task: 1128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516449, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 334, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (547.47, 489.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1444, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (1349.27, 530.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3671)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206552 reads in 405.096 CPU sec, 22.717 real sec
[0000] Calling mem_process_seqs.., task: 1129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516794, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 366, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2809)
[0000][PE] mean and std.dev: (622.08, 526.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1058, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (1058.81, 571.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 405.409 CPU sec, 22.755 real sec
[0000] Calling mem_process_seqs.., task: 1130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516101, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 531, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (830.73, 917.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (513, 1408, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7200)
[0000][PE] mean and std.dev: (1849.83, 1616.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9429)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 406.979 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 1131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516332, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 763, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (763.58, 528.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1277, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (1173.44, 576.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 405.100 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516622, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 434, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2778)
[0000][PE] mean and std.dev: (594.38, 494.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (958, 1177, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (1348.55, 703.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 407.747 CPU sec, 22.869 real sec
[0000] Calling mem_process_seqs.., task: 1133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516617, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 488, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4655)
[0000][PE] mean and std.dev: (1097.57, 1183.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1035, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (1063.88, 479.66)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 406.627 CPU sec, 22.785 real sec
[0000] Calling mem_process_seqs.., task: 1134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516448, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 363, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2762)
[0000][PE] mean and std.dev: (532.10, 466.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1427, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7943)
[0000][PE] mean and std.dev: (2119.90, 1738.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 406.807 CPU sec, 22.784 real sec
[0000] Calling mem_process_seqs.., task: 1135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516224, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 808, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1036.11, 840.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1596, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1901.86, 1506.62)
[0000][PE] low and high boundaries for proper pairs: (1, 7928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 403.805 CPU sec, 22.608 real sec
[0000] Calling mem_process_seqs.., task: 1136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516441, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 919, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (1019.18, 817.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1463, 3091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7015)
[0000][PE] mean and std.dev: (1977.23, 1595.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 405.906 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 1137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516327, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 981, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3901)
[0000][PE] mean and std.dev: (1116.64, 935.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1132, 1540, 2090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1581.36, 876.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5087)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 404.956 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516072, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 748, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1168.69, 1034.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1556, 2165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (1678.12, 1183.60)
[0000][PE] low and high boundaries for proper pairs: (1, 6413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 410.872 CPU sec, 23.034 real sec
[0000] Calling mem_process_seqs.., task: 1139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516181, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 870, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (942.54, 877.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6416)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.40, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1185, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3481)
[0000][PE] mean and std.dev: (1220.88, 494.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 406.713 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 1140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516653, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 658, 1554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (858.33, 775.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1283, 1518)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (1284.23, 410.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 403.573 CPU sec, 22.593 real sec
[0000] Calling mem_process_seqs.., task: 1141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516400, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 551, 2208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (1004.67, 853.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1461, 2810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6352)
[0000][PE] mean and std.dev: (1585.72, 898.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 408.534 CPU sec, 22.978 real sec
[0000] Calling mem_process_seqs.., task: 1142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516267, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 893, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3348)
[0000][PE] mean and std.dev: (941.54, 676.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1062, 1676, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (1639.59, 937.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5389)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 407.282 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 1143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516546, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 547, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (751.58, 640.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1978, 2688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6110)
[0000][PE] mean and std.dev: (1918.53, 1316.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 405.230 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 1144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516671, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 780, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (898.39, 753.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1149, 1571, 1797)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (1394.83, 622.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 407.042 CPU sec, 22.825 real sec
[0000] Calling mem_process_seqs.., task: 1145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516528, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 381, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (644.87, 820.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4990)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1335, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1470.78, 941.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 406.683 CPU sec, 22.795 real sec
[0000] Calling mem_process_seqs.., task: 1146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 515518, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 492, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3679)
[0000][PE] mean and std.dev: (723.82, 583.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1436, 2137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4439)
[0000][PE] mean and std.dev: (1438.79, 923.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 409.363 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 1147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516469, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 504, 2120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1069.54, 1104.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (652, 1059, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (776.21, 393.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 405.901 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516582, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 601, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (814.21, 588.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (795, 1603, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1390.10, 1014.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 405.315 CPU sec, 22.711 real sec
[0000] Calling mem_process_seqs.., task: 1149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516449, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (480, 994, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4776)
[0000][PE] mean and std.dev: (1001.40, 918.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6208)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1292, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1417.79, 787.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 409.674 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 1150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516624, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (475, 1191, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5182)
[0000][PE] mean and std.dev: (1282.60, 1085.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1393, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (1481.05, 613.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 404.397 CPU sec, 22.644 real sec
[0000] Calling mem_process_seqs.., task: 1151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516120, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 643, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (848.83, 780.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1512, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3622)
[0000][PE] mean and std.dev: (1473.79, 668.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 410.191 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 1152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515621, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 661, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2798)
[0000][PE] mean and std.dev: (828.96, 688.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1301, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (1119.92, 493.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 407.609 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 1153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516617, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1240, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6535)
[0000][PE] mean and std.dev: (1500.21, 1455.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1051, 1673, 2879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6535)
[0000][PE] mean and std.dev: (2045.94, 1365.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 405.030 CPU sec, 22.682 real sec
[0000] Calling mem_process_seqs.., task: 1154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516383, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (642, 959, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (1199.19, 958.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1651, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4491)
[0000][PE] mean and std.dev: (1368.86, 740.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 405.083 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 1155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516796, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 481, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3347)
[0000][PE] mean and std.dev: (678.36, 657.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.37, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (810, 1156, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (1340.00, 951.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 404.646 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 1156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516616, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 1099, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1099.21, 874.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 1452, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6651)
[0000][PE] mean and std.dev: (1755.42, 1627.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 405.687 CPU sec, 22.722 real sec
[0000] Calling mem_process_seqs.., task: 1157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516857, 2, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 522, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4143)
[0000][PE] mean and std.dev: (904.54, 891.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 404.997 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516364, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 495, 1151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (730.67, 725.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1631, 4086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10314)
[0000][PE] mean and std.dev: (2431.04, 2109.18)
[0000][PE] low and high boundaries for proper pairs: (1, 13428)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 406.835 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 1159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516707, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 435, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2912)
[0000][PE] mean and std.dev: (661.00, 549.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1110, 1516, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4794)
[0000][PE] mean and std.dev: (1540.00, 791.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 403.356 CPU sec, 22.600 real sec
[0000] Calling mem_process_seqs.., task: 1160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516503, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 536, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (1011.18, 965.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1615, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6013)
[0000][PE] mean and std.dev: (1892.70, 1283.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 402.933 CPU sec, 22.611 real sec
[0000] Calling mem_process_seqs.., task: 1161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516179, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 790, 2430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6622)
[0000][PE] mean and std.dev: (1297.50, 1450.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1260, 1966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1365.50, 767.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 411.677 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 1162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516946, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 990, 1877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5075)
[0000][PE] mean and std.dev: (977.46, 1022.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6674)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1194, 2193, 3814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9054)
[0000][PE] mean and std.dev: (2462.32, 1890.86)
[0000][PE] low and high boundaries for proper pairs: (1, 11674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 405.744 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516832, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (692, 995, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (993.67, 694.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (730, 1636, 3237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8251)
[0000][PE] mean and std.dev: (1967.80, 1574.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10758)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1089, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4236)
[0000][PE] mean and std.dev: (1181.00, 527.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 405.288 CPU sec, 22.699 real sec
[0000] Calling mem_process_seqs.., task: 1164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516381, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 919, 1655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4363)
[0000][PE] mean and std.dev: (1116.62, 1192.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5888)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.31, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1247, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7368)
[0000][PE] mean and std.dev: (1666.29, 1285.70)
[0000][PE] low and high boundaries for proper pairs: (1, 9561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 404.632 CPU sec, 22.688 real sec
[0000] Calling mem_process_seqs.., task: 1165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516637, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 496, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (797.15, 724.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1176, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2537)
[0000][PE] mean and std.dev: (1111.27, 567.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 405.009 CPU sec, 22.710 real sec
[0000] Calling mem_process_seqs.., task: 1166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516968, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 721, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4267)
[0000][PE] mean and std.dev: (983.56, 865.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1577, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4785)
[0000][PE] mean and std.dev: (1789.53, 991.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 405.062 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516720, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 975, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (958.20, 690.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (691, 917, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1189.47, 792.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 405.557 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516742, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 403, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2337)
[0000][PE] mean and std.dev: (506.55, 451.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1393, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4407)
[0000][PE] mean and std.dev: (1400.41, 851.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 401.662 CPU sec, 22.498 real sec
[0000] Calling mem_process_seqs.., task: 1169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516608, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 735, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (839.77, 616.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1441, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4543)
[0000][PE] mean and std.dev: (1445.52, 980.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 404.852 CPU sec, 22.702 real sec
[0000] Calling mem_process_seqs.., task: 1170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516879, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 530, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3265)
[0000][PE] mean and std.dev: (826.05, 728.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.99, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1089, 1537, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (1455.53, 843.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 403.030 CPU sec, 22.641 real sec
[0000] Calling mem_process_seqs.., task: 1171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516566, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 621, 2612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7136)
[0000][PE] mean and std.dev: (1448.59, 1792.05)
[0000][PE] low and high boundaries for proper pairs: (1, 9398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1633, 2100, 3466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7132)
[0000][PE] mean and std.dev: (2352.75, 1202.40)
[0000][PE] low and high boundaries for proper pairs: (1, 8965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 406.275 CPU sec, 22.787 real sec
[0000] Calling mem_process_seqs.., task: 1172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206306
	[0000][ M::kt_pipeline] read 1206306 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516279, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 402, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (826.67, 892.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1191, 1409, 2582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1838.21, 1142.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 407.386 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516759, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 334, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (442.62, 466.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3202)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1504, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1534.05, 721.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206306 reads in 403.789 CPU sec, 22.647 real sec
[0000] Calling mem_process_seqs.., task: 1174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516572, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 326, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (653.12, 586.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.08, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (846, 1370, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4488)
[0000][PE] mean and std.dev: (1595.06, 1010.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 404.399 CPU sec, 22.633 real sec
[0000] Calling mem_process_seqs.., task: 1175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516993, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 492, 1714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4620)
[0000][PE] mean and std.dev: (1022.48, 1009.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.10, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1139, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1196.30, 541.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 404.436 CPU sec, 22.667 real sec
[0000] Calling mem_process_seqs.., task: 1176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516850, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 936, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1017.09, 805.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1444, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1585.16, 906.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 405.841 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 1177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516773, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (638, 1169, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4967)
[0000][PE] mean and std.dev: (1231.65, 985.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.97, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (720, 1231, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6189)
[0000][PE] mean and std.dev: (1377.45, 954.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 407.110 CPU sec, 22.830 real sec
[0000] Calling mem_process_seqs.., task: 1178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516511, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 716, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (722.19, 428.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1150, 1701, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (1663.05, 935.49)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 404.492 CPU sec, 22.666 real sec
[0000] Calling mem_process_seqs.., task: 1179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516434, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 957, 1767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4637)
[0000][PE] mean and std.dev: (1082.33, 1105.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1854, 3838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9342)
[0000][PE] mean and std.dev: (2230.38, 1497.08)
[0000][PE] low and high boundaries for proper pairs: (1, 12094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 407.320 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 1180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516610, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 907, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3735)
[0000][PE] mean and std.dev: (886.06, 745.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4906)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1166, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1372.29, 889.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5361)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 406.376 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 1181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517098, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 1093, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (900.95, 580.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (636, 1313, 2415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1659.43, 1455.66)
[0000][PE] low and high boundaries for proper pairs: (1, 7752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 403.560 CPU sec, 22.631 real sec
[0000] Calling mem_process_seqs.., task: 1182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516511, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (394, 964, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4930)
[0000][PE] mean and std.dev: (1014.15, 830.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6442)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1265, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1583.92, 1114.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 405.630 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 1183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517110, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 897, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (897.81, 845.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1215, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (1279.31, 543.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 404.836 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516532, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 926, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5180)
[0000][PE] mean and std.dev: (1298.15, 1272.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (809, 1349, 2780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6722)
[0000][PE] mean and std.dev: (1568.19, 1059.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 405.765 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516333, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 394, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3938)
[0000][PE] mean and std.dev: (695.00, 632.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1371, 2175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4717)
[0000][PE] mean and std.dev: (1531.86, 893.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5988)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 404.404 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 1186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516681, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (652, 1129, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4051)
[0000][PE] mean and std.dev: (1032.43, 615.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1523, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5042)
[0000][PE] mean and std.dev: (1729.50, 1199.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 405.564 CPU sec, 22.727 real sec
[0000] Calling mem_process_seqs.., task: 1187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516281, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 729, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (928.58, 784.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1289, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1220.40, 757.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 406.578 CPU sec, 22.827 real sec
[0000] Calling mem_process_seqs.., task: 1188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516312, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 949, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (974.88, 818.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.28, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1211, 1770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3790)
[0000][PE] mean and std.dev: (1023.07, 586.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 408.705 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 1189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516231, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (465, 831, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1018.81, 807.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1087, 1446, 2196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1755.80, 949.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 406.884 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516817, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 730, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3863)
[0000][PE] mean and std.dev: (950.57, 767.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1795, 3117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7009)
[0000][PE] mean and std.dev: (1973.33, 1257.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 404.237 CPU sec, 22.654 real sec
[0000] Calling mem_process_seqs.., task: 1191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516525, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 1119, 1936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1244.91, 997.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1250, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4418)
[0000][PE] mean and std.dev: (1349.95, 922.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 405.649 CPU sec, 22.731 real sec
[0000] Calling mem_process_seqs.., task: 1192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516570, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 785, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3482)
[0000][PE] mean and std.dev: (900.24, 685.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4524)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1312, 2854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1589.41, 901.72)
[0000][PE] low and high boundaries for proper pairs: (1, 8587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 404.037 CPU sec, 22.615 real sec
[0000] Calling mem_process_seqs.., task: 1193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516438, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (499, 1373, 2770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7312)
[0000][PE] mean and std.dev: (1682.52, 1519.71)
[0000][PE] low and high boundaries for proper pairs: (1, 9583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.78, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1080, 2151)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4969)
[0000][PE] mean and std.dev: (1368.95, 799.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 404.632 CPU sec, 22.691 real sec
[0000] Calling mem_process_seqs.., task: 1194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516420, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 810, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4364)
[0000][PE] mean and std.dev: (1121.87, 1038.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5711)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1318, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (1463.50, 953.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5434)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 402.570 CPU sec, 22.550 real sec
[0000] Calling mem_process_seqs.., task: 1195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206176
	[0000][ M::kt_pipeline] read 1206176 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516501, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 979, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4809)
[0000][PE] mean and std.dev: (1065.71, 1031.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 1645, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6338)
[0000][PE] mean and std.dev: (1470.00, 1017.92)
[0000][PE] low and high boundaries for proper pairs: (1, 8342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 405.015 CPU sec, 22.693 real sec
[0000] Calling mem_process_seqs.., task: 1196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516942, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 712, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3100)
[0000][PE] mean and std.dev: (751.35, 489.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1255, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (23, 2278)
[0000][PE] mean and std.dev: (1135.44, 377.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206176 reads in 401.824 CPU sec, 22.519 real sec
[0000] Calling mem_process_seqs.., task: 1197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206582
	[0000][ M::kt_pipeline] read 1206582 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516532, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 641, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (903.53, 821.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (562, 1091, 2033)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (1384.46, 1147.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 404.581 CPU sec, 22.649 real sec
[0000] Calling mem_process_seqs.., task: 1198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516437, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 684, 2091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5539)
[0000][PE] mean and std.dev: (1220.48, 1236.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7263)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1306, 2672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6166)
[0000][PE] mean and std.dev: (1402.05, 943.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206582 reads in 408.345 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 1199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516973, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1186, 1643)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (1287.54, 988.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (515, 1005, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (895.69, 479.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 403.184 CPU sec, 22.617 real sec
[0000] Calling mem_process_seqs.., task: 1200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206234
	[0000][ M::kt_pipeline] read 1206234 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516255, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 618, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1187.77, 1176.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 405.651 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517020, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 796, 2075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5535)
[0000][PE] mean and std.dev: (1138.91, 1033.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1602, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4977)
[0000][PE] mean and std.dev: (1607.21, 724.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206234 reads in 401.905 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 1202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516684, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 986, 2506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6792)
[0000][PE] mean and std.dev: (1270.12, 1055.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (613, 1366, 2634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6676)
[0000][PE] mean and std.dev: (1641.39, 1043.51)
[0000][PE] low and high boundaries for proper pairs: (1, 8697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 407.094 CPU sec, 22.823 real sec
[0000] Calling mem_process_seqs.., task: 1203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516359, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 722, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4981)
[0000][PE] mean and std.dev: (888.00, 738.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1543, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (1295.08, 771.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 407.900 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 1204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206242
	[0000][ M::kt_pipeline] read 1206242 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516413, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (445, 1026, 1833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (1046.33, 713.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5997)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1257, 1835, 3148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6930)
[0000][PE] mean and std.dev: (2043.36, 1408.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 407.138 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 1205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516291, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 787, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (773.85, 671.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1530, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (1504.33, 662.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206242 reads in 403.702 CPU sec, 22.630 real sec
[0000] Calling mem_process_seqs.., task: 1206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517221, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 631, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (781.75, 607.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1228, 1471, 2407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4765)
[0000][PE] mean and std.dev: (1673.70, 779.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 406.434 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 1207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516020, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 396, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3228)
[0000][PE] mean and std.dev: (641.08, 579.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1901, 3642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8782)
[0000][PE] mean and std.dev: (2221.25, 2216.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 411.382 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 1208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 517146, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 306, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (496.44, 474.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1212, 2307, 2976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6504)
[0000][PE] mean and std.dev: (2043.50, 1069.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 405.495 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516615, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1181, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6216)
[0000][PE] mean and std.dev: (1305.35, 1039.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1223, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6467)
[0000][PE] mean and std.dev: (1618.65, 1407.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.848 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 1210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516800, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 421, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (599.45, 549.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1098, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5695)
[0000][PE] mean and std.dev: (1415.45, 966.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 408.796 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 1211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516520, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 699, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (782.33, 708.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1274, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5725)
[0000][PE] mean and std.dev: (1644.86, 1088.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 403.767 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516755, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 564, 1721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4615)
[0000][PE] mean and std.dev: (904.12, 867.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1241, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (153, 2708)
[0000][PE] mean and std.dev: (1323.65, 496.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3309)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 406.062 CPU sec, 22.742 real sec
[0000] Calling mem_process_seqs.., task: 1213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516505, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 766, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3730)
[0000][PE] mean and std.dev: (788.90, 514.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1603, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (1344.79, 742.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 408.484 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 1214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516577, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 653, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (997.27, 918.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1217, 2164)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (1442.05, 871.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 409.208 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 1215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516387, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 926, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4802)
[0000][PE] mean and std.dev: (1142.14, 875.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1045, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (1283.45, 827.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 411.920 CPU sec, 23.132 real sec
[0000] Calling mem_process_seqs.., task: 1216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516632, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 659, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (707.41, 588.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1559, 2716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5932)
[0000][PE] mean and std.dev: (1830.82, 1017.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 409.986 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 1217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516541, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 470, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5464)
[0000][PE] mean and std.dev: (1046.89, 1208.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (644, 1294, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1103.93, 661.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 408.859 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 1218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517037, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 455, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1924)
[0000][PE] mean and std.dev: (531.79, 277.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1730, 2866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1982.27, 1117.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 409.274 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 1219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516539, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 390, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (607.74, 472.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3102)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.21, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1182, 2299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1415.55, 981.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 408.785 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 1220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515876, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 1049, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4578)
[0000][PE] mean and std.dev: (1248.92, 980.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1215, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (1081.10, 667.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.094 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206240
	[0000][ M::kt_pipeline] read 1206240 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516348, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 790, 2049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1227.35, 1180.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1321, 2898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6744)
[0000][PE] mean and std.dev: (1831.65, 1486.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 408.604 CPU sec, 22.896 real sec
[0000] Calling mem_process_seqs.., task: 1222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516698, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 391, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5133)
[0000][PE] mean and std.dev: (1002.00, 1301.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1411, 2161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4675)
[0000][PE] mean and std.dev: (1368.54, 744.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206240 reads in 406.152 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516956, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 419, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (749.17, 689.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1151, 2990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7990)
[0000][PE] mean and std.dev: (1254.55, 943.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 406.962 CPU sec, 22.805 real sec
[0000] Calling mem_process_seqs.., task: 1224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516196, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1059, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (1297.04, 1249.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1357, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (87, 2682)
[0000][PE] mean and std.dev: (1239.47, 372.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 407.827 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 1225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516759, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 718, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5693)
[0000][PE] mean and std.dev: (1109.96, 1141.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1943, 3822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9270)
[0000][PE] mean and std.dev: (2245.47, 1497.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 405.948 CPU sec, 22.747 real sec
[0000] Calling mem_process_seqs.., task: 1226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516754, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 778, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4833)
[0000][PE] mean and std.dev: (1195.67, 1122.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6342)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1680, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4685)
[0000][PE] mean and std.dev: (1507.90, 953.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 406.632 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 515916, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 962, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4453)
[0000][PE] mean and std.dev: (1031.72, 854.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (761, 1002, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4610)
[0000][PE] mean and std.dev: (1348.32, 877.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 412.704 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 1228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516795, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 813, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4321)
[0000][PE] mean and std.dev: (1193.70, 1114.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (72, 433, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (917.50, 902.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6456)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1276, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5923)
[0000][PE] mean and std.dev: (1713.75, 1114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 407.155 CPU sec, 22.782 real sec
[0000] Calling mem_process_seqs.., task: 1229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516715, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 297, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2020)
[0000][PE] mean and std.dev: (471.79, 428.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1344, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1407.72, 934.00)
[0000][PE] low and high boundaries for proper pairs: (1, 6239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 406.363 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516713, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 380, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2944)
[0000][PE] mean and std.dev: (662.85, 552.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1107, 1196, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (1302.43, 601.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 407.230 CPU sec, 22.807 real sec
[0000] Calling mem_process_seqs.., task: 1231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516231, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 667, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5150)
[0000][PE] mean and std.dev: (960.40, 998.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1454, 1859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (1210.80, 615.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4991)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 406.488 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516630, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (516, 1386, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6003)
[0000][PE] mean and std.dev: (1709.97, 1432.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1359, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3354)
[0000][PE] mean and std.dev: (1366.50, 542.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 406.306 CPU sec, 22.756 real sec
[0000] Calling mem_process_seqs.., task: 1233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516946, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 599, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (662.77, 491.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1358, 2040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4050)
[0000][PE] mean and std.dev: (1277.28, 624.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 403.369 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516482, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 818, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (908.17, 745.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1175, 1547, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5549)
[0000][PE] mean and std.dev: (2010.29, 1058.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 406.799 CPU sec, 22.766 real sec
[0000] Calling mem_process_seqs.., task: 1235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516552, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (469, 1055, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3397)
[0000][PE] mean and std.dev: (987.00, 592.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1525, 1836, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4432)
[0000][PE] mean and std.dev: (1869.25, 828.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5401)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 408.232 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516715, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 885, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3891)
[0000][PE] mean and std.dev: (971.52, 783.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1247, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (1223.86, 456.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 409.374 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 1237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516985, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 779, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (816.25, 599.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1242, 1707, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4818)
[0000][PE] mean and std.dev: (1756.44, 790.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6010)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 406.087 CPU sec, 22.770 real sec
[0000] Calling mem_process_seqs.., task: 1238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516374, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 312, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4072)
[0000][PE] mean and std.dev: (830.94, 938.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1314, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (1302.09, 604.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 406.195 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 1239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516153, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1051, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (978.16, 672.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1668, 1832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (1351.92, 703.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5009)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 407.117 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 1240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206194
	[0000][ M::kt_pipeline] read 1206194 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516358, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 872, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4010)
[0000][PE] mean and std.dev: (970.39, 830.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1359, 3325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7799)
[0000][PE] mean and std.dev: (1572.69, 1119.25)
[0000][PE] low and high boundaries for proper pairs: (1, 10036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 411.070 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 1241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517036, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 407, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (786.19, 753.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1016, 1183, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2942)
[0000][PE] mean and std.dev: (1254.67, 523.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206194 reads in 402.407 CPU sec, 22.530 real sec
[0000] Calling mem_process_seqs.., task: 1242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515917, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 391, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3174)
[0000][PE] mean and std.dev: (577.57, 489.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1921, 2911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6411)
[0000][PE] mean and std.dev: (1950.24, 1004.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 406.751 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 1243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516497, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 578, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (1092.70, 1071.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1329, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (1460.36, 609.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 409.044 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1244
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 517068, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 633, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (745.71, 511.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3713)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1328, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (1507.94, 752.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 399.997 CPU sec, 22.566 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000102 bp)...
[0000] Calling mem_process_seqs.., task: 1245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516025, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 932, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1095.71, 957.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1305, 3823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9559)
[0000][PE] mean and std.dev: (2150.46, 1641.77)
[0000][PE] low and high boundaries for proper pairs: (1, 12427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 410.817 CPU sec, 23.089 real sec
[0000] Calling mem_process_seqs.., task: 1246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516246, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 610, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1165.53, 983.79)
[0000][PE] low and high boundaries for proper pairs: (1, 7571)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1512, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5267)
[0000][PE] mean and std.dev: (1515.41, 908.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 412.935 CPU sec, 23.149 real sec
[0000] Calling mem_process_seqs.., task: 1247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516371, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 401, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4971)
[0000][PE] mean and std.dev: (1081.59, 1200.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (633, 1249, 2828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7218)
[0000][PE] mean and std.dev: (1673.75, 1457.97)
[0000][PE] low and high boundaries for proper pairs: (1, 9413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 414.480 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 1248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516669, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1000, 1983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1172.86, 1087.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1182, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (1190.14, 573.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 411.827 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 1249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516371, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 1455, 1786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4656)
[0000][PE] mean and std.dev: (1397.39, 1113.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1074, 1965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4387)
[0000][PE] mean and std.dev: (1423.05, 1119.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 411.113 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 1250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516542, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 467, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4966)
[0000][PE] mean and std.dev: (975.61, 1106.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1685, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (1731.42, 777.09)
[0000][PE] low and high boundaries for proper pairs: (1, 6064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 412.347 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 1251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516216, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 896, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1182.88, 1253.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.13, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (681, 1060, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2928)
[0000][PE] mean and std.dev: (1022.74, 478.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 412.945 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 1252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516182, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 959, 1986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5142)
[0000][PE] mean and std.dev: (1155.62, 1019.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (816, 1087, 1623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (1013.25, 456.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 414.149 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 1253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516498, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (400, 851, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4039)
[0000][PE] mean and std.dev: (1057.72, 938.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1316, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (1271.50, 728.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 412.845 CPU sec, 23.129 real sec
[0000] Calling mem_process_seqs.., task: 1254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516761, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1425, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7076)
[0000][PE] mean and std.dev: (1582.26, 1504.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1263, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (1292.24, 487.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 416.569 CPU sec, 23.352 real sec
[0000] Calling mem_process_seqs.., task: 1255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515948, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 453, 1154)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (772.70, 758.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (782, 1389, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5762)
[0000][PE] mean and std.dev: (1633.33, 1301.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7422)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 419.103 CPU sec, 23.519 real sec
[0000] Calling mem_process_seqs.., task: 1256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 515879, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 730, 1709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (914.11, 797.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 2220, 2747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (1868.88, 1242.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 412.879 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 1257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516863, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 701, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1142.59, 1065.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1464, 2044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4054)
[0000][PE] mean and std.dev: (1364.79, 689.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 410.230 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206268
	[0000][ M::kt_pipeline] read 1206268 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516846, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 358, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4580)
[0000][PE] mean and std.dev: (1078.75, 1402.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1701, 2284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1426.69, 846.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 411.127 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 1259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516419, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 534, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6064)
[0000][PE] mean and std.dev: (1306.66, 1347.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1031, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (1081.44, 336.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206268 reads in 411.726 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206516
	[0000][ M::kt_pipeline] read 1206516 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516289, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1299, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6789)
[0000][PE] mean and std.dev: (1513.86, 1211.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 413.140 CPU sec, 23.153 real sec
[0000] Calling mem_process_seqs.., task: 1261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516564, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 1001, 2065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5285)
[0000][PE] mean and std.dev: (1296.35, 966.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1250, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2982)
[0000][PE] mean and std.dev: (1308.00, 602.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206516 reads in 412.617 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 1262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515953, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 714, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (799.27, 694.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (530, 1094, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1143.12, 853.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 413.902 CPU sec, 23.202 real sec
[0000] Calling mem_process_seqs.., task: 1263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516962, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 602, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (819.24, 595.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1066, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3558)
[0000][PE] mean and std.dev: (1118.58, 595.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 414.238 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 1264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516851, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 486, 1305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3461)
[0000][PE] mean and std.dev: (656.26, 543.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4539)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1023, 1423, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1536.80, 736.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 412.053 CPU sec, 23.116 real sec
[0000] Calling mem_process_seqs.., task: 1265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516755, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 671, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (727.39, 588.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (928, 1158, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (1235.12, 572.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 410.672 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 1266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516578, 0, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 434, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (769.75, 883.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 412.472 CPU sec, 23.107 real sec
[0000] Calling mem_process_seqs.., task: 1267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516977, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (421, 646, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (757.83, 510.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (393, 787, 1341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (735.50, 437.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 411.123 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 1268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516192, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 876, 2115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5639)
[0000][PE] mean and std.dev: (1309.29, 1210.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1773, 3023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6575)
[0000][PE] mean and std.dev: (1925.50, 1085.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 411.975 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 1269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515838, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 480, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (570.43, 446.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1305, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (1463.80, 771.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 411.312 CPU sec, 23.064 real sec
[0000] Calling mem_process_seqs.., task: 1270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516722, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 990, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (884.91, 646.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1494, 2036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (1294.06, 737.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 409.046 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516849, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (423, 847, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2520)
[0000][PE] mean and std.dev: (852.06, 580.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 2181, 2758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6394)
[0000][PE] mean and std.dev: (1961.00, 1072.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 411.748 CPU sec, 23.086 real sec
[0000] Calling mem_process_seqs.., task: 1272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516672, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 826, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4441)
[0000][PE] mean and std.dev: (962.33, 685.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1127, 1366, 2921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6509)
[0000][PE] mean and std.dev: (1892.31, 1305.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 412.019 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 1273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516008, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1080, 2517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6779)
[0000][PE] mean and std.dev: (1399.92, 1298.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1039, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (1094.36, 601.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 415.511 CPU sec, 23.306 real sec
[0000] Calling mem_process_seqs.., task: 1274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516091, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 812, 1596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3916)
[0000][PE] mean and std.dev: (928.58, 688.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (988, 1471, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (1549.85, 973.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 413.307 CPU sec, 23.160 real sec
[0000] Calling mem_process_seqs.., task: 1275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516150, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (405, 1133, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (938.71, 815.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1494, 5058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12828)
[0000][PE] mean and std.dev: (2486.75, 1846.78)
[0000][PE] low and high boundaries for proper pairs: (1, 16713)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 414.204 CPU sec, 23.245 real sec
[0000] Calling mem_process_seqs.., task: 1276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516555, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 809, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (766.36, 480.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1123, 1354, 2125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4129)
[0000][PE] mean and std.dev: (1321.43, 706.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 408.850 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516314, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 683, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5386)
[0000][PE] mean and std.dev: (1104.29, 1125.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1604, 2970)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6412)
[0000][PE] mean and std.dev: (1692.69, 733.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 414.745 CPU sec, 23.238 real sec
[0000] Calling mem_process_seqs.., task: 1278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516402, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 422, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2535)
[0000][PE] mean and std.dev: (590.63, 458.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3298)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1045, 3320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8206)
[0000][PE] mean and std.dev: (2064.61, 1839.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 413.576 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 1279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206548
	[0000][ M::kt_pipeline] read 1206548 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516541, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 591, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (749.85, 553.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1109, 1488, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4724)
[0000][PE] mean and std.dev: (1509.85, 731.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 412.022 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516510, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 1430, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5016)
[0000][PE] mean and std.dev: (1348.44, 1012.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1207, 2498)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (1634.44, 1190.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206548 reads in 417.215 CPU sec, 23.388 real sec
[0000] Calling mem_process_seqs.., task: 1281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206532
	[0000][ M::kt_pipeline] read 1206532 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516847, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1122, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6010)
[0000][PE] mean and std.dev: (1618.25, 1720.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (886, 1314, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (1167.83, 543.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 413.832 CPU sec, 23.215 real sec
[0000] Calling mem_process_seqs.., task: 1282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516215, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 983, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5657)
[0000][PE] mean and std.dev: (1260.00, 1166.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1249, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (1235.00, 625.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206532 reads in 411.932 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 1283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516460, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 510, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3310)
[0000][PE] mean and std.dev: (873.23, 771.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1337, 1736)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1299.19, 471.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 413.202 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 1284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516433, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (452, 1309, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5540)
[0000][PE] mean and std.dev: (1465.00, 1270.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1294, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5361)
[0000][PE] mean and std.dev: (1415.52, 867.90)
[0000][PE] low and high boundaries for proper pairs: (1, 6875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 410.944 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 1285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 517001, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 1085, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1308.11, 1113.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1231, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (1331.14, 839.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 411.217 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 1286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516921, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 895, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5956)
[0000][PE] mean and std.dev: (1319.60, 1453.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1008, 1298, 2548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5628)
[0000][PE] mean and std.dev: (1697.45, 1307.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 408.790 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 1287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516306, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1098, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5086)
[0000][PE] mean and std.dev: (1073.32, 760.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (615, 1253, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4095)
[0000][PE] mean and std.dev: (1142.15, 642.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 414.554 CPU sec, 23.243 real sec
[0000] Calling mem_process_seqs.., task: 1288
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516262, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 927, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1087.55, 764.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1558, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3806)
[0000][PE] mean and std.dev: (1307.27, 768.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 411.505 CPU sec, 23.081 real sec
[0000] Calling mem_process_seqs.., task: 1289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516308, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (624, 889, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (1077.06, 681.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1258, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (1318.86, 645.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3970)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 410.340 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 1290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516540, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (505, 1144, 2124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5362)
[0000][PE] mean and std.dev: (1374.88, 1317.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (598, 1061, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1468.14, 1242.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6750)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 410.650 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516686, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 358, 891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (554.12, 446.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1062, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4464)
[0000][PE] mean and std.dev: (1467.39, 1076.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 410.573 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516230, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 689, 2005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5317)
[0000][PE] mean and std.dev: (1055.44, 1040.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 1840, 3829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9103)
[0000][PE] mean and std.dev: (2179.06, 1375.65)
[0000][PE] low and high boundaries for proper pairs: (1, 11740)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 412.003 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 1293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516301, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 539, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3853)
[0000][PE] mean and std.dev: (892.43, 817.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (680, 1277, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5189)
[0000][PE] mean and std.dev: (1346.63, 1037.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 414.278 CPU sec, 23.241 real sec
[0000] Calling mem_process_seqs.., task: 1294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516790, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 900, 1389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (931.21, 561.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1210, 1809, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5569)
[0000][PE] mean and std.dev: (1687.67, 937.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 409.454 CPU sec, 22.962 real sec
[0000] Calling mem_process_seqs.., task: 1295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516475, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1323, 2316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (1352.35, 1161.81)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 914, 1984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (1358.61, 951.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 410.928 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 1296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516713, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 471, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (609.38, 461.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1073, 1437, 1791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (1366.29, 710.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4208)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 412.272 CPU sec, 23.107 real sec
[0000] Calling mem_process_seqs.., task: 1297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516605, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 493, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2168)
[0000][PE] mean and std.dev: (585.18, 502.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1262, 1754, 2166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1594.47, 572.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4878)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 412.660 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 1298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516699, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (476, 1151, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3131)
[0000][PE] mean and std.dev: (980.71, 601.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4016)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (909, 1225, 2143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4611)
[0000][PE] mean and std.dev: (1547.26, 964.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 412.983 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 1299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516470, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 682, 1302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (805.75, 718.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1033, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4404)
[0000][PE] mean and std.dev: (1319.57, 941.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 414.724 CPU sec, 23.256 real sec
[0000] Calling mem_process_seqs.., task: 1300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517027, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 712, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (846.45, 663.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1250, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1291.06, 658.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 409.172 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 1301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516474, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 957, 1912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5090)
[0000][PE] mean and std.dev: (1253.03, 1058.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1363, 2305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4715)
[0000][PE] mean and std.dev: (1565.61, 968.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 409.066 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 1302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516557, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 689, 2174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (1082.82, 1085.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7784)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1090, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (1079.09, 688.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 407.657 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 1303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516950, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 576, 1248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (876.04, 875.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (692, 1342, 2708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6740)
[0000][PE] mean and std.dev: (1620.18, 1143.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 408.248 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516368, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 523, 1512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3874)
[0000][PE] mean and std.dev: (867.05, 740.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1496, 2562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1782.24, 950.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 415.396 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 1305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516680, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 922, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5309)
[0000][PE] mean and std.dev: (1179.31, 1095.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1250, 2057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4181)
[0000][PE] mean and std.dev: (1506.50, 953.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 409.958 CPU sec, 22.954 real sec
[0000] Calling mem_process_seqs.., task: 1306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516851, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 921, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4017)
[0000][PE] mean and std.dev: (981.14, 728.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1507, 2106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4212)
[0000][PE] mean and std.dev: (1301.39, 545.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 413.887 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 1307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516610, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 681, 2364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6506)
[0000][PE] mean and std.dev: (943.85, 891.93)
[0000][PE] low and high boundaries for proper pairs: (1, 8577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1155, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (303, 2078)
[0000][PE] mean and std.dev: (1128.73, 208.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 410.261 CPU sec, 22.981 real sec
[0000] Calling mem_process_seqs.., task: 1308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206236
	[0000][ M::kt_pipeline] read 1206236 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516232, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 1561, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7090)
[0000][PE] mean and std.dev: (1608.05, 1263.42)
[0000][PE] low and high boundaries for proper pairs: (1, 9350)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1283, 1917, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4193)
[0000][PE] mean and std.dev: (1716.43, 742.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 413.668 CPU sec, 23.150 real sec
[0000] Calling mem_process_seqs.., task: 1309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516356, 6, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 329, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6975)
[0000][PE] mean and std.dev: (1262.68, 1448.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (938, 1495, 2883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6773)
[0000][PE] mean and std.dev: (1904.39, 1236.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206236 reads in 412.100 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 1310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516639, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 641, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (926.93, 887.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1491, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4470)
[0000][PE] mean and std.dev: (1701.67, 1021.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 412.972 CPU sec, 23.127 real sec
[0000] Calling mem_process_seqs.., task: 1311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517066, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 490, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3357)
[0000][PE] mean and std.dev: (755.19, 673.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 953, 2327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5929)
[0000][PE] mean and std.dev: (1169.89, 891.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 411.516 CPU sec, 23.056 real sec
[0000] Calling mem_process_seqs.., task: 1312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516258, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1233, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1132.50, 1022.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.06, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (655, 1415, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4057)
[0000][PE] mean and std.dev: (1344.44, 901.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 411.507 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 1313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516843, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 1150, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4742)
[0000][PE] mean and std.dev: (1073.75, 770.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1536, 3078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7306)
[0000][PE] mean and std.dev: (1780.10, 1151.92)
[0000][PE] low and high boundaries for proper pairs: (1, 9420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 410.028 CPU sec, 23.003 real sec
[0000] Calling mem_process_seqs.., task: 1314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516528, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (485, 860, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (805.65, 447.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1172, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (1160.42, 484.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 412.783 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 1315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516329, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 376, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (540.90, 551.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2908)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 2148, 3305)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7729)
[0000][PE] mean and std.dev: (2571.15, 2185.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 414.777 CPU sec, 23.249 real sec
[0000] Calling mem_process_seqs.., task: 1316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516710, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 949, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4629)
[0000][PE] mean and std.dev: (1131.42, 831.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6024)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (813, 1228, 1556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (1128.29, 532.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3785)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 412.684 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 1317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516808, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 548, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (962.36, 897.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1179, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (1154.25, 544.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 416.001 CPU sec, 23.330 real sec
[0000] Calling mem_process_seqs.., task: 1318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517075, 9, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 454, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1543)
[0000][PE] mean and std.dev: (471.15, 305.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1367, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (1330.00, 576.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 411.811 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 1319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516492, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 626, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (946.09, 940.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1098, 1226, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3327)
[0000][PE] mean and std.dev: (1319.75, 610.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 410.732 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 1320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206240
	[0000][ M::kt_pipeline] read 1206240 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516521, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 958, 1917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (1128.07, 844.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1482, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (1359.67, 625.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 412.609 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 1321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516521, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 546, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (820.40, 735.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (684, 1283, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3951)
[0000][PE] mean and std.dev: (1097.69, 650.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206240 reads in 413.849 CPU sec, 23.263 real sec
[0000] Calling mem_process_seqs.., task: 1322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516715, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (532, 1024, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1100.88, 663.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1085, 1384, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4316)
[0000][PE] mean and std.dev: (1554.69, 584.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 413.114 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 1323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206216
	[0000][ M::kt_pipeline] read 1206216 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516370, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 1004, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3988)
[0000][PE] mean and std.dev: (1180.89, 994.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 414.132 CPU sec, 23.247 real sec
[0000] Calling mem_process_seqs.., task: 1324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516414, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 473, 1616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (865.26, 776.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1170, 2010, 3556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8328)
[0000][PE] mean and std.dev: (2496.86, 1845.15)
[0000][PE] low and high boundaries for proper pairs: (1, 10714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206216 reads in 408.263 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 1325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516186, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 829, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (937.38, 688.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 410.908 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 1326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516459, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 593, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (909.89, 850.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1021, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (1156.15, 632.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 416.203 CPU sec, 23.325 real sec
[0000] Calling mem_process_seqs.., task: 1327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516621, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 661, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2926)
[0000][PE] mean and std.dev: (792.65, 685.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (944, 1233, 1904)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1252.87, 528.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 412.841 CPU sec, 23.127 real sec
[0000] Calling mem_process_seqs.., task: 1328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516391, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 355, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2324)
[0000][PE] mean and std.dev: (511.19, 476.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1138, 1790, 4403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10933)
[0000][PE] mean and std.dev: (2792.50, 2755.97)
[0000][PE] low and high boundaries for proper pairs: (1, 14198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 416.987 CPU sec, 23.385 real sec
[0000] Calling mem_process_seqs.., task: 1329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516407, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (502, 1422, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7201)
[0000][PE] mean and std.dev: (1661.44, 1709.20)
[0000][PE] low and high boundaries for proper pairs: (1, 9434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1338, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3836)
[0000][PE] mean and std.dev: (1394.47, 576.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 412.216 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 1330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516496, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 727, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (758.78, 554.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 1082, 1640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3360)
[0000][PE] mean and std.dev: (1133.88, 626.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 412.252 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 1331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516606, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 951, 2957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8187)
[0000][PE] mean and std.dev: (1576.39, 1549.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1169, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3647)
[0000][PE] mean and std.dev: (1194.62, 563.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 415.698 CPU sec, 23.335 real sec
[0000] Calling mem_process_seqs.., task: 1332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516387, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 356, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (674.85, 676.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (926, 1081, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3380)
[0000][PE] mean and std.dev: (1219.67, 620.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4198)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 414.257 CPU sec, 23.212 real sec
[0000] Calling mem_process_seqs.., task: 1333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516480, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 734, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2545)
[0000][PE] mean and std.dev: (710.92, 425.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (609, 1140, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4053)
[0000][PE] mean and std.dev: (1151.15, 709.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 412.625 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 1334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516659, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 807, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3162)
[0000][PE] mean and std.dev: (765.32, 663.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1276, 1551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2701)
[0000][PE] mean and std.dev: (1152.00, 435.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 414.821 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 1335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206574
	[0000][ M::kt_pipeline] read 1206574 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516126, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 690, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3922)
[0000][PE] mean and std.dev: (743.56, 581.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (925, 1530, 2228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4834)
[0000][PE] mean and std.dev: (1631.55, 973.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 413.175 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 1336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516466, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 511, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (909.88, 900.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1250, 2230, 3242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7226)
[0000][PE] mean and std.dev: (2227.59, 1094.65)
[0000][PE] low and high boundaries for proper pairs: (1, 9218)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206574 reads in 414.798 CPU sec, 23.268 real sec
[0000] Calling mem_process_seqs.., task: 1337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206224
	[0000][ M::kt_pipeline] read 1206224 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516179, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 656, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (789.50, 686.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1213, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3506)
[0000][PE] mean and std.dev: (1109.78, 632.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 414.761 CPU sec, 23.272 real sec
[0000] Calling mem_process_seqs.., task: 1338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516718, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 532, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (682.68, 597.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 980, 2555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1816.38, 1660.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206224 reads in 413.336 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 1339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516269, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 917, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5973)
[0000][PE] mean and std.dev: (1466.08, 1433.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1198, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1515.90, 1103.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 417.779 CPU sec, 23.451 real sec
[0000] Calling mem_process_seqs.., task: 1340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516481, 9, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 611, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1280.06, 1362.83)
[0000][PE] low and high boundaries for proper pairs: (1, 6912)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1484, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (1333.47, 629.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 420.970 CPU sec, 23.654 real sec
[0000] Calling mem_process_seqs.., task: 1341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516576, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 938, 2482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6640)
[0000][PE] mean and std.dev: (1404.75, 1136.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1633, 3556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9056)
[0000][PE] mean and std.dev: (1899.82, 1329.11)
[0000][PE] low and high boundaries for proper pairs: (1, 11806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 411.385 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 1342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516681, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 1005, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4891)
[0000][PE] mean and std.dev: (1134.75, 781.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1389, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5092)
[0000][PE] mean and std.dev: (1528.64, 973.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 412.715 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 1343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517078, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 778, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3842)
[0000][PE] mean and std.dev: (1133.27, 1051.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1115, 1298, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (1302.33, 465.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 410.308 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 1344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516611, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 939, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3971)
[0000][PE] mean and std.dev: (1199.89, 1009.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1329, 1867, 2581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5085)
[0000][PE] mean and std.dev: (1876.44, 756.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 412.776 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 1345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516502, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 692, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (922.85, 927.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (884, 1267, 2545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5867)
[0000][PE] mean and std.dev: (1613.87, 1363.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 413.691 CPU sec, 23.190 real sec
[0000] Calling mem_process_seqs.., task: 1346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516221, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 488, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (749.85, 754.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 1582, 2373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6091)
[0000][PE] mean and std.dev: (1548.65, 1121.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 414.514 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 1347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516726, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 903, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4058)
[0000][PE] mean and std.dev: (944.72, 760.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5319)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (838, 1630, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1713.47, 1262.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 412.378 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 1348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516006, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 621, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5513)
[0000][PE] mean and std.dev: (1102.60, 1179.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1483, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (1293.14, 565.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 414.270 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 1349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516197, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 298, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (659.35, 780.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1510, 2646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6288)
[0000][PE] mean and std.dev: (1929.75, 1674.84)
[0000][PE] low and high boundaries for proper pairs: (1, 8629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 415.805 CPU sec, 23.322 real sec
[0000] Calling mem_process_seqs.., task: 1350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516994, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 402, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4663)
[0000][PE] mean and std.dev: (986.35, 953.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1896, 2842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6346)
[0000][PE] mean and std.dev: (2079.78, 1308.60)
[0000][PE] low and high boundaries for proper pairs: (1, 8098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 412.977 CPU sec, 23.187 real sec
[0000] Calling mem_process_seqs.., task: 1351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516405, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 792, 1505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (983.67, 758.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1391, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6006)
[0000][PE] mean and std.dev: (1705.92, 1195.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7698)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 412.063 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 1352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517275, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 1034, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (976.27, 771.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (906, 1662, 3064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7380)
[0000][PE] mean and std.dev: (1740.80, 1077.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9538)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 412.410 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 1353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516383, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 477, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (654.29, 607.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1154, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2970)
[0000][PE] mean and std.dev: (1131.14, 435.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 415.198 CPU sec, 23.261 real sec
[0000] Calling mem_process_seqs.., task: 1354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516601, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 615, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (819.22, 909.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1563, 2663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6053)
[0000][PE] mean and std.dev: (1555.62, 844.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 414.305 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 1355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516020, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 367, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5334)
[0000][PE] mean and std.dev: (967.75, 1083.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1009, 1523, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (1420.24, 739.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 415.426 CPU sec, 23.304 real sec
[0000] Calling mem_process_seqs.., task: 1356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516521, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 732, 1699)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4477)
[0000][PE] mean and std.dev: (837.06, 836.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1195, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7393)
[0000][PE] mean and std.dev: (1781.84, 1403.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 413.797 CPU sec, 23.175 real sec
[0000] Calling mem_process_seqs.., task: 1357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516405, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 854, 1465)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3821)
[0000][PE] mean and std.dev: (905.50, 733.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.24, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (770, 1076, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3242)
[0000][PE] mean and std.dev: (1233.33, 745.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4216)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 415.111 CPU sec, 23.258 real sec
[0000] Calling mem_process_seqs.., task: 1358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516455, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 759, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (860.05, 716.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1465, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5994)
[0000][PE] mean and std.dev: (1871.45, 1258.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 413.910 CPU sec, 23.223 real sec
[0000] Calling mem_process_seqs.., task: 1359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516563, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 819, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (913.12, 651.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.36, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1192, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5909)
[0000][PE] mean and std.dev: (1438.61, 1253.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7668)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 415.598 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 1360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516437, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 572, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3262)
[0000][PE] mean and std.dev: (768.88, 721.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1407, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (1291.00, 556.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 413.774 CPU sec, 23.182 real sec
[0000] Calling mem_process_seqs.., task: 1361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516034, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 919, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (955.42, 691.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4292)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1177, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2828)
[0000][PE] mean and std.dev: (1155.60, 500.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 414.004 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 1362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516657, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1002, 1294, 2403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1385.11, 821.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (849, 1522, 4334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11304)
[0000][PE] mean and std.dev: (2588.00, 2447.39)
[0000][PE] low and high boundaries for proper pairs: (1, 14789)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 410.775 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 1363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516626, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 870, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4897)
[0000][PE] mean and std.dev: (1112.12, 1101.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1520, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4844)
[0000][PE] mean and std.dev: (1465.71, 736.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 415.081 CPU sec, 23.287 real sec
[0000] Calling mem_process_seqs.., task: 1364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516475, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 735, 1635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1101.23, 1085.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5514)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1356, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1224.40, 892.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 412.928 CPU sec, 23.156 real sec
[0000] Calling mem_process_seqs.., task: 1365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516225, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 395, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3128)
[0000][PE] mean and std.dev: (710.81, 652.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 413.743 CPU sec, 23.207 real sec
[0000] Calling mem_process_seqs.., task: 1366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516590, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 920, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4704)
[0000][PE] mean and std.dev: (941.46, 769.88)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (990, 1425, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5979)
[0000][PE] mean and std.dev: (1533.59, 950.58)
[0000][PE] low and high boundaries for proper pairs: (1, 7642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 412.283 CPU sec, 23.131 real sec
[0000] Calling mem_process_seqs.., task: 1367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516761, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 596, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (653.57, 525.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1377, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1421.86, 952.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 411.806 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 1368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (39, 516820, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 721, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5558)
[0000][PE] mean and std.dev: (1226.62, 1178.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (744, 1323, 3460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8892)
[0000][PE] mean and std.dev: (1877.52, 1610.43)
[0000][PE] low and high boundaries for proper pairs: (1, 11608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 415.338 CPU sec, 23.301 real sec
[0000] Calling mem_process_seqs.., task: 1369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516589, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 735, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4066)
[0000][PE] mean and std.dev: (825.30, 631.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1706, 3651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8859)
[0000][PE] mean and std.dev: (2344.25, 2063.21)
[0000][PE] low and high boundaries for proper pairs: (1, 11463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 411.854 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 1370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516718, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 645, 2453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1345.95, 1573.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1072, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (1100.81, 611.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 412.020 CPU sec, 23.057 real sec
[0000] Calling mem_process_seqs.., task: 1371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516505, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 1008, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (819.17, 574.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1231, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (1249.53, 554.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 415.877 CPU sec, 23.299 real sec
[0000] Calling mem_process_seqs.., task: 1372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515823, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 616, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2776)
[0000][PE] mean and std.dev: (772.28, 659.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3602)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1344, 1850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (1450.52, 656.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 416.262 CPU sec, 23.342 real sec
[0000] Calling mem_process_seqs.., task: 1373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516864, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 542, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (960.09, 947.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (561, 1413, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (1618.35, 1156.44)
[0000][PE] low and high boundaries for proper pairs: (1, 8281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 419.765 CPU sec, 23.572 real sec
[0000] Calling mem_process_seqs.., task: 1374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516964, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 620, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (768.73, 699.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4130)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 1055, 2092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5460)
[0000][PE] mean and std.dev: (1377.92, 1325.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 413.509 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 1375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516403, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 812, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (953.24, 791.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1307, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1342.33, 555.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 415.370 CPU sec, 23.272 real sec
[0000] Calling mem_process_seqs.., task: 1376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516214, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 1280, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7285)
[0000][PE] mean and std.dev: (1681.91, 1671.11)
[0000][PE] low and high boundaries for proper pairs: (1, 9589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1447, 3303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7999)
[0000][PE] mean and std.dev: (1918.93, 1436.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 416.146 CPU sec, 23.344 real sec
[0000] Calling mem_process_seqs.., task: 1377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516535, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (534, 1061, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6015)
[0000][PE] mean and std.dev: (1348.25, 1014.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1474, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1618.96, 892.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 411.291 CPU sec, 23.052 real sec
[0000] Calling mem_process_seqs.., task: 1378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516965, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 772, 1300)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3330)
[0000][PE] mean and std.dev: (791.05, 662.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (896, 1280, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4124)
[0000][PE] mean and std.dev: (1260.75, 668.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 409.658 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 1379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 516569, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1052, 1473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3809)
[0000][PE] mean and std.dev: (828.00, 503.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1241, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4078)
[0000][PE] mean and std.dev: (1290.38, 728.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 410.267 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 1380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516386, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 996, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (1070.42, 993.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 1550, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1689.46, 1069.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 415.052 CPU sec, 23.282 real sec
[0000] Calling mem_process_seqs.., task: 1381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516596, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 662, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2914)
[0000][PE] mean and std.dev: (705.75, 496.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1501, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3355)
[0000][PE] mean and std.dev: (1470.42, 515.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 411.062 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 1382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516709, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 773, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2614)
[0000][PE] mean and std.dev: (723.82, 581.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1183, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (1125.00, 683.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 412.165 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 1383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516993, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 575, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3303)
[0000][PE] mean and std.dev: (776.90, 683.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (567, 1111, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (1073.65, 628.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 413.275 CPU sec, 23.185 real sec
[0000] Calling mem_process_seqs.., task: 1384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516550, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 309, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4868)
[0000][PE] mean and std.dev: (881.71, 984.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1116, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3843)
[0000][PE] mean and std.dev: (1272.60, 887.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4883)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 409.922 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 1385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516550, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 1093, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4546)
[0000][PE] mean and std.dev: (1260.50, 1127.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1241, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4526)
[0000][PE] mean and std.dev: (1686.30, 1010.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 413.901 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 1386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516500, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 649, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3953)
[0000][PE] mean and std.dev: (931.46, 860.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5196)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1278, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2910)
[0000][PE] mean and std.dev: (1241.92, 465.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 413.790 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 1387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516381, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 524, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (798.28, 694.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (628, 1263, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3955)
[0000][PE] mean and std.dev: (1065.62, 648.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 413.021 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 1388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516575, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 736, 1583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4161)
[0000][PE] mean and std.dev: (772.19, 614.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 1332, 1870)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (1338.76, 788.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 411.715 CPU sec, 23.065 real sec
[0000] Calling mem_process_seqs.., task: 1389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516629, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 437, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (558.61, 393.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1385, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3465)
[0000][PE] mean and std.dev: (1097.46, 582.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 411.343 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516032, 7, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 644, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3629)
[0000][PE] mean and std.dev: (721.32, 654.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.58, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1108, 1341, 1989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3751)
[0000][PE] mean and std.dev: (1395.61, 522.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 412.323 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 1391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516121, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 653, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3594)
[0000][PE] mean and std.dev: (831.82, 647.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1436, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (1235.96, 740.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 414.012 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 1392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516738, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 715, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (951.48, 895.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1295, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (1285.68, 595.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 412.580 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 1393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515980, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 876, 1597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (1107.88, 990.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1464, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (1287.20, 512.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 413.772 CPU sec, 23.235 real sec
[0000] Calling mem_process_seqs.., task: 1394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516589, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (526, 1027, 2490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6418)
[0000][PE] mean and std.dev: (1567.46, 1413.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1262, 4247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11095)
[0000][PE] mean and std.dev: (2169.95, 2156.77)
[0000][PE] low and high boundaries for proper pairs: (1, 14519)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 407.388 CPU sec, 22.813 real sec
[0000] Calling mem_process_seqs.., task: 1395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516634, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 909, 2096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5606)
[0000][PE] mean and std.dev: (1053.18, 860.89)
[0000][PE] low and high boundaries for proper pairs: (1, 7361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1344, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (1222.00, 440.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3886)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 412.530 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 1396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516655, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (464, 958, 2388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6236)
[0000][PE] mean and std.dev: (1446.41, 1487.25)
[0000][PE] low and high boundaries for proper pairs: (1, 8160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1415, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4310)
[0000][PE] mean and std.dev: (1362.91, 849.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 408.752 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 1397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516571, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 793, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (739.17, 490.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1681, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3796)
[0000][PE] mean and std.dev: (1541.21, 462.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.889 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 1398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515977, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 520, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1058.84, 1160.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7065)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1286, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (1279.33, 551.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 414.223 CPU sec, 23.205 real sec
[0000] Calling mem_process_seqs.., task: 1399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516300, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 954, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1140.56, 1042.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.31, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 901, 2102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4952)
[0000][PE] mean and std.dev: (1304.88, 1050.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 409.753 CPU sec, 22.945 real sec
[0000] Calling mem_process_seqs.., task: 1400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516472, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 685, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (599.94, 429.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1497, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4391)
[0000][PE] mean and std.dev: (1699.53, 921.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 412.096 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 1401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516649, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (442, 1000, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (940.12, 569.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1932, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1558.25, 786.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 415.569 CPU sec, 23.283 real sec
[0000] Calling mem_process_seqs.., task: 1402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516848, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 474, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4784)
[0000][PE] mean and std.dev: (791.25, 691.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6326)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1137, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (1052.37, 490.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 413.135 CPU sec, 23.186 real sec
[0000] Calling mem_process_seqs.., task: 1403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516246, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 541, 1244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (738.70, 652.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1032, 1375, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5421)
[0000][PE] mean and std.dev: (1674.95, 792.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 415.511 CPU sec, 23.295 real sec
[0000] Calling mem_process_seqs.., task: 1404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516833, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 354, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (586.03, 621.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.70, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1074, 1569, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1480.95, 820.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 416.437 CPU sec, 23.355 real sec
[0000] Calling mem_process_seqs.., task: 1405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516432, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 816, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5447)
[0000][PE] mean and std.dev: (1267.87, 1185.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1317, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2981)
[0000][PE] mean and std.dev: (1357.68, 542.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 412.678 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 1406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516697, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 933, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (900.68, 724.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1273, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3338)
[0000][PE] mean and std.dev: (1349.10, 582.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 412.888 CPU sec, 23.119 real sec
[0000] Calling mem_process_seqs.., task: 1407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516363, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 1212, 2110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1468.52, 1442.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7399)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1261, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4350)
[0000][PE] mean and std.dev: (1443.64, 879.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 414.645 CPU sec, 23.259 real sec
[0000] Calling mem_process_seqs.., task: 1408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516612, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 447, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3876)
[0000][PE] mean and std.dev: (829.18, 798.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1490, 2928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7030)
[0000][PE] mean and std.dev: (2031.94, 1810.50)
[0000][PE] low and high boundaries for proper pairs: (1, 9274)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 412.724 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 1409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516287, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 742, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (837.06, 730.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 910, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4498)
[0000][PE] mean and std.dev: (1042.25, 641.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 414.267 CPU sec, 23.199 real sec
[0000] Calling mem_process_seqs.., task: 1410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206190
	[0000][ M::kt_pipeline] read 1206190 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516825, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1681, 3975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11237)
[0000][PE] mean and std.dev: (2168.95, 2089.47)
[0000][PE] low and high boundaries for proper pairs: (1, 14868)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1594, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4540)
[0000][PE] mean and std.dev: (1301.93, 935.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 408.100 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 1411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516347, 9, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 390, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (765.27, 734.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4388)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1338, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5908)
[0000][PE] mean and std.dev: (1939.35, 1605.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206190 reads in 411.608 CPU sec, 23.081 real sec
[0000] Calling mem_process_seqs.., task: 1412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516883, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 406, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (702.36, 637.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1030, 1656, 4110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10270)
[0000][PE] mean and std.dev: (2388.19, 2178.33)
[0000][PE] low and high boundaries for proper pairs: (1, 13350)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 415.327 CPU sec, 23.319 real sec
[0000] Calling mem_process_seqs.., task: 1413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516912, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 1106, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (912.25, 770.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5621)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1327, 1670, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1828.11, 1040.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 412.249 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 1414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516696, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 483, 1642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4400)
[0000][PE] mean and std.dev: (863.20, 769.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1147, 1484, 3036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6814)
[0000][PE] mean and std.dev: (1947.82, 1100.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 414.358 CPU sec, 23.211 real sec
[0000] Calling mem_process_seqs.., task: 1415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516495, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 513, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4628)
[0000][PE] mean and std.dev: (1119.58, 1071.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1684, 1798, 2489)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 4099)
[0000][PE] mean and std.dev: (1704.89, 439.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 409.451 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 1416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516586, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 1253, 1952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (1343.55, 1069.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 411.274 CPU sec, 23.046 real sec
[0000] Calling mem_process_seqs.., task: 1417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516359, 9, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 1535, 4156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11954)
[0000][PE] mean and std.dev: (2161.44, 2488.11)
[0000][PE] low and high boundaries for proper pairs: (1, 15853)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.59, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (706, 1134, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (1012.22, 565.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 413.564 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 1418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516596, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (724, 1189, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (1077.18, 598.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.26, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1481, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4366)
[0000][PE] mean and std.dev: (1542.56, 1032.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 409.128 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206208
	[0000][ M::kt_pipeline] read 1206208 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516448, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 481, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (749.17, 746.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1136, 1406, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5627)
[0000][PE] mean and std.dev: (1573.27, 709.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 413.146 CPU sec, 23.127 real sec
[0000] Calling mem_process_seqs.., task: 1420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206252
	[0000][ M::kt_pipeline] read 1206252 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516660, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 681, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3960)
[0000][PE] mean and std.dev: (969.18, 945.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5180)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1348, 1965, 2473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4723)
[0000][PE] mean and std.dev: (2024.73, 1098.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206208 reads in 408.325 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 1421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516653, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 781, 1754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4720)
[0000][PE] mean and std.dev: (1075.12, 916.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (878, 1291, 1991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (1316.79, 807.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206252 reads in 413.042 CPU sec, 23.174 real sec
[0000] Calling mem_process_seqs.., task: 1422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516190, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (325, 913, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5785)
[0000][PE] mean and std.dev: (1247.17, 1139.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7605)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1439, 1992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3734)
[0000][PE] mean and std.dev: (1385.56, 768.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 410.858 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516707, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (410, 779, 2910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7910)
[0000][PE] mean and std.dev: (1640.95, 1841.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1999, 3317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7319)
[0000][PE] mean and std.dev: (2587.27, 2302.48)
[0000][PE] low and high boundaries for proper pairs: (1, 11797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 413.787 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 1424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516594, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 580, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3227)
[0000][PE] mean and std.dev: (675.23, 654.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1482, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3619)
[0000][PE] mean and std.dev: (1391.33, 737.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 414.201 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 1425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516238, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 506, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (733.79, 632.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1418, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1436.55, 713.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 410.168 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 1426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516162, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 366, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (549.17, 553.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1308, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3438)
[0000][PE] mean and std.dev: (1355.83, 496.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 413.282 CPU sec, 23.163 real sec
[0000] Calling mem_process_seqs.., task: 1427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516612, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 1029, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6076)
[0000][PE] mean and std.dev: (1460.37, 1362.94)
[0000][PE] low and high boundaries for proper pairs: (1, 7948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1352, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6812)
[0000][PE] mean and std.dev: (1694.14, 1090.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 408.017 CPU sec, 22.854 real sec
[0000] Calling mem_process_seqs.., task: 1428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516629, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 625, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (923.68, 809.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5700)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.05, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (502, 1300, 2567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6697)
[0000][PE] mean and std.dev: (1418.77, 966.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 410.973 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 1429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516251, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 676, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2384)
[0000][PE] mean and std.dev: (671.52, 384.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3039)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1252, 1548, 2641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5419)
[0000][PE] mean and std.dev: (1802.45, 907.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 414.470 CPU sec, 23.240 real sec
[0000] Calling mem_process_seqs.., task: 1430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516666, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 966, 1942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4850)
[0000][PE] mean and std.dev: (1287.35, 1091.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1103, 2119, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5573)
[0000][PE] mean and std.dev: (1851.65, 1080.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 411.237 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 1431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516669, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 1152, 1766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (1274.06, 1158.30)
[0000][PE] low and high boundaries for proper pairs: (1, 6170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1434, 1765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (1292.58, 508.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 414.876 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 1432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516479, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 472, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5780)
[0000][PE] mean and std.dev: (1192.46, 1415.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1415, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1485.53, 757.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 413.199 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 1433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516786, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 1136, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3854)
[0000][PE] mean and std.dev: (1064.32, 902.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (555, 1200, 2451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6243)
[0000][PE] mean and std.dev: (1507.00, 1196.36)
[0000][PE] low and high boundaries for proper pairs: (1, 8139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 413.065 CPU sec, 23.150 real sec
[0000] Calling mem_process_seqs.., task: 1434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516732, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 528, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5833)
[0000][PE] mean and std.dev: (1267.18, 1371.52)
[0000][PE] low and high boundaries for proper pairs: (1, 7698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1776, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5712)
[0000][PE] mean and std.dev: (2078.61, 1467.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 409.556 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516187, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 858, 1385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3503)
[0000][PE] mean and std.dev: (1021.04, 890.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4585)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1159, 1730, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5167)
[0000][PE] mean and std.dev: (1928.31, 1113.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 411.037 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 1436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516423, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 590, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2595)
[0000][PE] mean and std.dev: (590.64, 467.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1173, 1388, 2721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5817)
[0000][PE] mean and std.dev: (1815.84, 990.93)
[0000][PE] low and high boundaries for proper pairs: (1, 7365)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 413.485 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 1437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516322, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 582, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (737.09, 630.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 411.758 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 1438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516673, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (372, 998, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3963)
[0000][PE] mean and std.dev: (953.41, 635.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1460, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (2, 2657)
[0000][PE] mean and std.dev: (1271.31, 355.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 413.738 CPU sec, 23.152 real sec
[0000] Calling mem_process_seqs.., task: 1439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516872, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 458, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3500)
[0000][PE] mean and std.dev: (735.96, 640.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1339, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (1320.82, 703.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 412.412 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 1440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517116, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 729, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3253)
[0000][PE] mean and std.dev: (807.67, 683.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1560, 2566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5706)
[0000][PE] mean and std.dev: (1713.25, 979.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 410.170 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 1441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516427, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 606, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (851.92, 661.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1472, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (1410.26, 568.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.186 CPU sec, 22.979 real sec
[0000] Calling mem_process_seqs.., task: 1442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516632, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 823, 2189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5885)
[0000][PE] mean and std.dev: (1108.52, 1046.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.41, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (747, 1381, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5268)
[0000][PE] mean and std.dev: (1638.04, 1130.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 410.327 CPU sec, 23.007 real sec
[0000] Calling mem_process_seqs.., task: 1443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516300, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (707, 1144, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5789)
[0000][PE] mean and std.dev: (1592.00, 1307.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1383, 1845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3617)
[0000][PE] mean and std.dev: (1302.59, 714.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 411.343 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 1444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516733, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 789, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3305)
[0000][PE] mean and std.dev: (896.19, 718.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4291)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1497, 1801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1366.58, 684.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 414.895 CPU sec, 23.265 real sec
[0000] Calling mem_process_seqs.., task: 1445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516082, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 435, 1591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (934.76, 1066.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (745, 1352, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4534)
[0000][PE] mean and std.dev: (1547.44, 973.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 412.657 CPU sec, 23.146 real sec
[0000] Calling mem_process_seqs.., task: 1446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515923, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 616, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4795)
[0000][PE] mean and std.dev: (1149.28, 1197.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1567, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1367.46, 362.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 416.223 CPU sec, 23.312 real sec
[0000] Calling mem_process_seqs.., task: 1447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516203, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 596, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3160)
[0000][PE] mean and std.dev: (672.81, 545.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1801, 2142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4456)
[0000][PE] mean and std.dev: (1540.25, 767.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 413.481 CPU sec, 23.172 real sec
[0000] Calling mem_process_seqs.., task: 1448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516890, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 377, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (645.26, 524.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 113.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 970, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3138)
[0000][PE] mean and std.dev: (922.62, 374.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3906)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 412.997 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 1449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516778, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 841, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4791)
[0000][PE] mean and std.dev: (1106.41, 1013.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1615, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4171)
[0000][PE] mean and std.dev: (1548.38, 758.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 412.183 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 1450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516435, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 706, 1499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (927.75, 837.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (657, 1192, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (1120.65, 664.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 409.597 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 1451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516423, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (484, 1000, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1294.33, 1115.99)
[0000][PE] low and high boundaries for proper pairs: (1, 7188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1306, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4906)
[0000][PE] mean and std.dev: (1686.00, 1028.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 411.068 CPU sec, 23.027 real sec
[0000] Calling mem_process_seqs.., task: 1452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516462, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (438, 733, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (947.26, 641.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1124, 1582, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3773)
[0000][PE] mean and std.dev: (1320.23, 445.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 409.925 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 1453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516730, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 356, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4303)
[0000][PE] mean and std.dev: (741.92, 666.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (517, 1379, 2936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7774)
[0000][PE] mean and std.dev: (1673.54, 1255.31)
[0000][PE] low and high boundaries for proper pairs: (1, 10193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 409.512 CPU sec, 22.934 real sec
[0000] Calling mem_process_seqs.., task: 1454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516283, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 790, 1258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (915.81, 673.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3823)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.01, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1163, 1401, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (413, 2288)
[0000][PE] mean and std.dev: (1345.21, 370.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 411.607 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 1455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516763, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 808, 1883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4965)
[0000][PE] mean and std.dev: (821.78, 655.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1651, 3142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7514)
[0000][PE] mean and std.dev: (1943.90, 1292.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 409.506 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 1456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516838, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 615, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2723)
[0000][PE] mean and std.dev: (748.92, 655.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1292, 2155, 3055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (2294.56, 1224.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 409.274 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 1457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516436, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 589, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (862.78, 924.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1136, 2880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7180)
[0000][PE] mean and std.dev: (1767.76, 1573.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 408.891 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 1458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516698, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 313, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1136)
[0000][PE] mean and std.dev: (251.40, 136.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1465)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1379, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1735.84, 1174.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 411.215 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 1459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516283, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 993, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4550)
[0000][PE] mean and std.dev: (1153.04, 976.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.59, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1060, 1615, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4864)
[0000][PE] mean and std.dev: (1598.95, 949.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 410.963 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 1460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516301, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 400, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3449)
[0000][PE] mean and std.dev: (729.77, 651.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1108, 2128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4586)
[0000][PE] mean and std.dev: (1268.60, 781.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 411.007 CPU sec, 23.011 real sec
[0000] Calling mem_process_seqs.., task: 1461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516542, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 1151, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6932)
[0000][PE] mean and std.dev: (1385.95, 1343.36)
[0000][PE] low and high boundaries for proper pairs: (1, 9154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1396, 2844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6620)
[0000][PE] mean and std.dev: (1842.00, 1148.04)
[0000][PE] low and high boundaries for proper pairs: (1, 8508)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 412.777 CPU sec, 23.121 real sec
[0000] Calling mem_process_seqs.., task: 1462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206274
	[0000][ M::kt_pipeline] read 1206274 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516662, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 573, 1927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (832.00, 841.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1178, 1556, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (1426.84, 588.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 410.936 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 1463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516811, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 550, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4286)
[0000][PE] mean and std.dev: (1068.43, 986.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1262, 3907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9923)
[0000][PE] mean and std.dev: (1896.52, 1653.04)
[0000][PE] low and high boundaries for proper pairs: (1, 12931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206274 reads in 409.234 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516677, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 1192, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1060.12, 1002.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (951, 2040, 2740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1968.32, 1166.20)
[0000][PE] low and high boundaries for proper pairs: (1, 8107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 410.321 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 1465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516297, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 1206, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7391)
[0000][PE] mean and std.dev: (1492.67, 1599.49)
[0000][PE] low and high boundaries for proper pairs: (1, 9757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1537, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4194)
[0000][PE] mean and std.dev: (1345.86, 735.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 410.504 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516740, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 661, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (935.48, 871.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1515, 2613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6323)
[0000][PE] mean and std.dev: (1739.43, 1085.22)
[0000][PE] low and high boundaries for proper pairs: (1, 8178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 413.029 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 1467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516871, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 715, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4520)
[0000][PE] mean and std.dev: (853.21, 655.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1493, 1839, 2730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5204)
[0000][PE] mean and std.dev: (1712.71, 1004.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 410.250 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 515745, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 915, 2079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5527)
[0000][PE] mean and std.dev: (1355.19, 1402.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (772, 1636, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6712)
[0000][PE] mean and std.dev: (1734.64, 1239.28)
[0000][PE] low and high boundaries for proper pairs: (1, 8692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 414.660 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 1469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516014, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 429, 1467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (837.30, 941.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5457)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (521, 755, 2799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7355)
[0000][PE] mean and std.dev: (1470.55, 1360.57)
[0000][PE] low and high boundaries for proper pairs: (1, 9633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 411.845 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 1470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517027, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 956, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (1113.92, 939.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.28, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1428, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4787)
[0000][PE] mean and std.dev: (1662.09, 859.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 408.217 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 1471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516491, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 685, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4094)
[0000][PE] mean and std.dev: (840.87, 831.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 410.667 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 1472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206216
	[0000][ M::kt_pipeline] read 1206216 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516550, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 539, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2490)
[0000][PE] mean and std.dev: (515.33, 388.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (781, 1230, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5911)
[0000][PE] mean and std.dev: (1446.73, 979.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7621)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 410.852 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516419, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 717, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5536)
[0000][PE] mean and std.dev: (944.67, 776.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1161, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5571)
[0000][PE] mean and std.dev: (1421.92, 745.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206216 reads in 410.701 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 1474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516496, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 558, 1739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (864.00, 780.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (866, 1754, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6731)
[0000][PE] mean and std.dev: (1693.62, 1040.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 411.119 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 1475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516342, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 494, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5206)
[0000][PE] mean and std.dev: (1079.00, 1004.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1211, 1410, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (1499.22, 622.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4107)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 412.735 CPU sec, 23.091 real sec
[0000] Calling mem_process_seqs.., task: 1476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516572, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1339, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4910)
[0000][PE] mean and std.dev: (1247.69, 869.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6370)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1122, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (1248.53, 748.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4400)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 408.789 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 1477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516537, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 797, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3682)
[0000][PE] mean and std.dev: (874.04, 719.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (147, 1067, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (902.40, 589.89)
[0000][PE] low and high boundaries for proper pairs: (1, 5039)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (995, 1208, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5201)
[0000][PE] mean and std.dev: (1604.35, 827.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 413.504 CPU sec, 23.158 real sec
[0000] Calling mem_process_seqs.., task: 1478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516595, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 765, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4052)
[0000][PE] mean and std.dev: (898.37, 820.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1476, 2035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1367.71, 815.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 409.852 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 1479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516124, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (424, 1046, 2219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5809)
[0000][PE] mean and std.dev: (1385.37, 1308.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7604)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (834, 939, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5310)
[0000][PE] mean and std.dev: (1364.55, 855.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 411.328 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516624, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 882, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (946.28, 680.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (794, 1362, 2360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5492)
[0000][PE] mean and std.dev: (1329.86, 1110.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 408.712 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516243, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 796, 1661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (1001.50, 806.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1433, 3366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8276)
[0000][PE] mean and std.dev: (1810.67, 1315.75)
[0000][PE] low and high boundaries for proper pairs: (1, 10731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 412.521 CPU sec, 23.161 real sec
[0000] Calling mem_process_seqs.., task: 1482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516550, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 651, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3375)
[0000][PE] mean and std.dev: (871.88, 722.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4398)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1311, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (1272.79, 641.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 412.805 CPU sec, 23.115 real sec
[0000] Calling mem_process_seqs.., task: 1483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206198
	[0000][ M::kt_pipeline] read 1206198 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516508, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (542, 1171, 2245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5651)
[0000][PE] mean and std.dev: (1499.25, 1313.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1498, 2307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (1362.82, 698.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 409.196 CPU sec, 22.915 real sec
[0000] Calling mem_process_seqs.., task: 1484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516319, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 746, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (896.95, 787.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4364)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.41, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1970, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5121)
[0000][PE] mean and std.dev: (1684.80, 798.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206198 reads in 412.168 CPU sec, 23.072 real sec
[0000] Calling mem_process_seqs.., task: 1485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206640
	[0000][ M::kt_pipeline] read 1206640 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516669, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 824, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (885.88, 666.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (830, 1047, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1011.71, 522.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3794)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 412.980 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 1486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516128, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1091, 1787, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (1656.57, 1201.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1258, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2950)
[0000][PE] mean and std.dev: (1170.59, 696.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206640 reads in 412.030 CPU sec, 23.090 real sec
[0000] Calling mem_process_seqs.., task: 1487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516752, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 851, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4384)
[0000][PE] mean and std.dev: (1039.31, 1043.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1654, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5162)
[0000][PE] mean and std.dev: (1660.70, 1025.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 409.959 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 1488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516108, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 877, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6017)
[0000][PE] mean and std.dev: (1165.29, 1216.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7935)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1216, 1908, 2483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5017)
[0000][PE] mean and std.dev: (1705.67, 812.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6284)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 413.386 CPU sec, 23.184 real sec
[0000] Calling mem_process_seqs.., task: 1489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516991, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 537, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (940.08, 960.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.39, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1549, 1962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3928)
[0000][PE] mean and std.dev: (1554.75, 916.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 409.329 CPU sec, 22.926 real sec
[0000] Calling mem_process_seqs.., task: 1490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516163, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 493, 1377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (800.48, 696.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (478, 1279, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4408)
[0000][PE] mean and std.dev: (1165.57, 789.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 412.908 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 1491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516251, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 633, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3981)
[0000][PE] mean and std.dev: (906.11, 782.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1529, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3937)
[0000][PE] mean and std.dev: (1600.00, 818.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 413.674 CPU sec, 23.192 real sec
[0000] Calling mem_process_seqs.., task: 1492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516704, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1196, 1802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (1004.80, 762.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5903)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1052, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (1349.33, 866.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 412.453 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 1493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516633, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 676, 2073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5731)
[0000][PE] mean and std.dev: (1195.21, 1404.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1700, 3008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6798)
[0000][PE] mean and std.dev: (2085.85, 1614.97)
[0000][PE] low and high boundaries for proper pairs: (1, 8693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 412.744 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 1494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516366, 5, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 341, 1035)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (548.74, 427.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1144, 2078)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4532)
[0000][PE] mean and std.dev: (1405.11, 930.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 410.937 CPU sec, 23.067 real sec
[0000] Calling mem_process_seqs.., task: 1495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000192, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516387, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (441, 1059, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5922)
[0000][PE] mean and std.dev: (1413.46, 1412.87)
[0000][PE] low and high boundaries for proper pairs: (1, 7749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1443, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4270)
[0000][PE] mean and std.dev: (1526.75, 921.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 409.372 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 1496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516938, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (693, 1188, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3978)
[0000][PE] mean and std.dev: (1208.31, 976.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1762, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4817)
[0000][PE] mean and std.dev: (1911.70, 1104.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 406.584 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516201, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 786, 1192)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (692.77, 377.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1168, 1418, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1590.15, 824.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 411.119 CPU sec, 23.012 real sec
[0000] Calling mem_process_seqs.., task: 1498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516830, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 631, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (667.09, 491.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1142, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3352)
[0000][PE] mean and std.dev: (1193.17, 624.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 410.748 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 1499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516642, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 1097, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6646)
[0000][PE] mean and std.dev: (1684.06, 1651.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1600, 2891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6301)
[0000][PE] mean and std.dev: (1812.61, 1157.57)
[0000][PE] low and high boundaries for proper pairs: (1, 8006)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 409.615 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516383, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 798, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4099)
[0000][PE] mean and std.dev: (961.65, 916.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1450, 2368, 3031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6193)
[0000][PE] mean and std.dev: (2126.77, 848.59)
[0000][PE] low and high boundaries for proper pairs: (1, 7774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 409.887 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 1501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516527, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 363, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2705)
[0000][PE] mean and std.dev: (587.71, 578.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (773, 1375, 2821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6917)
[0000][PE] mean and std.dev: (1552.25, 1161.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 410.380 CPU sec, 22.974 real sec
[0000] Calling mem_process_seqs.., task: 1502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206584
	[0000][ M::kt_pipeline] read 1206584 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516381, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 756, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4633)
[0000][PE] mean and std.dev: (1103.12, 1113.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (923, 1177, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1477.00, 941.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6119)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 409.355 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206584
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516539, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1150, 1421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3625)
[0000][PE] mean and std.dev: (912.80, 617.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4727)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 1302, 2169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5239)
[0000][PE] mean and std.dev: (1486.94, 1205.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6774)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206584 reads in 412.119 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 1504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516782, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 368, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4614)
[0000][PE] mean and std.dev: (897.21, 867.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6058)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1002, 1348, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3408)
[0000][PE] mean and std.dev: (1215.29, 505.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4210)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 408.157 CPU sec, 22.859 real sec
[0000] Calling mem_process_seqs.., task: 1505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517120, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 941, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1198.83, 1069.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 1154, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (1164.86, 577.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3669)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 406.838 CPU sec, 22.801 real sec
[0000] Calling mem_process_seqs.., task: 1506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516635, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 990, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4841)
[0000][PE] mean and std.dev: (925.95, 781.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1876, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4495)
[0000][PE] mean and std.dev: (1936.67, 1010.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 409.184 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 1507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516305, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 466, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6180)
[0000][PE] mean and std.dev: (1045.92, 1127.70)
[0000][PE] low and high boundaries for proper pairs: (1, 8155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1355, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3675)
[0000][PE] mean and std.dev: (1377.40, 716.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4595)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 409.859 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 1508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516341, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 569, 1371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (914.00, 787.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 2115, 3158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8004)
[0000][PE] mean and std.dev: (1816.87, 1282.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 410.654 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 1509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516399, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 726, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3372)
[0000][PE] mean and std.dev: (964.41, 829.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1142, 1304, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (1373.37, 552.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 408.486 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 1510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516647, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (313, 772, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4411)
[0000][PE] mean and std.dev: (990.09, 1063.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (877, 1454, 1930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1328.79, 830.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 407.915 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 1511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516163, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 366, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3140)
[0000][PE] mean and std.dev: (754.08, 848.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4148)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1456, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1662.47, 980.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 413.479 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 1512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516666, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 583, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (908.43, 950.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5622)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.00, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1061, 1163, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (1332.09, 615.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 410.062 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 1513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516124, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 618, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5163)
[0000][PE] mean and std.dev: (1083.57, 1072.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1336, 3772)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9472)
[0000][PE] mean and std.dev: (2144.80, 1885.02)
[0000][PE] low and high boundaries for proper pairs: (1, 12322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 412.314 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 1514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516067, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (478, 1377, 2182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5590)
[0000][PE] mean and std.dev: (1571.85, 1296.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1162, 1512, 4550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11326)
[0000][PE] mean and std.dev: (2395.58, 1917.79)
[0000][PE] low and high boundaries for proper pairs: (1, 14714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 410.930 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 1515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516822, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 1018, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (949.53, 862.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (803, 1382, 1947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4235)
[0000][PE] mean and std.dev: (1327.00, 550.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 404.120 CPU sec, 22.621 real sec
[0000] Calling mem_process_seqs.., task: 1516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516963, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (766, 1284, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (1193.14, 610.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1927, 2521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5515)
[0000][PE] mean and std.dev: (1671.30, 856.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 409.687 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516457, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 1628, 3895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10693)
[0000][PE] mean and std.dev: (2091.39, 1850.32)
[0000][PE] low and high boundaries for proper pairs: (1, 14092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 2081, 4668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11684)
[0000][PE] mean and std.dev: (2589.18, 1746.00)
[0000][PE] low and high boundaries for proper pairs: (1, 15192)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 413.348 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 1518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516336, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 466, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4082)
[0000][PE] mean and std.dev: (918.45, 796.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5371)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1031, 1751, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4892)
[0000][PE] mean and std.dev: (1746.94, 1033.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 412.456 CPU sec, 23.081 real sec
[0000] Calling mem_process_seqs.., task: 1519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516743, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 385, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (544.33, 423.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1709, 2737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5961)
[0000][PE] mean and std.dev: (1746.29, 842.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 412.034 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 1520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516935, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 978, 1338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3410)
[0000][PE] mean and std.dev: (933.65, 836.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1260, 1897, 3543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8109)
[0000][PE] mean and std.dev: (2214.11, 1393.54)
[0000][PE] low and high boundaries for proper pairs: (1, 10392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 410.420 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 1521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516799, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 388, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (624.46, 471.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3673)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1070, 1419, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (1497.31, 736.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 407.928 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 1522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516454, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 920, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4693)
[0000][PE] mean and std.dev: (1072.26, 730.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1389, 2007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1224.81, 590.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5202)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 409.278 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 1523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516339, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 503, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3278)
[0000][PE] mean and std.dev: (748.38, 608.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1284, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2990)
[0000][PE] mean and std.dev: (1133.88, 471.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 409.996 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516450, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 658, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4755)
[0000][PE] mean and std.dev: (1113.65, 1000.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1278, 1926, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (1808.89, 946.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 412.276 CPU sec, 23.106 real sec
[0000] Calling mem_process_seqs.., task: 1525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516691, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 532, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6679)
[0000][PE] mean and std.dev: (1200.94, 1482.76)
[0000][PE] low and high boundaries for proper pairs: (1, 8813)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (429, 927, 2341)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6165)
[0000][PE] mean and std.dev: (1320.69, 1012.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 413.255 CPU sec, 23.166 real sec
[0000] Calling mem_process_seqs.., task: 1526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516468, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (778, 1246, 2138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4858)
[0000][PE] mean and std.dev: (1518.67, 1065.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1244, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (1251.30, 711.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 413.127 CPU sec, 23.137 real sec
[0000] Calling mem_process_seqs.., task: 1527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516523, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 384, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (762.12, 885.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (960, 1311, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1435.62, 873.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6204)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 412.091 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 1528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516148, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 435, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3789)
[0000][PE] mean and std.dev: (746.46, 749.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4944)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (559, 1385, 2060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5062)
[0000][PE] mean and std.dev: (1382.93, 749.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 412.053 CPU sec, 23.056 real sec
[0000] Calling mem_process_seqs.., task: 1529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516430, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 1064, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (961.86, 626.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (620, 899, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1229.00, 956.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 411.522 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 1530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516581, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 1201, 1522)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (1027.38, 924.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1037, 1360, 1981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1373.48, 799.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 411.883 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 1531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516417, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 447, 1529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (956.73, 969.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1300, 1863, 2956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6268)
[0000][PE] mean and std.dev: (1765.50, 1114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 7924)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 408.108 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516248, 9, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (471, 1047, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3117)
[0000][PE] mean and std.dev: (977.27, 612.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3999)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1010, 1391, 2455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1599.55, 980.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 411.805 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 1533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516403, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 942, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1083.87, 989.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (999, 1608, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1379.50, 625.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 411.980 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 1534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516600, 6, 35)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 422, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2467)
[0000][PE] mean and std.dev: (558.65, 458.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1347, 1889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3793)
[0000][PE] mean and std.dev: (1407.24, 838.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 411.591 CPU sec, 23.101 real sec
[0000] Calling mem_process_seqs.., task: 1535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 517217, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 962, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5243)
[0000][PE] mean and std.dev: (1177.63, 1142.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (490, 1496, 2523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6589)
[0000][PE] mean and std.dev: (1519.87, 1045.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 406.928 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 1536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206216
	[0000][ M::kt_pipeline] read 1206216 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516942, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 958, 2512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7046)
[0000][PE] mean and std.dev: (1258.96, 1378.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.539 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 1537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516443, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 497, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (679.82, 604.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1761, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (1425.46, 766.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206216 reads in 409.581 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517197, 8, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 1095, 1506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3812)
[0000][PE] mean and std.dev: (937.38, 639.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1117, 1649, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5275)
[0000][PE] mean and std.dev: (1710.33, 1054.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 408.419 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 1539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516270, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 436, 1657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (814.73, 890.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1595, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5159)
[0000][PE] mean and std.dev: (1716.95, 948.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 409.447 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 1540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516610, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 313, 603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1475)
[0000][PE] mean and std.dev: (381.43, 334.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1911)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1289, 1519, 1906)
[0000][PE] low and high boundaries for computing mean and std.dev: (55, 3140)
[0000][PE] mean and std.dev: (1577.92, 585.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 410.406 CPU sec, 22.990 real sec
[0000] Calling mem_process_seqs.., task: 1541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206250
	[0000][ M::kt_pipeline] read 1206250 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516822, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 689, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (775.45, 654.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1541, 3201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7525)
[0000][PE] mean and std.dev: (2012.86, 1389.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9687)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 408.770 CPU sec, 22.929 real sec
[0000] Calling mem_process_seqs.., task: 1542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516694, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 873, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3912)
[0000][PE] mean and std.dev: (1041.27, 865.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5104)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1727, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5215)
[0000][PE] mean and std.dev: (1604.25, 1029.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206250 reads in 407.400 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 517111, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1164, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7622)
[0000][PE] mean and std.dev: (1452.96, 1358.65)
[0000][PE] low and high boundaries for proper pairs: (1, 10053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (730, 1337, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (1284.50, 841.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 411.539 CPU sec, 23.054 real sec
[0000] Calling mem_process_seqs.., task: 1544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516908, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 578, 1403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (858.39, 804.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4790)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (758, 1025, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3662)
[0000][PE] mean and std.dev: (1138.13, 674.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4630)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 410.095 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 1545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 517081, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 894, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (889.00, 710.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1135, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5693)
[0000][PE] mean and std.dev: (1379.25, 951.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 407.668 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 1546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516294, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 411, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5330)
[0000][PE] mean and std.dev: (1341.07, 1623.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (875, 1298, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3269)
[0000][PE] mean and std.dev: (1236.38, 491.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 407.896 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516879, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (561, 1323, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1344.71, 1006.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1417, 1984, 3296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7054)
[0000][PE] mean and std.dev: (2088.08, 1114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 8933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 411.676 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 1548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516488, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 984, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3531)
[0000][PE] mean and std.dev: (1084.48, 878.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1377, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (1409.17, 544.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4299)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 412.598 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 1549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516973, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 333, 1459)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4141)
[0000][PE] mean and std.dev: (739.85, 912.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.41, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1072, 1392, 1781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3199)
[0000][PE] mean and std.dev: (1439.33, 747.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 409.791 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 1550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516322, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (378, 1038, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5544)
[0000][PE] mean and std.dev: (1333.82, 1297.41)
[0000][PE] low and high boundaries for proper pairs: (1, 7266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1154, 1693, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3728)
[0000][PE] mean and std.dev: (1469.35, 560.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 411.479 CPU sec, 23.050 real sec
[0000] Calling mem_process_seqs.., task: 1551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516734, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (415, 993, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3742)
[0000][PE] mean and std.dev: (869.55, 473.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1250, 2052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1507.90, 872.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 411.866 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 1552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206148
	[0000][ M::kt_pipeline] read 1206148 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516817, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 453, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5364)
[0000][PE] mean and std.dev: (1104.41, 1274.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7056)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1040, 1397, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (1320.31, 577.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 410.306 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 1553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516667, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 908, 2806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7486)
[0000][PE] mean and std.dev: (1763.04, 1815.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1396, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (1440.92, 636.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206148 reads in 411.501 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 1554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516689, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1366, 2061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5629)
[0000][PE] mean and std.dev: (1431.04, 1290.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 2003, 4884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12726)
[0000][PE] mean and std.dev: (2859.75, 2445.03)
[0000][PE] low and high boundaries for proper pairs: (1, 16647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 409.285 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 1555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516628, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 851, 2025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1048.42, 1129.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1170, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (79, 2349)
[0000][PE] mean and std.dev: (1199.78, 450.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 407.899 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 1556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516730, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 413, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (649.32, 563.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3475)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1429, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5106)
[0000][PE] mean and std.dev: (1557.47, 1142.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 408.911 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 1557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516432, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 702, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2841)
[0000][PE] mean and std.dev: (671.11, 567.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1560, 2495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5143)
[0000][PE] mean and std.dev: (1611.24, 798.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 408.091 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 1558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516716, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 757, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5087)
[0000][PE] mean and std.dev: (1342.67, 1314.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1057, 1563, 4575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11611)
[0000][PE] mean and std.dev: (2337.73, 1783.80)
[0000][PE] low and high boundaries for proper pairs: (1, 15129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 413.364 CPU sec, 23.173 real sec
[0000] Calling mem_process_seqs.., task: 1559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516415, 5, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 773, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4898)
[0000][PE] mean and std.dev: (939.33, 804.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1029, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1217.81, 645.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4286)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 412.355 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 1560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517183, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 1015, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (973.37, 607.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.76, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1382, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5827)
[0000][PE] mean and std.dev: (1899.58, 1432.05)
[0000][PE] low and high boundaries for proper pairs: (1, 7628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 410.005 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516798, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 940, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6782)
[0000][PE] mean and std.dev: (1753.52, 2017.83)
[0000][PE] low and high boundaries for proper pairs: (1, 9825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (953, 1701, 2905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6809)
[0000][PE] mean and std.dev: (2156.50, 1729.56)
[0000][PE] low and high boundaries for proper pairs: (1, 9075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 409.667 CPU sec, 22.954 real sec
[0000] Calling mem_process_seqs.., task: 1562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516895, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (388, 1360, 2460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6604)
[0000][PE] mean and std.dev: (1412.94, 1123.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 932, 4634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12344)
[0000][PE] mean and std.dev: (2549.06, 2502.69)
[0000][PE] low and high boundaries for proper pairs: (1, 16199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 414.405 CPU sec, 23.251 real sec
[0000] Calling mem_process_seqs.., task: 1563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516687, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 702, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4117)
[0000][PE] mean and std.dev: (1102.24, 1096.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1298, 2436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1370.69, 771.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6963)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 410.162 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 1564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516173, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 581, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (709.74, 681.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1507, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5048)
[0000][PE] mean and std.dev: (1575.00, 878.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6396)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 410.576 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206256
	[0000][ M::kt_pipeline] read 1206256 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517186, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 978, 2394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6706)
[0000][PE] mean and std.dev: (1546.86, 1645.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (950, 1358, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3488)
[0000][PE] mean and std.dev: (1264.35, 480.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 407.111 CPU sec, 22.810 real sec
[0000] Calling mem_process_seqs.., task: 1566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516582, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 538, 2130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5920)
[0000][PE] mean and std.dev: (1055.64, 1074.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1274, 1579, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4397)
[0000][PE] mean and std.dev: (1579.18, 837.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206256 reads in 410.216 CPU sec, 23.014 real sec
[0000] Calling mem_process_seqs.., task: 1567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516657, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (742, 1504, 3002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7522)
[0000][PE] mean and std.dev: (1599.45, 1120.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.27, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1409, 3026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7156)
[0000][PE] mean and std.dev: (2168.10, 1995.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 410.666 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 1568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516161, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 664, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (1010.00, 911.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1372, 1986, 4268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10060)
[0000][PE] mean and std.dev: (2507.60, 1466.19)
[0000][PE] low and high boundaries for proper pairs: (1, 12956)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 411.033 CPU sec, 23.053 real sec
[0000] Calling mem_process_seqs.., task: 1569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516280, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1047, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3713)
[0000][PE] mean and std.dev: (926.32, 627.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1392, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1682.27, 1239.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 411.076 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 1570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516306, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 1186, 2472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6854)
[0000][PE] mean and std.dev: (1498.75, 1464.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1374, 2006, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5547)
[0000][PE] mean and std.dev: (1897.78, 1128.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 410.648 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516063, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 454, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (698.45, 596.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (968, 1275, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (1450.63, 1053.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 413.132 CPU sec, 23.164 real sec
[0000] Calling mem_process_seqs.., task: 1572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516552, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (549, 1146, 2294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5784)
[0000][PE] mean and std.dev: (1432.52, 1194.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (941, 1369, 3543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8747)
[0000][PE] mean and std.dev: (1905.26, 1637.23)
[0000][PE] low and high boundaries for proper pairs: (1, 11349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 408.813 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 1573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516438, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 743, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (1139.53, 1134.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1698, 2447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4889)
[0000][PE] mean and std.dev: (1630.07, 778.66)
[0000][PE] low and high boundaries for proper pairs: (1, 6110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 410.967 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 1574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516216, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 551, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (708.62, 511.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1331, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4383)
[0000][PE] mean and std.dev: (1318.67, 801.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 414.175 CPU sec, 23.217 real sec
[0000] Calling mem_process_seqs.., task: 1575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516313, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 621, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2610)
[0000][PE] mean and std.dev: (731.28, 558.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1466, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1503.81, 711.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4349)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 411.055 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 1576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516490, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 671, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4826)
[0000][PE] mean and std.dev: (1066.13, 1077.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1402, 3471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8279)
[0000][PE] mean and std.dev: (1962.75, 1377.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 412.519 CPU sec, 23.121 real sec
[0000] Calling mem_process_seqs.., task: 1577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516596, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 687, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (825.93, 689.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (546, 902, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3969)
[0000][PE] mean and std.dev: (1064.00, 879.65)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 408.576 CPU sec, 22.881 real sec
[0000] Calling mem_process_seqs.., task: 1578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516305, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (1055, 1753, 2705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6005)
[0000][PE] mean and std.dev: (1751.88, 1198.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7655)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1445, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4877)
[0000][PE] mean and std.dev: (1616.29, 1024.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 413.069 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 1579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516818, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 755, 1353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3607)
[0000][PE] mean and std.dev: (746.60, 678.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1399, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1590.48, 903.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 410.252 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 1580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516181, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 932, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6549)
[0000][PE] mean and std.dev: (1383.47, 1343.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1334, 2018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3852)
[0000][PE] mean and std.dev: (1388.14, 530.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 417.234 CPU sec, 23.358 real sec
[0000] Calling mem_process_seqs.., task: 1581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516660, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 392, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2213)
[0000][PE] mean and std.dev: (561.96, 523.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1318, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3302)
[0000][PE] mean and std.dev: (1278.08, 625.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 412.678 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 1582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516592, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 427, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2715)
[0000][PE] mean and std.dev: (696.55, 581.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 859)
[0000][PE] mean and std.dev: (486.50, 114.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1894, 3812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9576)
[0000][PE] mean and std.dev: (2487.00, 2037.76)
[0000][PE] low and high boundaries for proper pairs: (1, 12458)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 411.560 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 1583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516140, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 656, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4896)
[0000][PE] mean and std.dev: (1064.89, 1002.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1560, 2680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5954)
[0000][PE] mean and std.dev: (1960.44, 1324.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 411.242 CPU sec, 23.048 real sec
[0000] Calling mem_process_seqs.., task: 1584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516882, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 824, 1439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (992.31, 786.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1148, 1357, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7058)
[0000][PE] mean and std.dev: (2049.88, 1620.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 407.425 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 1585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516573, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 505, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (707.91, 692.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 901, 1206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (849.57, 255.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 409.501 CPU sec, 22.907 real sec
[0000] Calling mem_process_seqs.., task: 1586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516658, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 586, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (694.87, 431.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (933, 1095, 3712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9270)
[0000][PE] mean and std.dev: (1756.19, 1375.44)
[0000][PE] low and high boundaries for proper pairs: (1, 12049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 413.402 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 1587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516718, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 460, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (864.80, 809.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (584, 1305, 1761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4115)
[0000][PE] mean and std.dev: (1324.73, 843.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 409.125 CPU sec, 22.939 real sec
[0000] Calling mem_process_seqs.., task: 1588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516257, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 666, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4797)
[0000][PE] mean and std.dev: (958.57, 979.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (979, 1919, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5179)
[0000][PE] mean and std.dev: (1895.11, 1011.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6579)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 411.481 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 1589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516861, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 615, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (805.70, 661.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1507, 1670)
[0000][PE] low and high boundaries for computing mean and std.dev: (143, 2688)
[0000][PE] mean and std.dev: (1200.77, 468.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3197)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 410.697 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 1590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516348, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 424, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2879)
[0000][PE] mean and std.dev: (626.25, 426.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (594, 1220, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4023)
[0000][PE] mean and std.dev: (1137.05, 715.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 410.340 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 1591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516338, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 1044, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5191)
[0000][PE] mean and std.dev: (1133.52, 973.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6821)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1433, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (1382.36, 546.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 410.005 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 1592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516781, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 354, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2869)
[0000][PE] mean and std.dev: (535.58, 564.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1567, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6579)
[0000][PE] mean and std.dev: (1769.53, 1144.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 412.483 CPU sec, 23.089 real sec
[0000] Calling mem_process_seqs.., task: 1593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516621, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 364, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (738.36, 714.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1354, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3771)
[0000][PE] mean and std.dev: (1272.19, 678.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4733)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 412.669 CPU sec, 23.096 real sec
[0000] Calling mem_process_seqs.., task: 1594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516754, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (616, 1192, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5281)
[0000][PE] mean and std.dev: (1177.09, 925.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1465, 3512)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8350)
[0000][PE] mean and std.dev: (1932.83, 1264.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 409.328 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 1595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516349, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 710, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (945.09, 771.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1033, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2414)
[0000][PE] mean and std.dev: (979.92, 487.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 408.587 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 1596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516939, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 704, 1990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5500)
[0000][PE] mean and std.dev: (1050.15, 1188.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (711, 1472, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4275)
[0000][PE] mean and std.dev: (1344.53, 631.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 406.720 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516508, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1165, 1764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1163.30, 748.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1382, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (1343.95, 438.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4472)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 413.681 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 1598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516845, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 669, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3584)
[0000][PE] mean and std.dev: (892.79, 770.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (674, 1201, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4412)
[0000][PE] mean and std.dev: (1267.04, 807.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.654 CPU sec, 22.939 real sec
[0000] Calling mem_process_seqs.., task: 1599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206446
	[0000][ M::kt_pipeline] read 1206446 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516342, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (317, 865, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4499)
[0000][PE] mean and std.dev: (997.41, 819.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1238, 2134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4380)
[0000][PE] mean and std.dev: (1398.81, 767.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 411.402 CPU sec, 23.038 real sec
[0000] Calling mem_process_seqs.., task: 1600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516564, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 507, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (788.79, 826.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (806, 1561, 2551)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6041)
[0000][PE] mean and std.dev: (1758.83, 1138.76)
[0000][PE] low and high boundaries for proper pairs: (1, 7786)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206446 reads in 410.518 CPU sec, 22.976 real sec
[0000] Calling mem_process_seqs.., task: 1601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516318, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1219, 2986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8302)
[0000][PE] mean and std.dev: (1652.38, 1485.85)
[0000][PE] low and high boundaries for proper pairs: (1, 10960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1259, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2888)
[0000][PE] mean and std.dev: (1288.59, 548.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 417.078 CPU sec, 23.365 real sec
[0000] Calling mem_process_seqs.., task: 1602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206292
	[0000][ M::kt_pipeline] read 1206292 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516447, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 635, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3597)
[0000][PE] mean and std.dev: (859.46, 672.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4702)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1846, 3576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8776)
[0000][PE] mean and std.dev: (2193.05, 1717.85)
[0000][PE] low and high boundaries for proper pairs: (1, 11376)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 410.443 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 1603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206292
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516018, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 959, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (1141.12, 969.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.04, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (759, 1047, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3732)
[0000][PE] mean and std.dev: (1076.27, 638.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206292 reads in 412.974 CPU sec, 23.134 real sec
[0000] Calling mem_process_seqs.., task: 1604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516892, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 539, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2238)
[0000][PE] mean and std.dev: (651.44, 484.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1348, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5682)
[0000][PE] mean and std.dev: (1645.65, 1046.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 405.094 CPU sec, 22.674 real sec
[0000] Calling mem_process_seqs.., task: 1605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516439, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (538, 850, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2314)
[0000][PE] mean and std.dev: (882.88, 561.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (767, 1256, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (1207.28, 724.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 410.698 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 1606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516383, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 592, 1887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5123)
[0000][PE] mean and std.dev: (945.92, 892.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (766, 1319, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4690)
[0000][PE] mean and std.dev: (1366.00, 900.41)
[0000][PE] low and high boundaries for proper pairs: (1, 5998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 412.965 CPU sec, 23.146 real sec
[0000] Calling mem_process_seqs.., task: 1607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516443, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 736, 2008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5480)
[0000][PE] mean and std.dev: (1045.90, 979.68)
[0000][PE] low and high boundaries for proper pairs: (1, 7216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (723, 1284, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5856)
[0000][PE] mean and std.dev: (1825.27, 1546.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 409.749 CPU sec, 22.927 real sec
[0000] Calling mem_process_seqs.., task: 1608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516279, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 559, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2253)
[0000][PE] mean and std.dev: (573.93, 389.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2916)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (929, 1753, 2276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4970)
[0000][PE] mean and std.dev: (1612.35, 866.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6317)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 408.634 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 1609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516497, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (460, 692, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (885.58, 708.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1020, 1233, 2257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4731)
[0000][PE] mean and std.dev: (1328.16, 915.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 409.019 CPU sec, 22.901 real sec
[0000] Calling mem_process_seqs.., task: 1610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516555, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (625, 1086, 2123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5119)
[0000][PE] mean and std.dev: (1436.40, 1073.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6617)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1423, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1495.09, 574.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 410.474 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 1611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516451, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 761, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (720.55, 543.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4438)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1929, 2217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (1464.60, 939.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 410.456 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 1612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516627, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 315, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2804)
[0000][PE] mean and std.dev: (559.55, 621.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.59, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1421, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4592)
[0000][PE] mean and std.dev: (1425.70, 885.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 409.065 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516688, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 332, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2816)
[0000][PE] mean and std.dev: (607.30, 586.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1333, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4876)
[0000][PE] mean and std.dev: (1433.30, 846.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 410.284 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 1614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516654, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (583, 1028, 1445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3169)
[0000][PE] mean and std.dev: (941.36, 528.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4031)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.40, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1092, 3582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8936)
[0000][PE] mean and std.dev: (2323.69, 1862.73)
[0000][PE] low and high boundaries for proper pairs: (1, 11613)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.264 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 1615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516117, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (746, 1203, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3767)
[0000][PE] mean and std.dev: (1094.79, 773.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1437, 1637, 2000)
[0000][PE] low and high boundaries for computing mean and std.dev: (311, 3126)
[0000][PE] mean and std.dev: (1564.50, 431.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 413.800 CPU sec, 23.180 real sec
[0000] Calling mem_process_seqs.., task: 1616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516644, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 614, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3069)
[0000][PE] mean and std.dev: (829.14, 787.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (548, 1433, 2301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5807)
[0000][PE] mean and std.dev: (1659.14, 1299.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 408.942 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 1617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516839, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 563, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (841.20, 762.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1174, 1654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3382)
[0000][PE] mean and std.dev: (1208.05, 654.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 409.731 CPU sec, 23.027 real sec
[0000] Calling mem_process_seqs.., task: 1618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206304
	[0000][ M::kt_pipeline] read 1206304 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516463, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 764, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4789)
[0000][PE] mean and std.dev: (875.79, 761.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1556, 2901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6153)
[0000][PE] mean and std.dev: (1978.92, 1360.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 410.886 CPU sec, 23.008 real sec
[0000] Calling mem_process_seqs.., task: 1619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516759, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 609, 1740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (841.11, 831.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.52)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1306, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4109)
[0000][PE] mean and std.dev: (1223.33, 562.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206304 reads in 409.557 CPU sec, 22.943 real sec
[0000] Calling mem_process_seqs.., task: 1620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516180, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 428, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (665.29, 549.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (640, 1224, 1814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4162)
[0000][PE] mean and std.dev: (1215.38, 661.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 413.658 CPU sec, 23.169 real sec
[0000] Calling mem_process_seqs.., task: 1621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516831, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 670, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (857.08, 699.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3797)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 969, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (1019.11, 584.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 409.322 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 1622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516532, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 1251, 1628)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4174)
[0000][PE] mean and std.dev: (910.25, 588.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 977, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (1045.16, 501.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3415)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 409.726 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 1623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516170, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 798, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (827.06, 766.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1393, 3276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8124)
[0000][PE] mean and std.dev: (1535.71, 1074.46)
[0000][PE] low and high boundaries for proper pairs: (1, 10548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 409.639 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 1624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517089, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1120, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5013)
[0000][PE] mean and std.dev: (1141.38, 1009.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (970, 1414, 2534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5662)
[0000][PE] mean and std.dev: (1762.95, 1223.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7226)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 410.879 CPU sec, 22.985 real sec
[0000] Calling mem_process_seqs.., task: 1625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515594, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 1084, 1884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1153.62, 1041.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1325, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1564.32, 901.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5875)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 413.022 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 1626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516398, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (518, 1183, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1284.36, 1027.16)
[0000][PE] low and high boundaries for proper pairs: (1, 7218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (850, 1368, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (1146.36, 545.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 409.381 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 1627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516403, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 811, 2282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1136.30, 1273.75)
[0000][PE] low and high boundaries for proper pairs: (1, 8504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1044, 1601, 1865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (1508.81, 708.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 412.899 CPU sec, 23.136 real sec
[0000] Calling mem_process_seqs.., task: 1628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516065, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 686, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (767.41, 544.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (443, 896, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (969.95, 615.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 409.372 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 1629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516792, 5, 34)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 338, 883)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2181)
[0000][PE] mean and std.dev: (483.85, 307.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1039, 1468, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4531)
[0000][PE] mean and std.dev: (1618.56, 938.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5695)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 409.181 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 1630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516617, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 436, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (702.68, 595.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1309, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4147)
[0000][PE] mean and std.dev: (1189.80, 695.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 412.280 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 1631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206538
	[0000][ M::kt_pipeline] read 1206538 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516520, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 734, 1368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (845.97, 682.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1036, 1363, 2420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5188)
[0000][PE] mean and std.dev: (1634.00, 1092.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 409.740 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 1632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206538
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516442, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 924, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (1109.12, 899.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1732, 2570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5538)
[0000][PE] mean and std.dev: (1907.96, 1200.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7022)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206538 reads in 412.928 CPU sec, 23.110 real sec
[0000] Calling mem_process_seqs.., task: 1633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516589, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 416, 1680)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4688)
[0000][PE] mean and std.dev: (736.24, 781.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.43, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1238, 1608, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4820)
[0000][PE] mean and std.dev: (1646.50, 719.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 408.888 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 1634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516550, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 815, 1939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1070.74, 1097.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1101, 1626, 3335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7803)
[0000][PE] mean and std.dev: (2056.94, 1768.21)
[0000][PE] low and high boundaries for proper pairs: (1, 10037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 410.674 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 1635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516852, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 849, 1980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5408)
[0000][PE] mean and std.dev: (1020.60, 1073.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1355, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1529.74, 882.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 409.397 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516041, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 810, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4252)
[0000][PE] mean and std.dev: (902.81, 834.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1100, 1477, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3707)
[0000][PE] mean and std.dev: (1597.00, 748.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 410.652 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 1637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516948, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 634, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3296)
[0000][PE] mean and std.dev: (809.65, 746.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 948, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3032)
[0000][PE] mean and std.dev: (1085.43, 626.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 413.296 CPU sec, 23.169 real sec
[0000] Calling mem_process_seqs.., task: 1638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516913, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 484, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3496)
[0000][PE] mean and std.dev: (696.11, 617.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1177, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4847)
[0000][PE] mean and std.dev: (1157.62, 728.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 410.988 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 1639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 517069, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (399, 545, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (613.82, 348.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3595)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 2078, 3550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8024)
[0000][PE] mean and std.dev: (2522.68, 1653.36)
[0000][PE] low and high boundaries for proper pairs: (1, 10261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 410.617 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 1640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 517057, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 925, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4643)
[0000][PE] mean and std.dev: (862.73, 671.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6101)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1200, 1602, 2353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4659)
[0000][PE] mean and std.dev: (1769.59, 1015.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 408.713 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516445, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 801, 2410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6436)
[0000][PE] mean and std.dev: (1598.86, 1818.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1489, 5218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13446)
[0000][PE] mean and std.dev: (2557.08, 2288.82)
[0000][PE] low and high boundaries for proper pairs: (1, 17560)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 408.699 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 1642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206554
	[0000][ M::kt_pipeline] read 1206554 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516285, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 507, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2930)
[0000][PE] mean and std.dev: (778.91, 642.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1178, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (1092.55, 445.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 412.925 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 1643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516098, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 721, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3925)
[0000][PE] mean and std.dev: (1006.42, 922.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.04, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (780, 942, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4293)
[0000][PE] mean and std.dev: (1056.93, 605.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5464)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206554 reads in 411.410 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 1644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516660, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 860, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4164)
[0000][PE] mean and std.dev: (957.17, 899.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (935, 1270, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3941)
[0000][PE] mean and std.dev: (1380.00, 796.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4943)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 410.915 CPU sec, 23.028 real sec
[0000] Calling mem_process_seqs.., task: 1645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516691, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 702, 2088)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5752)
[0000][PE] mean and std.dev: (1128.69, 1262.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7584)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.04, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1341, 2845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6661)
[0000][PE] mean and std.dev: (2036.17, 1689.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8796)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 411.131 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 1646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516737, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 415, 2068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5610)
[0000][PE] mean and std.dev: (966.70, 929.48)
[0000][PE] low and high boundaries for proper pairs: (1, 7381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1261, 2152, 4530)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11068)
[0000][PE] mean and std.dev: (2559.33, 1724.92)
[0000][PE] low and high boundaries for proper pairs: (1, 14337)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 415.864 CPU sec, 23.307 real sec
[0000] Calling mem_process_seqs.., task: 1647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516423, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 840, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3399)
[0000][PE] mean and std.dev: (956.09, 760.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (365, 1516, 2272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6086)
[0000][PE] mean and std.dev: (1535.76, 1160.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7993)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 412.645 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 1648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516021, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 435, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (644.50, 617.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1365, 1612)
[0000][PE] low and high boundaries for computing mean and std.dev: (4, 2684)
[0000][PE] mean and std.dev: (1210.00, 512.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 410.892 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 1649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516169, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 932, 2183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6025)
[0000][PE] mean and std.dev: (1138.43, 1000.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1236, 2811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7019)
[0000][PE] mean and std.dev: (1558.06, 1099.12)
[0000][PE] low and high boundaries for proper pairs: (1, 9123)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 411.541 CPU sec, 23.078 real sec
[0000] Calling mem_process_seqs.., task: 1650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516444, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 507, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (810.04, 766.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1176, 1586, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4401)
[0000][PE] mean and std.dev: (1655.50, 832.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5476)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 409.970 CPU sec, 23.016 real sec
[0000] Calling mem_process_seqs.., task: 1651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516674, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 704, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (837.05, 661.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3484)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1482, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5688)
[0000][PE] mean and std.dev: (1951.32, 1182.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 410.512 CPU sec, 22.982 real sec
[0000] Calling mem_process_seqs.., task: 1652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516598, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 515, 1202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3156)
[0000][PE] mean and std.dev: (844.43, 889.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4402)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 924, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (1144.13, 552.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4128)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 411.112 CPU sec, 23.005 real sec
[0000] Calling mem_process_seqs.., task: 1653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516531, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 670, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4602)
[0000][PE] mean and std.dev: (1164.55, 1178.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (882, 1256, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1564.38, 887.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6302)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 409.538 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516709, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (309, 634, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (949.96, 834.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1067, 1355, 2653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1635.82, 856.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 411.156 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 1655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516859, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1184, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7438)
[0000][PE] mean and std.dev: (1486.00, 1522.35)
[0000][PE] low and high boundaries for proper pairs: (1, 9811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1627, 2162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4536)
[0000][PE] mean and std.dev: (1686.53, 977.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 409.716 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 1656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516533, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 396, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (772.56, 970.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1483, 2907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6625)
[0000][PE] mean and std.dev: (1834.70, 1314.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 411.490 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 1657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516388, 9, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 932, 1743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4759)
[0000][PE] mean and std.dev: (927.81, 745.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1835, 3806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8906)
[0000][PE] mean and std.dev: (2189.17, 1337.00)
[0000][PE] low and high boundaries for proper pairs: (1, 11456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 410.691 CPU sec, 23.047 real sec
[0000] Calling mem_process_seqs.., task: 1658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516382, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (403, 795, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1057.28, 870.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (518, 712, 1448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3308)
[0000][PE] mean and std.dev: (845.18, 663.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 409.712 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 1659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516560, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 828, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (958.37, 803.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1088, 1360, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (1369.67, 787.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 411.771 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 1660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206592
	[0000][ M::kt_pipeline] read 1206592 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516927, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 602, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (841.12, 776.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1401, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4941)
[0000][PE] mean and std.dev: (1576.95, 1079.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 408.424 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 1661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516183, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 833, 1092)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (660.00, 453.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1129, 1432, 3226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7420)
[0000][PE] mean and std.dev: (1980.71, 1738.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206592 reads in 412.660 CPU sec, 23.095 real sec
[0000] Calling mem_process_seqs.., task: 1662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206240
	[0000][ M::kt_pipeline] read 1206240 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516458, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (556, 1092, 2087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1045.14, 939.89)
[0000][PE] low and high boundaries for proper pairs: (1, 6680)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1792, 4235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10079)
[0000][PE] mean and std.dev: (2409.10, 1677.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13001)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 408.687 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 1663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516240, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 581, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3390)
[0000][PE] mean and std.dev: (861.24, 705.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1119, 1282, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4674)
[0000][PE] mean and std.dev: (1496.40, 947.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206240 reads in 408.567 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 1664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206516
	[0000][ M::kt_pipeline] read 1206516 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516766, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 492, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (794.21, 827.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1353, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5357)
[0000][PE] mean and std.dev: (1474.80, 844.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 407.621 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 1665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516669, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 406, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (546.57, 502.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 1269, 2203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (1454.29, 1094.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206516 reads in 408.930 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 1666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516487, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 714, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4311)
[0000][PE] mean and std.dev: (891.79, 878.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1219, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3616)
[0000][PE] mean and std.dev: (1424.09, 792.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 414.477 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 1667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516347, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 782, 1803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4753)
[0000][PE] mean and std.dev: (1176.88, 1170.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1199, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (91, 2416)
[0000][PE] mean and std.dev: (1159.71, 530.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 407.909 CPU sec, 22.819 real sec
[0000] Calling mem_process_seqs.., task: 1668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516692, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 771, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2834)
[0000][PE] mean and std.dev: (741.90, 530.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (922, 1210, 2346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (1481.95, 983.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 410.148 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 1669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516800, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 325, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2274)
[0000][PE] mean and std.dev: (496.19, 498.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1397, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7075)
[0000][PE] mean and std.dev: (1608.09, 810.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 410.199 CPU sec, 22.995 real sec
[0000] Calling mem_process_seqs.., task: 1670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516139, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1681, 2255)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5887)
[0000][PE] mean and std.dev: (1654.82, 1147.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7703)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1055, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4145)
[0000][PE] mean and std.dev: (1181.96, 815.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 409.081 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 1671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516348, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (797, 1397, 2098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (1343.05, 1002.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.24, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1641, 4557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11867)
[0000][PE] mean and std.dev: (2257.93, 1673.55)
[0000][PE] low and high boundaries for proper pairs: (1, 15522)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 412.365 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 1672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206284
	[0000][ M::kt_pipeline] read 1206284 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516768, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (345, 1244, 2168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5814)
[0000][PE] mean and std.dev: (1463.62, 1261.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (707, 1037, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (956.57, 491.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4179)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 407.434 CPU sec, 22.821 real sec
[0000] Calling mem_process_seqs.., task: 1673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516162, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 760, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3757)
[0000][PE] mean and std.dev: (835.29, 639.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (784, 1329, 4022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10498)
[0000][PE] mean and std.dev: (2237.38, 2205.55)
[0000][PE] low and high boundaries for proper pairs: (1, 13736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206284 reads in 410.395 CPU sec, 22.999 real sec
[0000] Calling mem_process_seqs.., task: 1674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516729, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 967, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4861)
[0000][PE] mean and std.dev: (1194.40, 1229.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (945, 1664, 2391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5283)
[0000][PE] mean and std.dev: (1799.72, 1231.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 410.033 CPU sec, 22.966 real sec
[0000] Calling mem_process_seqs.., task: 1675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516143, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 816, 1751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4771)
[0000][PE] mean and std.dev: (1124.86, 1013.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.37, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (976, 1317, 1555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (1164.35, 461.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 410.654 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 1676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516453, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 972, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (954.14, 822.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4420)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.94, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (851, 1193, 3003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7307)
[0000][PE] mean and std.dev: (1949.12, 1522.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 410.734 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 1677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 515943, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 965, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4567)
[0000][PE] mean and std.dev: (1068.88, 1026.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 1461, 1694)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3976)
[0000][PE] mean and std.dev: (1190.62, 657.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 412.504 CPU sec, 23.151 real sec
[0000] Calling mem_process_seqs.., task: 1678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516715, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 818, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (948.54, 778.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.29, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1198, 1364)
[0000][PE] low and high boundaries for computing mean and std.dev: (137, 2182)
[0000][PE] mean and std.dev: (1202.53, 504.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 409.533 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516454, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 430, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3972)
[0000][PE] mean and std.dev: (854.95, 743.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.36, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1583, 1938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3652)
[0000][PE] mean and std.dev: (1503.15, 685.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 407.187 CPU sec, 22.802 real sec
[0000] Calling mem_process_seqs.., task: 1680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516451, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 471, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2968)
[0000][PE] mean and std.dev: (770.32, 641.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (551, 1344, 2642)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6824)
[0000][PE] mean and std.dev: (1391.41, 893.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 408.457 CPU sec, 22.870 real sec
[0000] Calling mem_process_seqs.., task: 1681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206264
	[0000][ M::kt_pipeline] read 1206264 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515960, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 573, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (888.23, 848.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1396, 1879, 2585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4963)
[0000][PE] mean and std.dev: (1812.16, 1112.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 406.103 CPU sec, 22.752 real sec
[0000] Calling mem_process_seqs.., task: 1682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206338
	[0000][ M::kt_pipeline] read 1206338 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516764, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 657, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4430)
[0000][PE] mean and std.dev: (1136.50, 1126.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1316, 1836, 2819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5825)
[0000][PE] mean and std.dev: (1878.19, 938.33)
[0000][PE] low and high boundaries for proper pairs: (1, 7328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206264 reads in 408.163 CPU sec, 22.865 real sec
[0000] Calling mem_process_seqs.., task: 1683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516447, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 755, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4739)
[0000][PE] mean and std.dev: (1205.25, 1218.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (854, 1075, 1542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2918)
[0000][PE] mean and std.dev: (1106.88, 516.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206338 reads in 408.896 CPU sec, 22.890 real sec
[0000] Calling mem_process_seqs.., task: 1684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516613, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 940, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3579)
[0000][PE] mean and std.dev: (937.58, 709.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4693)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (997, 1604, 2289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4873)
[0000][PE] mean and std.dev: (1599.25, 636.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 409.054 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516540, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 699, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3453)
[0000][PE] mean and std.dev: (907.35, 693.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4482)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1507, 2622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6028)
[0000][PE] mean and std.dev: (1629.77, 830.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 406.793 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 1686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516902, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 655, 1457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (705.76, 518.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4982)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (708, 1725, 2258)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5358)
[0000][PE] mean and std.dev: (1399.47, 763.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 406.482 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516778, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 1064, 2093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (1363.43, 1326.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 932, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (154, 2024)
[0000][PE] mean and std.dev: (850.25, 304.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 408.919 CPU sec, 22.902 real sec
[0000] Calling mem_process_seqs.., task: 1688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516639, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 471, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6023)
[0000][PE] mean and std.dev: (1084.30, 1341.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1313, 1595, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (1711.87, 679.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 406.769 CPU sec, 22.740 real sec
[0000] Calling mem_process_seqs.., task: 1689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516402, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (448, 1195, 2311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6037)
[0000][PE] mean and std.dev: (1426.91, 1124.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (948, 1263, 2852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6660)
[0000][PE] mean and std.dev: (1767.20, 1398.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 409.961 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 1690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516460, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 896, 2664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7424)
[0000][PE] mean and std.dev: (1595.36, 1724.87)
[0000][PE] low and high boundaries for proper pairs: (1, 9804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (664, 1131, 2397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5863)
[0000][PE] mean and std.dev: (1872.17, 1759.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 410.844 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 1691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516590, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 439, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3446)
[0000][PE] mean and std.dev: (576.43, 514.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1095, 1504, 2238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4524)
[0000][PE] mean and std.dev: (1497.94, 813.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 410.524 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 1692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516497, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (406, 797, 1595)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3973)
[0000][PE] mean and std.dev: (928.85, 744.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.63, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (841, 1201, 1601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3121)
[0000][PE] mean and std.dev: (1236.94, 635.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 407.504 CPU sec, 22.831 real sec
[0000] Calling mem_process_seqs.., task: 1693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516560, 9, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 906, 1844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4874)
[0000][PE] mean and std.dev: (954.30, 933.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.35, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1669, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4814)
[0000][PE] mean and std.dev: (1632.56, 732.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6060)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 405.931 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 1694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516347, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 1051, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5508)
[0000][PE] mean and std.dev: (1031.40, 687.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7201)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1260, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1368.15, 589.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 409.380 CPU sec, 22.919 real sec
[0000] Calling mem_process_seqs.., task: 1695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516643, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 766, 1296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (728.60, 464.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (805, 952, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (67, 1912)
[0000][PE] mean and std.dev: (813.56, 272.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2281)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 409.564 CPU sec, 22.976 real sec
[0000] Calling mem_process_seqs.., task: 1696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516779, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 805, 3145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8855)
[0000][PE] mean and std.dev: (1660.47, 1787.01)
[0000][PE] low and high boundaries for proper pairs: (1, 11710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (514, 2122, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10144)
[0000][PE] mean and std.dev: (2601.92, 2539.11)
[0000][PE] low and high boundaries for proper pairs: (1, 13354)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 406.978 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516301, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 354, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (804.74, 902.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4974)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (666, 1162, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (1024.55, 450.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 409.139 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 1698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516260, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 628, 1384)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3520)
[0000][PE] mean and std.dev: (824.36, 631.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1157, 1820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4012)
[0000][PE] mean and std.dev: (1206.89, 702.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 410.928 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 1699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516690, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 266, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (486.75, 414.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (862, 1379, 3316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8224)
[0000][PE] mean and std.dev: (1799.58, 1498.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 410.160 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 1700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516545, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 306, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4108)
[0000][PE] mean and std.dev: (834.06, 934.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.65, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1664, 2308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4932)
[0000][PE] mean and std.dev: (1829.73, 1279.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 409.717 CPU sec, 22.936 real sec
[0000] Calling mem_process_seqs.., task: 1701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206408
	[0000][ M::kt_pipeline] read 1206408 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516192, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 640, 1613)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4271)
[0000][PE] mean and std.dev: (915.56, 749.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1375, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (1249.13, 494.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 409.999 CPU sec, 22.970 real sec
[0000] Calling mem_process_seqs.., task: 1702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516413, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 741, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (1087.43, 1156.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.15, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1512, 3288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (1777.62, 1334.61)
[0000][PE] low and high boundaries for proper pairs: (1, 10782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206408 reads in 409.295 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 1703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516589, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 726, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4113)
[0000][PE] mean and std.dev: (821.39, 614.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (646, 1186, 2186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (1339.53, 909.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 407.950 CPU sec, 22.829 real sec
[0000] Calling mem_process_seqs.., task: 1704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516668, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 865, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4564)
[0000][PE] mean and std.dev: (1272.24, 1334.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (821, 1062, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (1308.16, 723.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 409.093 CPU sec, 22.903 real sec
[0000] Calling mem_process_seqs.., task: 1705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516138, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 883, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (913.05, 778.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (831, 1186, 2081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4581)
[0000][PE] mean and std.dev: (1436.88, 725.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.472 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 1706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516372, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 644, 1398)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (882.74, 578.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4491)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1015, 1304, 2558)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5644)
[0000][PE] mean and std.dev: (1719.39, 1322.72)
[0000][PE] low and high boundaries for proper pairs: (1, 7187)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 405.881 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 1707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516699, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 858, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1062.72, 999.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6636)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1354, 1865, 3254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7054)
[0000][PE] mean and std.dev: (2116.50, 1490.15)
[0000][PE] low and high boundaries for proper pairs: (1, 8954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 404.745 CPU sec, 22.698 real sec
[0000] Calling mem_process_seqs.., task: 1708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516431, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (361, 850, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5437)
[0000][PE] mean and std.dev: (1158.61, 1125.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1432, 1565, 2568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4840)
[0000][PE] mean and std.dev: (1696.50, 664.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 409.744 CPU sec, 22.923 real sec
[0000] Calling mem_process_seqs.., task: 1709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516676, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 809, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5595)
[0000][PE] mean and std.dev: (1041.71, 867.32)
[0000][PE] low and high boundaries for proper pairs: (1, 7361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1294, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3028)
[0000][PE] mean and std.dev: (1117.27, 372.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 406.970 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 1710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516382, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 604, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4322)
[0000][PE] mean and std.dev: (971.28, 860.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (829, 1212, 2191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1590.10, 1159.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 407.181 CPU sec, 22.808 real sec
[0000] Calling mem_process_seqs.., task: 1711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516131, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 719, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (779.00, 646.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1296, 1480, 2317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4359)
[0000][PE] mean and std.dev: (1735.12, 944.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 410.345 CPU sec, 22.993 real sec
[0000] Calling mem_process_seqs.., task: 1712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516366, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 611, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3064)
[0000][PE] mean and std.dev: (751.89, 626.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1508, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4091)
[0000][PE] mean and std.dev: (1431.78, 698.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 409.898 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 1713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516552, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 646, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (796.24, 689.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1045, 1351, 2454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (1415.75, 1005.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 406.873 CPU sec, 22.778 real sec
[0000] Calling mem_process_seqs.., task: 1714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 517142, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 542, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (815.45, 655.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (961, 1445, 1700)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (1348.90, 559.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 405.578 CPU sec, 22.706 real sec
[0000] Calling mem_process_seqs.., task: 1715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516429, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 1008, 1359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (881.76, 499.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4131)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 919, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4341)
[0000][PE] mean and std.dev: (1090.47, 720.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 409.767 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 1716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516974, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 479, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4506)
[0000][PE] mean and std.dev: (867.50, 971.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1568, 2236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4800)
[0000][PE] mean and std.dev: (1735.04, 1136.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 408.086 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 1717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516273, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 771, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4037)
[0000][PE] mean and std.dev: (885.94, 677.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1079, 2135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4811)
[0000][PE] mean and std.dev: (1161.80, 709.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6149)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 411.529 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 1718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516526, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 887, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (874.00, 772.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1210, 2066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4230)
[0000][PE] mean and std.dev: (1512.50, 986.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 409.953 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516472, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 806, 1559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3999)
[0000][PE] mean and std.dev: (999.15, 856.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1238, 1773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3267)
[0000][PE] mean and std.dev: (1301.53, 815.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 408.657 CPU sec, 22.845 real sec
[0000] Calling mem_process_seqs.., task: 1720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516931, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 460, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3829)
[0000][PE] mean and std.dev: (555.95, 480.84)
[0000][PE] low and high boundaries for proper pairs: (1, 5027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1623, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1278.24, 801.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 407.120 CPU sec, 22.793 real sec
[0000] Calling mem_process_seqs.., task: 1721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516482, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (341, 594, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (912.55, 784.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5229)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.13, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1540, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6972)
[0000][PE] mean and std.dev: (1911.25, 1451.83)
[0000][PE] low and high boundaries for proper pairs: (1, 8967)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 407.294 CPU sec, 22.788 real sec
[0000] Calling mem_process_seqs.., task: 1722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206570
	[0000][ M::kt_pipeline] read 1206570 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516726, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 747, 2139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1076.10, 1056.73)
[0000][PE] low and high boundaries for proper pairs: (1, 7677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1345, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (1369.08, 768.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5131)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 410.954 CPU sec, 23.020 real sec
[0000] Calling mem_process_seqs.., task: 1723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206570
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516424, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 595, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (856.82, 852.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (512, 1066, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4589)
[0000][PE] mean and std.dev: (1201.81, 1039.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206570 reads in 407.071 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 1724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516183, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 689, 1344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3304)
[0000][PE] mean and std.dev: (860.58, 667.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1454, 2461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5453)
[0000][PE] mean and std.dev: (1676.86, 1021.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 411.164 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 1725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206574
	[0000][ M::kt_pipeline] read 1206574 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517061, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 407, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (738.56, 692.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1385, 1674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (1191.29, 655.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 413.708 CPU sec, 23.189 real sec
[0000] Calling mem_process_seqs.., task: 1726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516575, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (453, 1573, 3278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8928)
[0000][PE] mean and std.dev: (2320.11, 2176.62)
[0000][PE] low and high boundaries for proper pairs: (1, 11753)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 1884, 3422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7898)
[0000][PE] mean and std.dev: (2311.64, 1604.73)
[0000][PE] low and high boundaries for proper pairs: (1, 10136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206574 reads in 411.185 CPU sec, 23.026 real sec
[0000] Calling mem_process_seqs.., task: 1727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516127, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (436, 885, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3823)
[0000][PE] mean and std.dev: (917.68, 629.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (791, 1211, 2494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5900)
[0000][PE] mean and std.dev: (1471.58, 1221.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7603)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 408.578 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206308
	[0000][ M::kt_pipeline] read 1206308 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516115, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 476, 1387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3521)
[0000][PE] mean and std.dev: (669.27, 496.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1013, 1316, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (1154.60, 468.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 407.474 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 1729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516299, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 913, 1507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3769)
[0000][PE] mean and std.dev: (968.14, 581.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1301, 2383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1498.89, 1097.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206308 reads in 410.927 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 1730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516881, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 523, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (782.38, 815.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1331, 1835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3731)
[0000][PE] mean and std.dev: (1263.80, 673.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 406.188 CPU sec, 22.775 real sec
[0000] Calling mem_process_seqs.., task: 1731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (41, 516817, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 827, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4875)
[0000][PE] mean and std.dev: (1093.03, 911.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6384)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (843, 1079, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3957)
[0000][PE] mean and std.dev: (1238.00, 596.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4995)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 411.304 CPU sec, 23.129 real sec
[0000] Calling mem_process_seqs.., task: 1732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516390, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (347, 444, 1649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4253)
[0000][PE] mean and std.dev: (835.11, 738.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (895, 1147, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4882)
[0000][PE] mean and std.dev: (1483.04, 887.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 409.564 CPU sec, 23.013 real sec
[0000] Calling mem_process_seqs.., task: 1733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516411, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 376, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4279)
[0000][PE] mean and std.dev: (735.03, 659.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (801, 1329, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (1271.63, 721.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 409.478 CPU sec, 23.000 real sec
[0000] Calling mem_process_seqs.., task: 1734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516408, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 517, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (763.59, 662.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.35, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (698, 1587, 2148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5048)
[0000][PE] mean and std.dev: (1578.41, 973.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 407.841 CPU sec, 22.905 real sec
[0000] Calling mem_process_seqs.., task: 1735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516213, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 820, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (812.94, 532.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (783, 1349, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (1295.25, 777.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 409.959 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 1736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516484, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 786, 1733)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1120.97, 1054.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1696, 1760)
[0000][PE] low and high boundaries for computing mean and std.dev: (155, 2830)
[0000][PE] mean and std.dev: (1414.62, 490.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 408.855 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 1737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516293, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 502, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3970)
[0000][PE] mean and std.dev: (950.32, 849.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1024, 1602, 2267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4753)
[0000][PE] mean and std.dev: (1734.50, 1060.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 409.388 CPU sec, 22.975 real sec
[0000] Calling mem_process_seqs.., task: 1738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515996, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 845, 1452)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (821.32, 767.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.61, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1643, 2846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6832)
[0000][PE] mean and std.dev: (1649.75, 991.32)
[0000][PE] low and high boundaries for proper pairs: (1, 8825)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 414.300 CPU sec, 23.229 real sec
[0000] Calling mem_process_seqs.., task: 1739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516644, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 1010, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (1028.10, 818.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5210)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (982, 1618, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4195)
[0000][PE] mean and std.dev: (1522.15, 741.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 406.414 CPU sec, 22.756 real sec
[0000] Calling mem_process_seqs.., task: 1740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516594, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 946, 1799)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1133.84, 992.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1551, 2542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5254)
[0000][PE] mean and std.dev: (1953.63, 1200.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 410.318 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 1741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206262
	[0000][ M::kt_pipeline] read 1206262 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516682, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (431, 980, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5936)
[0000][PE] mean and std.dev: (1522.83, 1430.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7771)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1444, 2867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6593)
[0000][PE] mean and std.dev: (1697.71, 1092.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 407.141 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 1742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516508, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (495, 789, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (1085.12, 780.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (558, 1136, 1746)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4122)
[0000][PE] mean and std.dev: (1039.40, 659.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206262 reads in 407.745 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 1743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206118
	[0000][ M::kt_pipeline] read 1206118 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516835, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 878, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (846.77, 636.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4966)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (693, 1290, 3021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7677)
[0000][PE] mean and std.dev: (1662.94, 1259.96)
[0000][PE] low and high boundaries for proper pairs: (1, 10005)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 406.024 CPU sec, 22.709 real sec
[0000] Calling mem_process_seqs.., task: 1744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516385, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 860, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1202.16, 1180.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6079)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1058, 1334, 2793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6263)
[0000][PE] mean and std.dev: (1513.25, 733.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206118 reads in 407.807 CPU sec, 22.848 real sec
[0000] Calling mem_process_seqs.., task: 1745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206166
	[0000][ M::kt_pipeline] read 1206166 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516275, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 436, 1472)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (715.96, 729.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1712, 3830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8950)
[0000][PE] mean and std.dev: (2078.08, 1446.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11510)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 408.941 CPU sec, 22.924 real sec
[0000] Calling mem_process_seqs.., task: 1746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516597, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (519, 922, 1306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (843.47, 480.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1006, 1423, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (1301.06, 544.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206166 reads in 406.992 CPU sec, 22.759 real sec
[0000] Calling mem_process_seqs.., task: 1747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516437, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1146, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4200)
[0000][PE] mean and std.dev: (1085.36, 884.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5461)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1066, 1321, 2084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4120)
[0000][PE] mean and std.dev: (1562.04, 910.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 406.047 CPU sec, 22.737 real sec
[0000] Calling mem_process_seqs.., task: 1748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516488, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 848, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1046.46, 962.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1589, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4170)
[0000][PE] mean and std.dev: (1508.52, 806.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 405.438 CPU sec, 22.681 real sec
[0000] Calling mem_process_seqs.., task: 1749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515936, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (352, 924, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4603)
[0000][PE] mean and std.dev: (955.58, 698.76)
[0000][PE] low and high boundaries for proper pairs: (1, 6020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (420, 1208, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5502)
[0000][PE] mean and std.dev: (1347.54, 1166.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7196)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 408.843 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 1750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 517017, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 496, 1001)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (687.73, 575.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 113.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1236, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (1271.59, 615.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 405.343 CPU sec, 22.725 real sec
[0000] Calling mem_process_seqs.., task: 1751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516140, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 441, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3993)
[0000][PE] mean and std.dev: (820.33, 777.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 1852, 2760)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5636)
[0000][PE] mean and std.dev: (1838.14, 940.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 409.499 CPU sec, 22.953 real sec
[0000] Calling mem_process_seqs.., task: 1752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516578, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1221, 1734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4474)
[0000][PE] mean and std.dev: (1277.15, 1036.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.99, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1308, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3341)
[0000][PE] mean and std.dev: (1159.89, 402.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 406.914 CPU sec, 22.790 real sec
[0000] Calling mem_process_seqs.., task: 1753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206138
	[0000][ M::kt_pipeline] read 1206138 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 517287, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 1402, 2118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5698)
[0000][PE] mean and std.dev: (1199.55, 989.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (872, 1264, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3416)
[0000][PE] mean and std.dev: (1225.00, 571.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 405.155 CPU sec, 22.689 real sec
[0000] Calling mem_process_seqs.., task: 1754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516230, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (262, 401, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3667)
[0000][PE] mean and std.dev: (789.19, 741.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1557, 2377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5227)
[0000][PE] mean and std.dev: (1804.00, 1211.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206138 reads in 405.381 CPU sec, 22.755 real sec
[0000] Calling mem_process_seqs.., task: 1755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516143, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 515, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (699.04, 503.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1341, 1813, 3143)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6747)
[0000][PE] mean and std.dev: (1899.73, 838.05)
[0000][PE] low and high boundaries for proper pairs: (1, 8549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 410.307 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 1756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206582
	[0000][ M::kt_pipeline] read 1206582 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516157, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 913, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (839.10, 494.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1507, 3034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7114)
[0000][PE] mean and std.dev: (1769.70, 1153.61)
[0000][PE] low and high boundaries for proper pairs: (1, 9154)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 408.520 CPU sec, 22.918 real sec
[0000] Calling mem_process_seqs.., task: 1757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516418, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 896, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6184)
[0000][PE] mean and std.dev: (1442.62, 1245.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1212, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4965)
[0000][PE] mean and std.dev: (1583.40, 754.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206582 reads in 411.177 CPU sec, 23.055 real sec
[0000] Calling mem_process_seqs.., task: 1758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206232
	[0000][ M::kt_pipeline] read 1206232 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516806, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 742, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (925.04, 763.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1316, 2982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6836)
[0000][PE] mean and std.dev: (2014.00, 1680.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 403.243 CPU sec, 22.585 real sec
[0000] Calling mem_process_seqs.., task: 1759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516312, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 372, 933)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2267)
[0000][PE] mean and std.dev: (546.14, 463.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1210, 2064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4150)
[0000][PE] mean and std.dev: (1454.50, 591.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206232 reads in 410.945 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 1760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516374, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 1114, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3795)
[0000][PE] mean and std.dev: (1029.40, 904.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1495, 2593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5465)
[0000][PE] mean and std.dev: (1604.80, 1061.85)
[0000][PE] low and high boundaries for proper pairs: (1, 6901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 407.160 CPU sec, 22.856 real sec
[0000] Calling mem_process_seqs.., task: 1761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516194, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 514, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2194)
[0000][PE] mean and std.dev: (558.42, 417.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (949, 1401, 3676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9130)
[0000][PE] mean and std.dev: (2248.53, 2051.55)
[0000][PE] low and high boundaries for proper pairs: (1, 11857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 408.010 CPU sec, 22.891 real sec
[0000] Calling mem_process_seqs.., task: 1762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1206568
	[0000][ M::kt_pipeline] read 1206568 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516297, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (509, 1114, 2826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7460)
[0000][PE] mean and std.dev: (1708.52, 1470.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9777)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (779, 2016, 2226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5120)
[0000][PE] mean and std.dev: (1631.00, 1003.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 410.616 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 1763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206592
	[0000][ M::kt_pipeline] read 1206592 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206568
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516806, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (543, 1056, 1860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1126.11, 925.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1530, 2019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4033)
[0000][PE] mean and std.dev: (1582.94, 751.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206568 reads in 410.100 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 1764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515940, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 914, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4916)
[0000][PE] mean and std.dev: (1236.72, 1183.34)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1078, 1526, 1961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3727)
[0000][PE] mean and std.dev: (1337.65, 399.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206592 reads in 413.189 CPU sec, 23.195 real sec
[0000] Calling mem_process_seqs.., task: 1765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516464, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 710, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4332)
[0000][PE] mean and std.dev: (1148.95, 1060.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1499, 1909, 2887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5663)
[0000][PE] mean and std.dev: (2092.58, 1289.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 406.171 CPU sec, 22.781 real sec
[0000] Calling mem_process_seqs.., task: 1766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1206546
	[0000][ M::kt_pipeline] read 1206546 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516932, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 1327, 2202)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5872)
[0000][PE] mean and std.dev: (1321.67, 951.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (768, 1378, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3945)
[0000][PE] mean and std.dev: (1294.07, 808.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 403.353 CPU sec, 22.616 real sec
[0000] Calling mem_process_seqs.., task: 1767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516455, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1037, 1501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3753)
[0000][PE] mean and std.dev: (988.28, 703.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4879)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1315, 1457, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3673)
[0000][PE] mean and std.dev: (1518.09, 647.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4459)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206546 reads in 409.053 CPU sec, 22.950 real sec
[0000] Calling mem_process_seqs.., task: 1768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206220
	[0000][ M::kt_pipeline] read 1206220 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516938, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 755, 1547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4045)
[0000][PE] mean and std.dev: (772.09, 585.08)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1114, 1463, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2941)
[0000][PE] mean and std.dev: (1364.08, 450.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 410.534 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 1769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 517089, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (709, 1215, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4348)
[0000][PE] mean and std.dev: (1185.04, 765.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5561)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1290, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4561)
[0000][PE] mean and std.dev: (1354.23, 858.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5778)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206220 reads in 414.311 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 1770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517029, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 548, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4594)
[0000][PE] mean and std.dev: (879.84, 827.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (616, 1062, 3286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8626)
[0000][PE] mean and std.dev: (1567.59, 1405.05)
[0000][PE] low and high boundaries for proper pairs: (1, 11296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 407.458 CPU sec, 22.863 real sec
[0000] Calling mem_process_seqs.., task: 1771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516598, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 709, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5047)
[0000][PE] mean and std.dev: (1083.29, 1099.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1226, 1795, 2536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (1678.85, 816.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6466)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 408.887 CPU sec, 22.901 real sec
[0000] Calling mem_process_seqs.., task: 1772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516602, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 424, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3788)
[0000][PE] mean and std.dev: (923.65, 1005.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (857, 951, 1332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (1020.16, 503.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 407.830 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 1773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516476, 0, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 383, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (694.45, 783.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (848, 1511, 2509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5831)
[0000][PE] mean and std.dev: (1545.65, 930.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 412.536 CPU sec, 23.114 real sec
[0000] Calling mem_process_seqs.., task: 1774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516300, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (457, 847, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4309)
[0000][PE] mean and std.dev: (1001.82, 744.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5593)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1547, 1872, 2815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5351)
[0000][PE] mean and std.dev: (2161.00, 1206.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6986)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 409.946 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 1775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206186
	[0000][ M::kt_pipeline] read 1206186 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516724, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 911, 1978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5194)
[0000][PE] mean and std.dev: (1160.03, 1093.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1106, 1613, 3945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9623)
[0000][PE] mean and std.dev: (2231.42, 1741.58)
[0000][PE] low and high boundaries for proper pairs: (1, 12462)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 408.509 CPU sec, 22.874 real sec
[0000] Calling mem_process_seqs.., task: 1776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516527, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (466, 1440, 2330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6058)
[0000][PE] mean and std.dev: (1414.33, 932.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (939, 1195, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (1159.00, 506.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3431)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206186 reads in 409.477 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516760, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 468, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3315)
[0000][PE] mean and std.dev: (721.00, 627.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4328)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1065, 1509, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1782.73, 1004.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 407.045 CPU sec, 22.853 real sec
[0000] Calling mem_process_seqs.., task: 1778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516573, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 1038, 1676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4518)
[0000][PE] mean and std.dev: (973.04, 919.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 409.927 CPU sec, 22.959 real sec
[0000] Calling mem_process_seqs.., task: 1779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516644, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (511, 867, 2043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1280.77, 1197.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (955, 1373, 2333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5089)
[0000][PE] mean and std.dev: (1761.90, 1274.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 410.960 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 1780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516364, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 1245, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5061)
[0000][PE] mean and std.dev: (1324.05, 1127.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.33, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1179, 1436, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (389, 2364)
[0000][PE] mean and std.dev: (1382.89, 370.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2865)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 408.779 CPU sec, 22.901 real sec
[0000] Calling mem_process_seqs.., task: 1781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516334, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (473, 1367, 2337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6065)
[0000][PE] mean and std.dev: (1556.45, 1338.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1206, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4372)
[0000][PE] mean and std.dev: (1440.61, 997.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 409.409 CPU sec, 22.880 real sec
[0000] Calling mem_process_seqs.., task: 1782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516468, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 1131, 1855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4917)
[0000][PE] mean and std.dev: (1111.46, 1051.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6448)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (952, 1368, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4282)
[0000][PE] mean and std.dev: (1510.67, 668.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5392)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 408.664 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 1783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516486, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (294, 888, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3690)
[0000][PE] mean and std.dev: (969.36, 868.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1096, 1740, 3505)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8323)
[0000][PE] mean and std.dev: (2319.68, 2021.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 415.051 CPU sec, 23.267 real sec
[0000] Calling mem_process_seqs.., task: 1784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516657, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 408, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1830)
[0000][PE] mean and std.dev: (370.00, 185.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2339)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (743, 1459, 2580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6254)
[0000][PE] mean and std.dev: (1556.62, 939.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 410.573 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 1785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516669, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 867, 1275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3139)
[0000][PE] mean and std.dev: (946.93, 678.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (775, 1396, 1641)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (1225.06, 546.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4239)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 415.397 CPU sec, 23.323 real sec
[0000] Calling mem_process_seqs.., task: 1786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516516, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (329, 1188, 2434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6644)
[0000][PE] mean and std.dev: (1307.55, 1072.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1287, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3824)
[0000][PE] mean and std.dev: (1381.44, 802.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 408.452 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 1787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516529, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1041, 1839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1151.25, 982.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (996, 1651, 2215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4653)
[0000][PE] mean and std.dev: (1562.67, 571.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 414.609 CPU sec, 23.292 real sec
[0000] Calling mem_process_seqs.., task: 1788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 515928, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 439, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (681.64, 659.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1403, 1719, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3974)
[0000][PE] mean and std.dev: (1620.33, 579.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4831)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 411.409 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 1789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516736, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 485, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (625.83, 540.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.78)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (993, 1425, 2638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5928)
[0000][PE] mean and std.dev: (1728.08, 1183.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 407.940 CPU sec, 22.837 real sec
[0000] Calling mem_process_seqs.., task: 1790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516474, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1002, 1646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4106)
[0000][PE] mean and std.dev: (1108.05, 806.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5336)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (845, 1447, 2042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4436)
[0000][PE] mean and std.dev: (1465.52, 900.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 413.313 CPU sec, 23.198 real sec
[0000] Calling mem_process_seqs.., task: 1791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516610, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 1249, 1715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4503)
[0000][PE] mean and std.dev: (1257.76, 1043.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.63, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1025, 1435, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1448.78, 742.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 415.503 CPU sec, 23.336 real sec
[0000] Calling mem_process_seqs.., task: 1792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516414, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 482, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2558)
[0000][PE] mean and std.dev: (656.41, 607.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3330)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1468, 1686, 3673)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8083)
[0000][PE] mean and std.dev: (2137.85, 1099.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10288)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.171 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 1793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516624, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (468, 1228, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (942.08, 591.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1032, 2014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4504)
[0000][PE] mean and std.dev: (1275.88, 951.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 415.038 CPU sec, 23.285 real sec
[0000] Calling mem_process_seqs.., task: 1794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516718, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 770, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5512)
[0000][PE] mean and std.dev: (1212.62, 1241.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1309, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3737)
[0000][PE] mean and std.dev: (1367.50, 626.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 411.023 CPU sec, 23.079 real sec
[0000] Calling mem_process_seqs.., task: 1795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516516, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (259, 439, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (624.23, 495.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (836, 1160, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6197)
[0000][PE] mean and std.dev: (1589.71, 1042.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 413.037 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 1796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516414, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (379, 1178, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4300)
[0000][PE] mean and std.dev: (1010.68, 766.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1405, 1525, 2885)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5845)
[0000][PE] mean and std.dev: (1878.06, 972.74)
[0000][PE] low and high boundaries for proper pairs: (1, 7325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 413.258 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 1797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516316, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 729, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4654)
[0000][PE] mean and std.dev: (970.30, 783.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1340, 1864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (1372.94, 496.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 413.300 CPU sec, 23.228 real sec
[0000] Calling mem_process_seqs.., task: 1798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516574, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 713, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5352)
[0000][PE] mean and std.dev: (1020.11, 897.36)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1287, 2304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4806)
[0000][PE] mean and std.dev: (1473.14, 762.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 414.653 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 1799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 515950, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 1003, 1945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5161)
[0000][PE] mean and std.dev: (1262.04, 1187.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6769)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1356, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (1438.60, 763.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 416.500 CPU sec, 23.361 real sec
[0000] Calling mem_process_seqs.., task: 1800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206512
	[0000][ M::kt_pipeline] read 1206512 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516142, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 924, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (881.95, 788.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1545, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5557)
[0000][PE] mean and std.dev: (1489.95, 856.27)
[0000][PE] low and high boundaries for proper pairs: (1, 7053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 412.236 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 1801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516650, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 586, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3370)
[0000][PE] mean and std.dev: (591.77, 550.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1270, 1434, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (408, 2563)
[0000][PE] mean and std.dev: (1496.60, 379.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206512 reads in 409.084 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 1802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516217, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 761, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6617)
[0000][PE] mean and std.dev: (1299.75, 1606.96)
[0000][PE] low and high boundaries for proper pairs: (1, 8751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1335, 2361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5175)
[0000][PE] mean and std.dev: (1564.24, 1024.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 412.169 CPU sec, 23.116 real sec
[0000] Calling mem_process_seqs.., task: 1803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516395, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (602, 891, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2465)
[0000][PE] mean and std.dev: (813.89, 454.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3086)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1230, 1931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (1410.70, 829.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4730)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 407.942 CPU sec, 22.826 real sec
[0000] Calling mem_process_seqs.., task: 1804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515890, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 321, 1304)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3384)
[0000][PE] mean and std.dev: (572.47, 550.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1104, 1469, 2108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1345.80, 671.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 413.535 CPU sec, 23.168 real sec
[0000] Calling mem_process_seqs.., task: 1805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516529, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 914, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3697)
[0000][PE] mean and std.dev: (970.04, 759.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4856)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 1549, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3137)
[0000][PE] mean and std.dev: (1375.44, 663.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4030)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 409.220 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 1806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516316, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 424, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3009)
[0000][PE] mean and std.dev: (621.27, 619.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1629, 2683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1931.16, 1107.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 413.944 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 1807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206306
	[0000][ M::kt_pipeline] read 1206306 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516771, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (318, 928, 1707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4485)
[0000][PE] mean and std.dev: (1068.35, 998.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (777, 1197, 1515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2991)
[0000][PE] mean and std.dev: (1018.07, 543.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3729)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 411.942 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206612
	[0000][ M::kt_pipeline] read 1206612 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516162, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (282, 617, 1907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5157)
[0000][PE] mean and std.dev: (912.53, 734.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6782)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1035, 1540, 2645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5865)
[0000][PE] mean and std.dev: (1763.40, 1062.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7475)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206306 reads in 410.864 CPU sec, 22.997 real sec
[0000] Calling mem_process_seqs.., task: 1809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206204
	[0000][ M::kt_pipeline] read 1206204 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206612
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516737, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (368, 1176, 1605)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4079)
[0000][PE] mean and std.dev: (1067.55, 853.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5316)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1204, 1770, 2426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4870)
[0000][PE] mean and std.dev: (1709.09, 1020.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206612 reads in 406.449 CPU sec, 22.798 real sec
[0000] Calling mem_process_seqs.., task: 1810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516402, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 370, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3778)
[0000][PE] mean and std.dev: (684.46, 723.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1539, 2471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5413)
[0000][PE] mean and std.dev: (1747.58, 1090.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206204 reads in 408.759 CPU sec, 22.900 real sec
[0000] Calling mem_process_seqs.., task: 1811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516424, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 950, 1718)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4298)
[0000][PE] mean and std.dev: (956.29, 677.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1795, 2325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1715.47, 907.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5559)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 410.255 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 1812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206476
	[0000][ M::kt_pipeline] read 1206476 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516372, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 930, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6334)
[0000][PE] mean and std.dev: (1601.36, 1674.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (966, 1272, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1566.62, 976.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 407.612 CPU sec, 22.832 real sec
[0000] Calling mem_process_seqs.., task: 1813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516218, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (340, 732, 2146)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5758)
[0000][PE] mean and std.dev: (1131.16, 1262.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 951, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5666)
[0000][PE] mean and std.dev: (1463.89, 1136.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7306)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206476 reads in 412.012 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 1814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206580
	[0000][ M::kt_pipeline] read 1206580 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516233, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 893, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3477)
[0000][PE] mean and std.dev: (824.23, 594.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1592, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1647.73, 734.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 410.921 CPU sec, 23.015 real sec
[0000] Calling mem_process_seqs.., task: 1815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206580
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516126, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 335, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (764.79, 742.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1171, 1714, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5230)
[0000][PE] mean and std.dev: (1874.18, 1116.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206580 reads in 408.816 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 1816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516294, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 458, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (866.18, 699.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1366, 2318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5020)
[0000][PE] mean and std.dev: (1765.48, 1258.45)
[0000][PE] low and high boundaries for proper pairs: (1, 6799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 409.240 CPU sec, 22.911 real sec
[0000] Calling mem_process_seqs.., task: 1817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516703, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 601, 2741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7579)
[0000][PE] mean and std.dev: (1380.40, 1691.32)
[0000][PE] low and high boundaries for proper pairs: (1, 9998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1207, 1441, 2144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4018)
[0000][PE] mean and std.dev: (1275.47, 501.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 407.456 CPU sec, 22.873 real sec
[0000] Calling mem_process_seqs.., task: 1818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516954, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 854, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (877.97, 762.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5400)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 1185, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4446)
[0000][PE] mean and std.dev: (1254.45, 888.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 409.486 CPU sec, 22.998 real sec
[0000] Calling mem_process_seqs.., task: 1819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516309, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (295, 472, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3598)
[0000][PE] mean and std.dev: (725.07, 714.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (585, 1746, 2587)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6591)
[0000][PE] mean and std.dev: (1624.29, 1399.91)
[0000][PE] low and high boundaries for proper pairs: (1, 8593)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 407.998 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516242, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 956, 1637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (965.41, 945.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1186, 1941, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (1757.15, 844.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 406.490 CPU sec, 22.767 real sec
[0000] Calling mem_process_seqs.., task: 1821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516351, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 411, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3811)
[0000][PE] mean and std.dev: (874.79, 1078.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (858, 1367, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1398.19, 736.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 407.455 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 1822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516563, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 631, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (739.96, 602.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.95, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1425, 2193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4613)
[0000][PE] mean and std.dev: (1327.00, 612.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 409.039 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 1823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516735, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (508, 1237, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4978)
[0000][PE] mean and std.dev: (1367.07, 1071.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 981, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1244.89, 750.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 408.722 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 1824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516476, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 747, 2076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1152.00, 1086.65)
[0000][PE] low and high boundaries for proper pairs: (1, 7251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (902, 1560, 2050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4346)
[0000][PE] mean and std.dev: (1601.76, 837.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.855 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 1825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000188, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000188 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516643, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 1124, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6308)
[0000][PE] mean and std.dev: (1208.39, 1024.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (879, 1409, 2678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6276)
[0000][PE] mean and std.dev: (1500.33, 999.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 409.722 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516356, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (705, 1256, 2314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5532)
[0000][PE] mean and std.dev: (1393.83, 1004.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7141)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.62, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (289, 2556, 3320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9382)
[0000][PE] mean and std.dev: (2243.70, 2024.41)
[0000][PE] low and high boundaries for proper pairs: (1, 12413)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1409, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (1432.59, 589.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3790)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 408.034 CPU sec, 22.828 real sec
[0000] Calling mem_process_seqs.., task: 1827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516728, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (305, 1006, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (797.53, 583.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (679, 1058, 2855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7207)
[0000][PE] mean and std.dev: (1437.30, 1270.58)
[0000][PE] low and high boundaries for proper pairs: (1, 9383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 405.617 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 1828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516635, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 1061, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1074.06, 762.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1056, 1921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3869)
[0000][PE] mean and std.dev: (1351.68, 757.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 407.613 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 1829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516571, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 538, 1963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5289)
[0000][PE] mean and std.dev: (1188.19, 1162.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6952)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1055, 1509, 2273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4709)
[0000][PE] mean and std.dev: (1667.80, 876.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 411.638 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 1830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516777, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 371, 1607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4435)
[0000][PE] mean and std.dev: (869.76, 1055.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5849)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (689, 1417, 2336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5630)
[0000][PE] mean and std.dev: (1611.10, 1068.03)
[0000][PE] low and high boundaries for proper pairs: (1, 7277)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 407.606 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 1831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516893, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 595, 1266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3260)
[0000][PE] mean and std.dev: (830.29, 678.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1451, 2297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4707)
[0000][PE] mean and std.dev: (1523.47, 778.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5912)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 403.203 CPU sec, 22.576 real sec
[0000] Calling mem_process_seqs.., task: 1832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516793, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 575, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3936)
[0000][PE] mean and std.dev: (926.22, 879.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (947, 1483, 2279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4943)
[0000][PE] mean and std.dev: (1508.70, 849.71)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 409.941 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 1833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516396, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (643, 1385, 2063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4903)
[0000][PE] mean and std.dev: (1430.24, 1079.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (637, 1341, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (1218.60, 718.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4985)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 409.436 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 1834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516733, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 1063, 1922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5212)
[0000][PE] mean and std.dev: (1116.27, 1025.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6857)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.92, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (715, 1120, 3407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8791)
[0000][PE] mean and std.dev: (1954.68, 1748.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 404.923 CPU sec, 22.664 real sec
[0000] Calling mem_process_seqs.., task: 1835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516376, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 1066, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4746)
[0000][PE] mean and std.dev: (903.33, 660.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1124, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (1440.62, 962.42)
[0000][PE] low and high boundaries for proper pairs: (1, 6803)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 405.811 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 1836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516443, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (363, 1188, 2463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6663)
[0000][PE] mean and std.dev: (1506.56, 1454.56)
[0000][PE] low and high boundaries for proper pairs: (1, 8763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1572, 3017, 4590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10626)
[0000][PE] mean and std.dev: (2940.75, 1956.82)
[0000][PE] low and high boundaries for proper pairs: (1, 13644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 409.570 CPU sec, 22.938 real sec
[0000] Calling mem_process_seqs.., task: 1837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516403, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 392, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2429)
[0000][PE] mean and std.dev: (499.83, 453.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 1263, 1810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4508)
[0000][PE] mean and std.dev: (1117.65, 966.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 408.469 CPU sec, 22.899 real sec
[0000] Calling mem_process_seqs.., task: 1838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206544
	[0000][ M::kt_pipeline] read 1206544 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516737, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 1019, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5463)
[0000][PE] mean and std.dev: (1144.11, 1029.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.41, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 1350, 1951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3691)
[0000][PE] mean and std.dev: (1463.32, 723.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4561)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 406.991 CPU sec, 22.792 real sec
[0000] Calling mem_process_seqs.., task: 1839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206544
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516827, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 340, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (492.24, 436.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3269)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (632, 1322, 3438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9050)
[0000][PE] mean and std.dev: (2112.69, 2428.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206544 reads in 410.473 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 1840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516693, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 502, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (892.26, 796.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1731, 2756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6294)
[0000][PE] mean and std.dev: (1862.00, 1342.79)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 405.781 CPU sec, 22.755 real sec
[0000] Calling mem_process_seqs.., task: 1841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516696, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 901, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1133.21, 1051.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 113.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (700, 1229, 2024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4672)
[0000][PE] mean and std.dev: (1557.94, 1092.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 405.647 CPU sec, 22.716 real sec
[0000] Calling mem_process_seqs.., task: 1842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206554
	[0000][ M::kt_pipeline] read 1206554 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516745, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 715, 3707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10571)
[0000][PE] mean and std.dev: (1881.76, 2310.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14003)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.23, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1406, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4373)
[0000][PE] mean and std.dev: (1563.06, 714.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 410.098 CPU sec, 23.070 real sec
[0000] Calling mem_process_seqs.., task: 1843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206452
	[0000][ M::kt_pipeline] read 1206452 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206554
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516312, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 662, 1662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4208)
[0000][PE] mean and std.dev: (943.87, 768.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1151, 1718, 3000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6698)
[0000][PE] mean and std.dev: (1654.87, 682.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206554 reads in 404.101 CPU sec, 22.626 real sec
[0000] Calling mem_process_seqs.., task: 1844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516827, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (572, 953, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3992)
[0000][PE] mean and std.dev: (1050.06, 776.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (788, 1153, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4409)
[0000][PE] mean and std.dev: (1295.94, 810.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5616)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206452 reads in 406.102 CPU sec, 22.753 real sec
[0000] Calling mem_process_seqs.., task: 1845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516694, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 1026, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1399.14, 1062.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1447, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4182)
[0000][PE] mean and std.dev: (1657.21, 932.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 404.566 CPU sec, 22.684 real sec
[0000] Calling mem_process_seqs.., task: 1846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206286
	[0000][ M::kt_pipeline] read 1206286 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516393, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 569, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2785)
[0000][PE] mean and std.dev: (610.61, 424.73)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (109, 859)
[0000][PE] mean and std.dev: (486.30, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (963, 1377, 1974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3996)
[0000][PE] mean and std.dev: (1365.32, 668.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 410.525 CPU sec, 23.002 real sec
[0000] Calling mem_process_seqs.., task: 1847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516616, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 378, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2588)
[0000][PE] mean and std.dev: (559.18, 464.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1220, 1672, 2742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5786)
[0000][PE] mean and std.dev: (1707.36, 1016.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206286 reads in 404.309 CPU sec, 22.639 real sec
[0000] Calling mem_process_seqs.., task: 1848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516429, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (416, 1265, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3815)
[0000][PE] mean and std.dev: (1095.96, 749.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (505, 948, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4678)
[0000][PE] mean and std.dev: (987.33, 689.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 404.102 CPU sec, 22.675 real sec
[0000] Calling mem_process_seqs.., task: 1849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206486
	[0000][ M::kt_pipeline] read 1206486 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516295, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 471, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6540)
[0000][PE] mean and std.dev: (1141.61, 1250.82)
[0000][PE] low and high boundaries for proper pairs: (1, 8633)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1338, 1750)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3726)
[0000][PE] mean and std.dev: (1411.83, 838.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 409.622 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516828, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 623, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4177)
[0000][PE] mean and std.dev: (937.29, 940.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (786, 962, 1594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3210)
[0000][PE] mean and std.dev: (1031.14, 459.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206486 reads in 408.556 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 1851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516346, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 661, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (827.25, 652.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1306, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (1164.47, 616.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 407.925 CPU sec, 22.815 real sec
[0000] Calling mem_process_seqs.., task: 1852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516832, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 1169, 1769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4691)
[0000][PE] mean and std.dev: (1216.67, 931.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6152)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (769, 1541, 2633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6361)
[0000][PE] mean and std.dev: (1576.47, 1150.46)
[0000][PE] low and high boundaries for proper pairs: (1, 8225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 405.244 CPU sec, 22.703 real sec
[0000] Calling mem_process_seqs.., task: 1853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516750, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 1128, 1704)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4616)
[0000][PE] mean and std.dev: (922.47, 656.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1485, 1822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4414)
[0000][PE] mean and std.dev: (1426.95, 1097.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 404.820 CPU sec, 22.635 real sec
[0000] Calling mem_process_seqs.., task: 1854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516546, 6, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 616, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (988.71, 922.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1158, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (1205.17, 629.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 408.233 CPU sec, 22.860 real sec
[0000] Calling mem_process_seqs.., task: 1855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516603, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (467, 1079, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1053.32, 739.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4887)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1480, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3404)
[0000][PE] mean and std.dev: (1431.41, 812.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 408.079 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516581, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 1045, 2231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6191)
[0000][PE] mean and std.dev: (1140.25, 1079.54)
[0000][PE] low and high boundaries for proper pairs: (1, 8171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1242, 2925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6765)
[0000][PE] mean and std.dev: (1906.53, 1447.26)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 406.473 CPU sec, 22.761 real sec
[0000] Calling mem_process_seqs.., task: 1857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516075, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 297, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2098)
[0000][PE] mean and std.dev: (392.73, 363.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2745)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1048, 1667, 2055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4069)
[0000][PE] mean and std.dev: (1548.72, 629.46)
[0000][PE] low and high boundaries for proper pairs: (1, 5076)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 408.108 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 1858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516465, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (334, 885, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3277)
[0000][PE] mean and std.dev: (1004.72, 879.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4523)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.39, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (874, 1395, 2703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6361)
[0000][PE] mean and std.dev: (1630.80, 1097.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 406.385 CPU sec, 22.777 real sec
[0000] Calling mem_process_seqs.., task: 1859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516617, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 813, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3391)
[0000][PE] mean and std.dev: (983.47, 852.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1288, 2598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5964)
[0000][PE] mean and std.dev: (1411.31, 767.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 408.441 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 1860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516563, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 906, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4760)
[0000][PE] mean and std.dev: (1050.14, 1030.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1001, 1224, 1826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (1358.53, 646.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 409.479 CPU sec, 22.931 real sec
[0000] Calling mem_process_seqs.., task: 1861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516676, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 677, 1846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4770)
[0000][PE] mean and std.dev: (1145.00, 998.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1738, 2117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3889)
[0000][PE] mean and std.dev: (1607.24, 726.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 404.939 CPU sec, 22.683 real sec
[0000] Calling mem_process_seqs.., task: 1862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516304, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 385, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (791.18, 837.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1427, 1957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4215)
[0000][PE] mean and std.dev: (1295.67, 700.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 409.516 CPU sec, 22.958 real sec
[0000] Calling mem_process_seqs.., task: 1863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206222
	[0000][ M::kt_pipeline] read 1206222 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516541, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 433, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2326)
[0000][PE] mean and std.dev: (526.76, 312.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1541, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5053)
[0000][PE] mean and std.dev: (1590.25, 1090.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 408.486 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 1864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516513, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (263, 917, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4424)
[0000][PE] mean and std.dev: (939.05, 763.28)
[0000][PE] low and high boundaries for proper pairs: (1, 5811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.61, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1042, 1503, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3271)
[0000][PE] mean and std.dev: (1324.50, 480.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4014)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206222 reads in 405.073 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 1865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516693, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 889, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6290)
[0000][PE] mean and std.dev: (1285.55, 1300.29)
[0000][PE] low and high boundaries for proper pairs: (1, 8320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1254, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3221)
[0000][PE] mean and std.dev: (1297.09, 620.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 409.557 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 1866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516797, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 1007, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3983)
[0000][PE] mean and std.dev: (1004.87, 918.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.25, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (114, 2391, 3900)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11472)
[0000][PE] mean and std.dev: (2739.80, 2844.39)
[0000][PE] low and high boundaries for proper pairs: (1, 15258)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1375, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6738)
[0000][PE] mean and std.dev: (1896.82, 1627.31)
[0000][PE] low and high boundaries for proper pairs: (1, 8745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 410.594 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 1867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206578
	[0000][ M::kt_pipeline] read 1206578 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516365, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 584, 1038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2544)
[0000][PE] mean and std.dev: (693.67, 586.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3297)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.32, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (582, 1137, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4410)
[0000][PE] mean and std.dev: (1310.08, 958.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 407.015 CPU sec, 22.812 real sec
[0000] Calling mem_process_seqs.., task: 1868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206578
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516664, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 476, 2696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7574)
[0000][PE] mean and std.dev: (1295.05, 1446.81)
[0000][PE] low and high boundaries for proper pairs: (1, 10013)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.40, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (740, 1218, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3668)
[0000][PE] mean and std.dev: (1248.06, 771.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206578 reads in 412.307 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 1869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206258
	[0000][ M::kt_pipeline] read 1206258 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516597, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (812, 1316, 1807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3797)
[0000][PE] mean and std.dev: (1204.39, 859.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4792)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1177, 1790)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3618)
[0000][PE] mean and std.dev: (1243.88, 614.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 408.450 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 1870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206594
	[0000][ M::kt_pipeline] read 1206594 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516507, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 717, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (600.88, 430.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206258 reads in 410.195 CPU sec, 22.987 real sec
[0000] Calling mem_process_seqs.., task: 1871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516500, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 551, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (788.73, 655.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.35, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (790, 1181, 2597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6211)
[0000][PE] mean and std.dev: (1600.82, 1074.10)
[0000][PE] low and high boundaries for proper pairs: (1, 8018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206594 reads in 408.588 CPU sec, 22.888 real sec
[0000] Calling mem_process_seqs.., task: 1872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206454
	[0000][ M::kt_pipeline] read 1206454 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516509, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 524, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (771.45, 873.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1147, 1852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3908)
[0000][PE] mean and std.dev: (1392.63, 827.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 408.826 CPU sec, 22.927 real sec
[0000] Calling mem_process_seqs.., task: 1873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516694, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 1111, 1954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5110)
[0000][PE] mean and std.dev: (1254.33, 1032.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (703, 1237, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3055)
[0000][PE] mean and std.dev: (1078.72, 562.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206454 reads in 409.206 CPU sec, 22.928 real sec
[0000] Calling mem_process_seqs.., task: 1874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516409, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (381, 468, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3984)
[0000][PE] mean and std.dev: (683.67, 623.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1243, 2359)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (1386.00, 717.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 408.796 CPU sec, 22.910 real sec
[0000] Calling mem_process_seqs.., task: 1875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516141, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 815, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3666)
[0000][PE] mean and std.dev: (791.50, 674.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (855, 1361, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (1101.47, 302.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 408.552 CPU sec, 22.894 real sec
[0000] Calling mem_process_seqs.., task: 1876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516618, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (359, 872, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3782)
[0000][PE] mean and std.dev: (1028.71, 848.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4923)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1278, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (1335.37, 608.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3771)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 405.491 CPU sec, 22.687 real sec
[0000] Calling mem_process_seqs.., task: 1877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516549, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 859, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2868)
[0000][PE] mean and std.dev: (865.66, 617.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.20, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 1762, 2387)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6529)
[0000][PE] mean and std.dev: (1420.59, 1062.07)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 407.299 CPU sec, 22.804 real sec
[0000] Calling mem_process_seqs.., task: 1878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516923, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (603, 989, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (1171.00, 804.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1605, 2338)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1556.82, 1047.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 406.462 CPU sec, 22.745 real sec
[0000] Calling mem_process_seqs.., task: 1879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516783, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 406, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (797.20, 711.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4652)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (986, 1388, 3270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7838)
[0000][PE] mean and std.dev: (1994.85, 1671.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 405.551 CPU sec, 22.721 real sec
[0000] Calling mem_process_seqs.., task: 1880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517286, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (834, 1212, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5112)
[0000][PE] mean and std.dev: (1522.86, 1102.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.24, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (543, 2100, 3434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9216)
[0000][PE] mean and std.dev: (2469.70, 2373.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12107)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1269, 1566, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5958)
[0000][PE] mean and std.dev: (1720.38, 851.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 408.655 CPU sec, 22.875 real sec
[0000] Calling mem_process_seqs.., task: 1881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516243, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 822, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3321)
[0000][PE] mean and std.dev: (844.86, 737.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1196, 1604, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6296)
[0000][PE] mean and std.dev: (2132.50, 1484.09)
[0000][PE] low and high boundaries for proper pairs: (1, 8069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 409.698 CPU sec, 22.922 real sec
[0000] Calling mem_process_seqs.., task: 1882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000162, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000162 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516171, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 1039, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3627)
[0000][PE] mean and std.dev: (898.73, 573.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1249, 1494, 1943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (1384.13, 514.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 408.806 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516379, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (274, 707, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3373)
[0000][PE] mean and std.dev: (920.64, 788.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (956, 1396, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (1233.33, 582.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 411.667 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 1884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206234
	[0000][ M::kt_pipeline] read 1206234 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 515883, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 652, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4502)
[0000][PE] mean and std.dev: (1037.80, 1205.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (649, 1675, 2002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (1401.52, 939.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 410.365 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 1885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516669, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 949, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3400)
[0000][PE] mean and std.dev: (889.54, 691.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (832, 1274, 1979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4273)
[0000][PE] mean and std.dev: (1367.35, 732.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206234 reads in 408.140 CPU sec, 22.846 real sec
[0000] Calling mem_process_seqs.., task: 1886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1206396
	[0000][ M::kt_pipeline] read 1206396 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516394, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 765, 1578)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4132)
[0000][PE] mean and std.dev: (1004.26, 819.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (934, 1326, 1546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (1143.09, 500.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 409.047 CPU sec, 22.929 real sec
[0000] Calling mem_process_seqs.., task: 1887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516905, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 938, 1808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4588)
[0000][PE] mean and std.dev: (1238.89, 997.36)
[0000][PE] low and high boundaries for proper pairs: (1, 5978)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1079, 2339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5393)
[0000][PE] mean and std.dev: (1496.12, 1100.61)
[0000][PE] low and high boundaries for proper pairs: (1, 6920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206396 reads in 408.517 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 1888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516878, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 659, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (709.14, 549.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.31, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1265, 1865, 3037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6581)
[0000][PE] mean and std.dev: (2045.53, 1166.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8353)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 407.864 CPU sec, 22.850 real sec
[0000] Calling mem_process_seqs.., task: 1889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206536
	[0000][ M::kt_pipeline] read 1206536 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516083, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 902, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (792.41, 453.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1160, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (1128.93, 531.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 408.153 CPU sec, 22.818 real sec
[0000] Calling mem_process_seqs.., task: 1890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516359, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (391, 1081, 2268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6022)
[0000][PE] mean and std.dev: (1431.29, 1491.61)
[0000][PE] low and high boundaries for proper pairs: (1, 7899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (998, 1193, 1722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3170)
[0000][PE] mean and std.dev: (1251.25, 671.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206536 reads in 409.194 CPU sec, 22.933 real sec
[0000] Calling mem_process_seqs.., task: 1891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 515676, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 562, 1342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (711.97, 675.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4747)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1265, 2086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1130.73, 648.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 410.227 CPU sec, 22.988 real sec
[0000] Calling mem_process_seqs.., task: 1892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206228
	[0000][ M::kt_pipeline] read 1206228 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516792, 4, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 786, 1725)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4423)
[0000][PE] mean and std.dev: (856.12, 704.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1400, 2009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (1540.90, 794.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5093)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 406.772 CPU sec, 22.757 real sec
[0000] Calling mem_process_seqs.., task: 1893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516767, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 472, 1758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4738)
[0000][PE] mean and std.dev: (840.86, 887.10)
[0000][PE] low and high boundaries for proper pairs: (1, 6228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1075, 1671, 2365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4945)
[0000][PE] mean and std.dev: (1772.36, 883.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206228 reads in 406.979 CPU sec, 22.783 real sec
[0000] Calling mem_process_seqs.., task: 1894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516768, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (376, 991, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1209.47, 1014.70)
[0000][PE] low and high boundaries for proper pairs: (1, 7168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.30, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1259, 2706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6388)
[0000][PE] mean and std.dev: (1708.94, 1396.71)
[0000][PE] low and high boundaries for proper pairs: (1, 8229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 409.896 CPU sec, 22.964 real sec
[0000] Calling mem_process_seqs.., task: 1895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516382, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (243, 385, 1627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (886.68, 1054.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1080, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3102)
[0000][PE] mean and std.dev: (1174.08, 626.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 406.932 CPU sec, 22.794 real sec
[0000] Calling mem_process_seqs.., task: 1896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516454, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 987, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4395)
[0000][PE] mean and std.dev: (876.18, 542.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5737)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.01, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (634, 923, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2983)
[0000][PE] mean and std.dev: (1111.29, 626.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 410.351 CPU sec, 23.024 real sec
[0000] Calling mem_process_seqs.., task: 1897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516592, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 624, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3660)
[0000][PE] mean and std.dev: (883.76, 847.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1093, 1406, 2787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6175)
[0000][PE] mean and std.dev: (1826.44, 1421.20)
[0000][PE] low and high boundaries for proper pairs: (1, 7869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 405.873 CPU sec, 22.763 real sec
[0000] Calling mem_process_seqs.., task: 1898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516232, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (419, 892, 2062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5348)
[0000][PE] mean and std.dev: (1330.00, 1219.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1144, 1359, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (48, 2788)
[0000][PE] mean and std.dev: (1184.92, 305.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3336)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 407.980 CPU sec, 22.913 real sec
[0000] Calling mem_process_seqs.., task: 1899
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206510
	[0000][ M::kt_pipeline] read 1206510 sequences (180000072 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516580, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 1331, 2590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7004)
[0000][PE] mean and std.dev: (1655.94, 1623.28)
[0000][PE] low and high boundaries for proper pairs: (1, 9211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1580, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1620.69, 917.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6237)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 407.982 CPU sec, 22.893 real sec
[0000] Calling mem_process_seqs.., task: 1900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206522
	[0000][ M::kt_pipeline] read 1206522 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516594, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (459, 1049, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4929)
[0000][PE] mean and std.dev: (1099.12, 847.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1219, 1318, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (1364.31, 487.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3815)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206510 reads in 406.245 CPU sec, 22.751 real sec
[0000] Calling mem_process_seqs.., task: 1901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515906, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 847, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3507)
[0000][PE] mean and std.dev: (884.54, 706.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1309, 2042, 3426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7660)
[0000][PE] mean and std.dev: (2357.08, 1531.04)
[0000][PE] low and high boundaries for proper pairs: (1, 9777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206522 reads in 408.380 CPU sec, 22.872 real sec
[0000] Calling mem_process_seqs.., task: 1902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516179, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (392, 633, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (801.62, 573.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3144)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1553, 2047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4089)
[0000][PE] mean and std.dev: (1641.69, 843.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 409.604 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 1903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516652, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 567, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4284)
[0000][PE] mean and std.dev: (921.43, 720.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.15, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1069, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2664)
[0000][PE] mean and std.dev: (1044.37, 502.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 406.177 CPU sec, 22.772 real sec
[0000] Calling mem_process_seqs.., task: 1904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515823, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 665, 1685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (697.11, 659.38)
[0000][PE] low and high boundaries for proper pairs: (1, 6203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (541, 1046, 1756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (1272.30, 1048.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 408.927 CPU sec, 22.912 real sec
[0000] Calling mem_process_seqs.., task: 1905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516179, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 1182, 2486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6974)
[0000][PE] mean and std.dev: (1695.90, 1749.72)
[0000][PE] low and high boundaries for proper pairs: (1, 9218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1038, 1254, 1609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2751)
[0000][PE] mean and std.dev: (1272.27, 519.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 405.277 CPU sec, 22.773 real sec
[0000] Calling mem_process_seqs.., task: 1906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516089, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 584, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (725.11, 578.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (450, 1098, 2685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7155)
[0000][PE] mean and std.dev: (1447.26, 1207.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 406.964 CPU sec, 22.836 real sec
[0000] Calling mem_process_seqs.., task: 1907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516909, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 853, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3573)
[0000][PE] mean and std.dev: (912.36, 766.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (927, 1201, 2417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5397)
[0000][PE] mean and std.dev: (1717.68, 1281.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6887)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 404.841 CPU sec, 22.692 real sec
[0000] Calling mem_process_seqs.., task: 1908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516077, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 817, 1105)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2721)
[0000][PE] mean and std.dev: (768.35, 605.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1618, 2232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4922)
[0000][PE] mean and std.dev: (1567.12, 672.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 407.951 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 1909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516669, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 845, 2686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7224)
[0000][PE] mean and std.dev: (1478.50, 1497.09)
[0000][PE] low and high boundaries for proper pairs: (1, 9493)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (641, 991, 2131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5111)
[0000][PE] mean and std.dev: (1421.24, 986.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 405.734 CPU sec, 22.741 real sec
[0000] Calling mem_process_seqs.., task: 1910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516428, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 875, 1634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4254)
[0000][PE] mean and std.dev: (1094.32, 945.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5564)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 404.367 CPU sec, 22.648 real sec
[0000] Calling mem_process_seqs.., task: 1911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516680, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (364, 1123, 1881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4915)
[0000][PE] mean and std.dev: (1300.13, 1118.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6432)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1213, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (302, 2217)
[0000][PE] mean and std.dev: (1118.30, 313.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 401.784 CPU sec, 22.525 real sec
[0000] Calling mem_process_seqs.., task: 1912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516771, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (639, 1092, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (1244.22, 994.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5275)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (372, 1100, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5391)
[0000][PE] mean and std.dev: (1253.50, 953.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 402.335 CPU sec, 22.529 real sec
[0000] Calling mem_process_seqs.., task: 1913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516572, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 843, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3837)
[0000][PE] mean and std.dev: (946.79, 859.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1401, 2224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5038)
[0000][PE] mean and std.dev: (1412.88, 746.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 404.211 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516590, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 448, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4869)
[0000][PE] mean and std.dev: (892.11, 969.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6412)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1144, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2880)
[0000][PE] mean and std.dev: (1126.40, 483.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3532)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 412.636 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 1915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206266
	[0000][ M::kt_pipeline] read 1206266 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516492, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 477, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3612)
[0000][PE] mean and std.dev: (697.59, 676.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1047, 1225, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4314)
[0000][PE] mean and std.dev: (1272.50, 621.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 404.247 CPU sec, 22.662 real sec
[0000] Calling mem_process_seqs.., task: 1916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206572
	[0000][ M::kt_pipeline] read 1206572 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516415, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 857, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3220)
[0000][PE] mean and std.dev: (792.00, 521.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4191)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1103, 2095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1238.33, 981.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206266 reads in 407.786 CPU sec, 22.871 real sec
[0000] Calling mem_process_seqs.., task: 1917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516102, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 489, 1461)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3909)
[0000][PE] mean and std.dev: (878.67, 956.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5133)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1167, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (1175.42, 501.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206572 reads in 410.294 CPU sec, 22.970 real sec
[0000] Calling mem_process_seqs.., task: 1918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516392, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 691, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (919.79, 763.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4314)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1053, 1306, 1600)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2694)
[0000][PE] mean and std.dev: (1178.00, 260.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 404.783 CPU sec, 22.680 real sec
[0000] Calling mem_process_seqs.., task: 1919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516413, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (589, 1174, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4912)
[0000][PE] mean and std.dev: (1489.73, 1256.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1355, 1856, 2290)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4160)
[0000][PE] mean and std.dev: (1671.06, 650.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5095)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 403.941 CPU sec, 22.614 real sec
[0000] Calling mem_process_seqs.., task: 1920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516605, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (387, 988, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2940)
[0000][PE] mean and std.dev: (924.37, 651.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3791)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (553, 699, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3433)
[0000][PE] mean and std.dev: (1051.55, 859.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 410.425 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 1921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516573, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (439, 1028, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3367)
[0000][PE] mean and std.dev: (908.22, 631.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1041, 1688, 2370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5028)
[0000][PE] mean and std.dev: (1695.86, 959.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 410.693 CPU sec, 22.992 real sec
[0000] Calling mem_process_seqs.., task: 1922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516660, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 980, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4328)
[0000][PE] mean and std.dev: (1017.23, 762.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1004, 1214, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (1238.72, 419.79)
[0000][PE] low and high boundaries for proper pairs: (1, 3264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 406.512 CPU sec, 22.768 real sec
[0000] Calling mem_process_seqs.., task: 1923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516648, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 320, 971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2495)
[0000][PE] mean and std.dev: (488.77, 492.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3257)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (729, 1132, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (1304.12, 816.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4961)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 405.617 CPU sec, 22.724 real sec
[0000] Calling mem_process_seqs.., task: 1924
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516795, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (292, 788, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (876.95, 689.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.42, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1265, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4469)
[0000][PE] mean and std.dev: (1388.65, 974.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5769)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 405.355 CPU sec, 22.713 real sec
[0000] Calling mem_process_seqs.., task: 1925
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206530
	[0000][ M::kt_pipeline] read 1206530 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516145, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 492, 1313)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3273)
[0000][PE] mean and std.dev: (737.71, 574.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (897, 1639, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6102)
[0000][PE] mean and std.dev: (1941.74, 1591.23)
[0000][PE] low and high boundaries for proper pairs: (1, 8307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 410.658 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 1926
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516708, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 958, 2413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6631)
[0000][PE] mean and std.dev: (1477.61, 1448.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (868, 1097, 2256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1636.29, 1142.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206530 reads in 407.340 CPU sec, 22.858 real sec
[0000] Calling mem_process_seqs.., task: 1927
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516291, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 418, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4757)
[0000][PE] mean and std.dev: (1108.52, 1269.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1102, 1648, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (1557.85, 778.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 404.340 CPU sec, 22.659 real sec
[0000] Calling mem_process_seqs.., task: 1928
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517188, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (674, 1004, 1948)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4496)
[0000][PE] mean and std.dev: (1160.72, 853.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5770)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (973, 1256, 2181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4597)
[0000][PE] mean and std.dev: (1553.31, 997.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 402.646 CPU sec, 22.563 real sec
[0000] Calling mem_process_seqs.., task: 1929
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516842, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (365, 1199, 1563)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (1036.53, 723.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (989, 1080, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3620)
[0000][PE] mean and std.dev: (1184.00, 427.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4497)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 404.922 CPU sec, 22.697 real sec
[0000] Calling mem_process_seqs.., task: 1930
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516941, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 460, 1541)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3947)
[0000][PE] mean and std.dev: (858.06, 900.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5150)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (887, 1238, 2681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6269)
[0000][PE] mean and std.dev: (1758.90, 1393.89)
[0000][PE] low and high boundaries for proper pairs: (1, 8063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 401.658 CPU sec, 22.523 real sec
[0000] Calling mem_process_seqs.., task: 1931
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516797, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 618, 2324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6516)
[0000][PE] mean and std.dev: (1387.04, 1433.13)
[0000][PE] low and high boundaries for proper pairs: (1, 8612)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1254, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6553)
[0000][PE] mean and std.dev: (1714.85, 1350.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 406.446 CPU sec, 22.774 real sec
[0000] Calling mem_process_seqs.., task: 1932
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516727, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (455, 711, 2749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7337)
[0000][PE] mean and std.dev: (2055.27, 2384.22)
[0000][PE] low and high boundaries for proper pairs: (1, 11592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1425, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (1232.67, 474.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 405.306 CPU sec, 22.714 real sec
[0000] Calling mem_process_seqs.., task: 1933
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516091, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 422, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3894)
[0000][PE] mean and std.dev: (783.23, 786.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1278, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3803)
[0000][PE] mean and std.dev: (1322.24, 640.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4773)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 406.467 CPU sec, 22.806 real sec
[0000] Calling mem_process_seqs.., task: 1934
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 516196, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (729, 1075, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3387)
[0000][PE] mean and std.dev: (1128.03, 672.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.92, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1134, 1421, 2390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4902)
[0000][PE] mean and std.dev: (1538.40, 651.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6158)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 405.082 CPU sec, 22.690 real sec
[0000] Calling mem_process_seqs.., task: 1935
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206176
	[0000][ M::kt_pipeline] read 1206176 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516294, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 795, 1652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1109.96, 1031.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5594)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1075, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (957.15, 463.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 406.197 CPU sec, 22.744 real sec
[0000] Calling mem_process_seqs.., task: 1936
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516382, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (530, 1081, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4280)
[0000][PE] mean and std.dev: (1212.50, 889.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (967, 1239, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (1321.52, 592.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206176 reads in 407.558 CPU sec, 22.840 real sec
[0000] Calling mem_process_seqs.., task: 1937
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516490, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 581, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3201)
[0000][PE] mean and std.dev: (824.04, 674.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4176)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (860, 1156, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1239.80, 752.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 407.872 CPU sec, 22.895 real sec
[0000] Calling mem_process_seqs.., task: 1938
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516802, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 595, 1615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (897.25, 929.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5479)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 398.804 CPU sec, 22.475 real sec
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000142 bp)...
[0000] Calling mem_process_seqs.., task: 1939
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516478, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 1860, 3040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8422)
[0000][PE] mean and std.dev: (1511.33, 1280.29)
[0000][PE] low and high boundaries for proper pairs: (1, 11113)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1121, 1335, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 2621)
[0000][PE] mean and std.dev: (1175.20, 473.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 410.590 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 1940
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 515952, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 408, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2649)
[0000][PE] mean and std.dev: (607.78, 552.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1063, 1400, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4879)
[0000][PE] mean and std.dev: (1508.31, 722.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 412.450 CPU sec, 23.104 real sec
[0000] Calling mem_process_seqs.., task: 1941
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516799, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 1377, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1230.68, 1034.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.23, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1033, 1404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (961.31, 366.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 410.468 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 1942
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206598
	[0000][ M::kt_pipeline] read 1206598 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516846, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (306, 683, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (870.00, 679.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4954)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (893, 1425, 2145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4649)
[0000][PE] mean and std.dev: (1369.50, 856.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5901)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 412.610 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 1943
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516623, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 352, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (455.00, 378.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1050, 1252, 2198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4494)
[0000][PE] mean and std.dev: (1531.00, 776.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206598 reads in 407.588 CPU sec, 22.841 real sec
[0000] Calling mem_process_seqs.., task: 1944
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516641, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (444, 841, 1997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1132.08, 798.23)
[0000][PE] low and high boundaries for proper pairs: (1, 6656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1043, 1159, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (29, 2564)
[0000][PE] mean and std.dev: (1130.57, 390.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 411.713 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 1945
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516168, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 695, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3180)
[0000][PE] mean and std.dev: (849.63, 579.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4112)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (736, 1158, 1771)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3841)
[0000][PE] mean and std.dev: (1322.62, 894.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 412.125 CPU sec, 23.084 real sec
[0000] Calling mem_process_seqs.., task: 1946
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516079, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 706, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (724.93, 486.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1322, 1790, 2515)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4901)
[0000][PE] mean and std.dev: (1436.09, 649.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 411.719 CPU sec, 23.095 real sec
[0000] Calling mem_process_seqs.., task: 1947
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516323, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (834, 1381, 4548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11976)
[0000][PE] mean and std.dev: (2617.33, 2613.59)
[0000][PE] low and high boundaries for proper pairs: (1, 15690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1327, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3259)
[0000][PE] mean and std.dev: (1277.13, 502.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 408.346 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 1948
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516260, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 812, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3881)
[0000][PE] mean and std.dev: (904.50, 823.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1199, 1561, 2309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4529)
[0000][PE] mean and std.dev: (1473.42, 805.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 409.468 CPU sec, 22.932 real sec
[0000] Calling mem_process_seqs.., task: 1949
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516814, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 935, 2026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5314)
[0000][PE] mean and std.dev: (1213.00, 1111.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (921, 1217, 2414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5400)
[0000][PE] mean and std.dev: (1639.05, 1157.75)
[0000][PE] low and high boundaries for proper pairs: (1, 6893)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 409.958 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 1950
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516451, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (268, 577, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2227)
[0000][PE] mean and std.dev: (645.57, 460.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2880)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1301, 1698, 3354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7460)
[0000][PE] mean and std.dev: (2096.13, 1349.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 406.786 CPU sec, 22.779 real sec
[0000] Calling mem_process_seqs.., task: 1951
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206438
	[0000][ M::kt_pipeline] read 1206438 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516888, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (297, 972, 2438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6720)
[0000][PE] mean and std.dev: (1494.84, 1543.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.62, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (912, 1359, 1964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1096.90, 596.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 406.320 CPU sec, 22.739 real sec
[0000] Calling mem_process_seqs.., task: 1952
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516280, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 380, 1455)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (709.05, 674.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1056, 1830, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4542)
[0000][PE] mean and std.dev: (1705.12, 845.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206438 reads in 412.833 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 1953
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516374, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (486, 1416, 1959)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4905)
[0000][PE] mean and std.dev: (1126.81, 660.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6378)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (717, 1155, 1576)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3294)
[0000][PE] mean and std.dev: (1166.12, 677.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 407.113 CPU sec, 22.809 real sec
[0000] Calling mem_process_seqs.., task: 1954
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516346, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (429, 770, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2856)
[0000][PE] mean and std.dev: (928.30, 661.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.60, 113.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1252, 2240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5582)
[0000][PE] mean and std.dev: (1282.95, 915.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 412.670 CPU sec, 23.105 real sec
[0000] Calling mem_process_seqs.., task: 1955
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516569, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 873, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3266)
[0000][PE] mean and std.dev: (822.57, 640.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.42, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (819, 1772, 3129)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7749)
[0000][PE] mean and std.dev: (1908.93, 1620.99)
[0000][PE] low and high boundaries for proper pairs: (1, 10059)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 411.808 CPU sec, 23.089 real sec
[0000] Calling mem_process_seqs.., task: 1956
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516734, 3, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 388, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (437.81, 342.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2116)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (863, 1272, 2342)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5300)
[0000][PE] mean and std.dev: (1518.25, 961.73)
[0000][PE] low and high boundaries for proper pairs: (1, 6779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 409.377 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 1957
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206272
	[0000][ M::kt_pipeline] read 1206272 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516331, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 393, 1218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (692.44, 656.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (892, 1732, 2446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5554)
[0000][PE] mean and std.dev: (1506.50, 819.10)
[0000][PE] low and high boundaries for proper pairs: (1, 7108)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 409.935 CPU sec, 22.942 real sec
[0000] Calling mem_process_seqs.., task: 1958
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516682, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 776, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (915.00, 908.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5272)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.27, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 1113, 2729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6953)
[0000][PE] mean and std.dev: (1588.41, 1508.82)
[0000][PE] low and high boundaries for proper pairs: (1, 9065)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206272 reads in 414.262 CPU sec, 23.233 real sec
[0000] Calling mem_process_seqs.., task: 1959
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206444
	[0000][ M::kt_pipeline] read 1206444 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516344, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (312, 832, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4899)
[0000][PE] mean and std.dev: (890.17, 757.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6428)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (975, 1318, 2213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4689)
[0000][PE] mean and std.dev: (1403.73, 885.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 412.182 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 1960
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516731, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (321, 480, 1622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4224)
[0000][PE] mean and std.dev: (947.11, 859.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 2067, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6540)
[0000][PE] mean and std.dev: (1704.60, 879.86)
[0000][PE] low and high boundaries for proper pairs: (1, 8394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206444 reads in 408.467 CPU sec, 22.904 real sec
[0000] Calling mem_process_seqs.., task: 1961
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515959, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (404, 846, 1480)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (757.37, 455.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1084, 1419, 2632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5728)
[0000][PE] mean and std.dev: (1738.74, 999.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 411.203 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 1962
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206330
	[0000][ M::kt_pipeline] read 1206330 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516524, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 406, 1899)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5265)
[0000][PE] mean and std.dev: (825.86, 921.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (959, 1433, 2610)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5912)
[0000][PE] mean and std.dev: (1780.89, 1197.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7563)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 411.565 CPU sec, 23.088 real sec
[0000] Calling mem_process_seqs.., task: 1963
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206328
	[0000][ M::kt_pipeline] read 1206328 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516556, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (384, 1064, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4338)
[0000][PE] mean and std.dev: (1252.87, 1103.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5668)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (756, 1246, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5913)
[0000][PE] mean and std.dev: (1442.42, 1198.57)
[0000][PE] low and high boundaries for proper pairs: (1, 7632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206330 reads in 407.986 CPU sec, 22.835 real sec
[0000] Calling mem_process_seqs.., task: 1964
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516725, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 429, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2527)
[0000][PE] mean and std.dev: (643.92, 571.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (667, 1543, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6727)
[0000][PE] mean and std.dev: (1374.91, 982.34)
[0000][PE] low and high boundaries for proper pairs: (1, 8747)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206328 reads in 411.877 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 1965
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516417, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (275, 1187, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5828)
[0000][PE] mean and std.dev: (1539.95, 1534.22)
[0000][PE] low and high boundaries for proper pairs: (1, 7679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.69, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (889, 1433, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4852)
[0000][PE] mean and std.dev: (1420.82, 888.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 411.922 CPU sec, 23.107 real sec
[0000] Calling mem_process_seqs.., task: 1966
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516770, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (360, 1062, 1788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4644)
[0000][PE] mean and std.dev: (1118.16, 918.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (492, 1746, 2764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7308)
[0000][PE] mean and std.dev: (1991.76, 1814.79)
[0000][PE] low and high boundaries for proper pairs: (1, 9580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 419.003 CPU sec, 23.488 real sec
[0000] Calling mem_process_seqs.., task: 1967
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1206516
	[0000][ M::kt_pipeline] read 1206516 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517032, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 742, 1440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (893.54, 814.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4800)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1161, 1675, 2354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4740)
[0000][PE] mean and std.dev: (1870.52, 914.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 411.928 CPU sec, 23.095 real sec
[0000] Calling mem_process_seqs.., task: 1968
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206516
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516552, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1010, 1511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3903)
[0000][PE] mean and std.dev: (911.52, 736.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5099)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.56, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1164, 1460, 2832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1795.11, 951.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206516 reads in 412.588 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 1969
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516182, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 992, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4142)
[0000][PE] mean and std.dev: (1122.93, 1006.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5439)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (385, 862, 2720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7390)
[0000][PE] mean and std.dev: (1407.50, 1376.23)
[0000][PE] low and high boundaries for proper pairs: (1, 9725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 408.623 CPU sec, 22.920 real sec
[0000] Calling mem_process_seqs.., task: 1970
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516154, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 323, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3593)
[0000][PE] mean and std.dev: (652.38, 801.48)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (894, 1705, 2127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4593)
[0000][PE] mean and std.dev: (1518.23, 735.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 411.141 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 1971
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516793, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 383, 1785)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4867)
[0000][PE] mean and std.dev: (835.32, 898.81)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1189, 1723)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3295)
[0000][PE] mean and std.dev: (1187.64, 574.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 408.207 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 1972
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516555, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (310, 766, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3343)
[0000][PE] mean and std.dev: (771.44, 687.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (731, 1333, 2492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6014)
[0000][PE] mean and std.dev: (1641.86, 1339.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 415.888 CPU sec, 23.406 real sec
[0000] Calling mem_process_seqs.., task: 1973
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516464, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (432, 864, 1944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1210.22, 1101.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1130, 1536, 1658)
[0000][PE] low and high boundaries for computing mean and std.dev: (74, 2714)
[0000][PE] mean and std.dev: (1323.06, 468.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 408.326 CPU sec, 22.877 real sec
[0000] Calling mem_process_seqs.., task: 1974
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206518
	[0000][ M::kt_pipeline] read 1206518 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516995, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 676, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4726)
[0000][PE] mean and std.dev: (915.64, 896.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1141, 1433, 2083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1423.52, 680.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4909)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 408.703 CPU sec, 22.911 real sec
[0000] Calling mem_process_seqs.., task: 1975
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206394
	[0000][ M::kt_pipeline] read 1206394 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516824, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 728, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (725.62, 711.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4167)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (936, 1335, 1726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3306)
[0000][PE] mean and std.dev: (1304.00, 660.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4096)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206518 reads in 411.916 CPU sec, 23.074 real sec
[0000] Calling mem_process_seqs.., task: 1976
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516824, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 1087, 2618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7108)
[0000][PE] mean and std.dev: (1740.04, 1883.95)
[0000][PE] low and high boundaries for proper pairs: (1, 9353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1081, 2277, 3042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6964)
[0000][PE] mean and std.dev: (2189.96, 1363.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206394 reads in 409.544 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 1977
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (34, 516330, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 798, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (824.47, 651.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1385, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3376)
[0000][PE] mean and std.dev: (1340.47, 858.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 410.182 CPU sec, 22.983 real sec
[0000] Calling mem_process_seqs.., task: 1978
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516716, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 761, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (735.35, 459.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (964, 1404, 2029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4159)
[0000][PE] mean and std.dev: (1514.31, 735.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 416.709 CPU sec, 23.356 real sec
[0000] Calling mem_process_seqs.., task: 1979
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206316
	[0000][ M::kt_pipeline] read 1206316 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516563, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 781, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (817.29, 533.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (985, 1590, 3249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7777)
[0000][PE] mean and std.dev: (1803.00, 1371.14)
[0000][PE] low and high boundaries for proper pairs: (1, 10041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 409.747 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 1980
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206302
	[0000][ M::kt_pipeline] read 1206302 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516398, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1037, 1778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4662)
[0000][PE] mean and std.dev: (1293.11, 1223.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6187)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1396, 2503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5521)
[0000][PE] mean and std.dev: (1818.62, 1309.81)
[0000][PE] low and high boundaries for proper pairs: (1, 7058)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206316 reads in 413.660 CPU sec, 23.205 real sec
[0000] Calling mem_process_seqs.., task: 1981
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516484, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 638, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (695.29, 561.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.57, 114.02)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1293, 1754, 2876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6042)
[0000][PE] mean and std.dev: (2032.22, 1067.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206302 reads in 411.787 CPU sec, 23.111 real sec
[0000] Calling mem_process_seqs.., task: 1982
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516764, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (496, 1295, 3667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10009)
[0000][PE] mean and std.dev: (2465.18, 2880.81)
[0000][PE] low and high boundaries for proper pairs: (1, 13988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (752, 1808, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5840)
[0000][PE] mean and std.dev: (1476.12, 996.29)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 413.164 CPU sec, 23.161 real sec
[0000] Calling mem_process_seqs.., task: 1983
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517015, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 419, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (745.13, 662.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1205, 1867, 3353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7649)
[0000][PE] mean and std.dev: (2257.69, 1494.46)
[0000][PE] low and high boundaries for proper pairs: (1, 9797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 407.033 CPU sec, 22.800 real sec
[0000] Calling mem_process_seqs.., task: 1984
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206506
	[0000][ M::kt_pipeline] read 1206506 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516171, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 902, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4036)
[0000][PE] mean and std.dev: (817.79, 689.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1362, 2326, 3068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6480)
[0000][PE] mean and std.dev: (2479.62, 1447.80)
[0000][PE] low and high boundaries for proper pairs: (1, 8271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 409.656 CPU sec, 22.940 real sec
[0000] Calling mem_process_seqs.., task: 1985
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206290
	[0000][ M::kt_pipeline] read 1206290 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206506
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 515780, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (435, 889, 1205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2745)
[0000][PE] mean and std.dev: (914.70, 553.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (446, 1262, 1924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4880)
[0000][PE] mean and std.dev: (1237.65, 702.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6358)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206506 reads in 413.122 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 1986
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206300
	[0000][ M::kt_pipeline] read 1206300 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516718, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (314, 1131, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (856.89, 781.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (962, 1338, 2565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5771)
[0000][PE] mean and std.dev: (1906.05, 1299.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7374)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206290 reads in 409.993 CPU sec, 22.994 real sec
[0000] Calling mem_process_seqs.., task: 1987
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516354, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 532, 1241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3263)
[0000][PE] mean and std.dev: (621.95, 543.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1064, 1507, 2491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5345)
[0000][PE] mean and std.dev: (1626.85, 912.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206300 reads in 414.096 CPU sec, 23.286 real sec
[0000] Calling mem_process_seqs.., task: 1988
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516552, 10, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (402, 916, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5289)
[0000][PE] mean and std.dev: (1183.92, 1080.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (690, 2260, 3162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8106)
[0000][PE] mean and std.dev: (2179.60, 1844.32)
[0000][PE] low and high boundaries for proper pairs: (1, 10578)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1105, 1445, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (1436.25, 710.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5297)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 407.778 CPU sec, 22.844 real sec
[0000] Calling mem_process_seqs.., task: 1989
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516831, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (315, 1151, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6315)
[0000][PE] mean and std.dev: (1315.58, 1323.61)
[0000][PE] low and high boundaries for proper pairs: (1, 8315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (737, 1083, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3911)
[0000][PE] mean and std.dev: (1037.33, 604.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4969)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 407.680 CPU sec, 22.838 real sec
[0000] Calling mem_process_seqs.., task: 1990
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516285, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 448, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (669.23, 502.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (371, 1314, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5474)
[0000][PE] mean and std.dev: (1468.25, 1231.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7175)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 412.831 CPU sec, 23.200 real sec
[0000] Calling mem_process_seqs.., task: 1991
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516847, 7, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 867, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4227)
[0000][PE] mean and std.dev: (909.62, 685.31)
[0000][PE] low and high boundaries for proper pairs: (1, 5497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (871, 1077, 2039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4375)
[0000][PE] mean and std.dev: (1508.54, 1113.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5962)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 410.511 CPU sec, 23.022 real sec
[0000] Calling mem_process_seqs.., task: 1992
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 516537, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 950, 3005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8367)
[0000][PE] mean and std.dev: (1542.50, 1548.66)
[0000][PE] low and high boundaries for proper pairs: (1, 11048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1011, 1349, 2017)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4029)
[0000][PE] mean and std.dev: (1444.33, 929.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5162)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 415.008 CPU sec, 23.271 real sec
[0000] Calling mem_process_seqs.., task: 1993
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516211, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 607, 1102)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2700)
[0000][PE] mean and std.dev: (648.22, 432.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (916, 1336, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1449.31, 1030.12)
[0000][PE] low and high boundaries for proper pairs: (1, 6540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 412.775 CPU sec, 23.127 real sec
[0000] Calling mem_process_seqs.., task: 1994
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206426
	[0000][ M::kt_pipeline] read 1206426 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516269, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 308, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3008)
[0000][PE] mean and std.dev: (636.06, 609.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (486, 1171, 1955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4893)
[0000][PE] mean and std.dev: (1379.13, 1024.13)
[0000][PE] low and high boundaries for proper pairs: (1, 6362)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 412.753 CPU sec, 23.133 real sec
[0000] Calling mem_process_seqs.., task: 1995
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516467, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (390, 1137, 1916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4968)
[0000][PE] mean and std.dev: (1051.32, 738.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (604, 1140, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5860)
[0000][PE] mean and std.dev: (1599.10, 1430.43)
[0000][PE] low and high boundaries for proper pairs: (1, 7612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206426 reads in 408.116 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 1996
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516562, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 508, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4881)
[0000][PE] mean and std.dev: (981.85, 1025.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6395)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1232, 2288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5146)
[0000][PE] mean and std.dev: (1294.38, 798.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 408.595 CPU sec, 22.868 real sec
[0000] Calling mem_process_seqs.., task: 1997
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206238
	[0000][ M::kt_pipeline] read 1206238 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516416, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (386, 1004, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3671)
[0000][PE] mean and std.dev: (879.11, 553.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (595, 881, 2210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5440)
[0000][PE] mean and std.dev: (1633.35, 1569.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 406.574 CPU sec, 22.758 real sec
[0000] Calling mem_process_seqs.., task: 1998
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1206116
	[0000][ M::kt_pipeline] read 1206116 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516597, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 392, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2515)
[0000][PE] mean and std.dev: (491.56, 463.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (833, 1312, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3722)
[0000][PE] mean and std.dev: (1246.31, 663.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4685)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206238 reads in 407.750 CPU sec, 22.849 real sec
[0000] Calling mem_process_seqs.., task: 1999
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206414
	[0000][ M::kt_pipeline] read 1206414 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516484, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 412, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2951)
[0000][PE] mean and std.dev: (645.40, 640.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3840)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1196, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7765)
[0000][PE] mean and std.dev: (1760.00, 1385.20)
[0000][PE] low and high boundaries for proper pairs: (1, 10043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206116 reads in 411.074 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 2000
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516798, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 752, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (864.89, 580.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.51, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1091, 1707, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4025)
[0000][PE] mean and std.dev: (1523.83, 496.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5003)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206414 reads in 409.637 CPU sec, 22.984 real sec
[0000] Calling mem_process_seqs.., task: 2001
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206468
	[0000][ M::kt_pipeline] read 1206468 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516501, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (408, 1013, 3456)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9552)
[0000][PE] mean and std.dev: (1837.95, 1813.14)
[0000][PE] low and high boundaries for proper pairs: (1, 12600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1215, 1504, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4080)
[0000][PE] mean and std.dev: (1631.60, 750.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 410.614 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 2002
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517018, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 634, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (999.12, 937.44)
[0000][PE] low and high boundaries for proper pairs: (1, 5483)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (891, 1116, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (1208.00, 628.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206468 reads in 408.208 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 2003
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516747, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (291, 485, 1566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4116)
[0000][PE] mean and std.dev: (882.08, 725.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.03, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1257, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4210)
[0000][PE] mean and std.dev: (1242.24, 690.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5331)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 413.843 CPU sec, 23.203 real sec
[0000] Calling mem_process_seqs.., task: 2004
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206236
	[0000][ M::kt_pipeline] read 1206236 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516631, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 807, 1873)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4853)
[0000][PE] mean and std.dev: (1064.52, 994.68)
[0000][PE] low and high boundaries for proper pairs: (1, 6343)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1404, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (1277.08, 501.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 408.297 CPU sec, 22.885 real sec
[0000] Calling mem_process_seqs.., task: 2005
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206312
	[0000][ M::kt_pipeline] read 1206312 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 517054, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (662, 1214, 3526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9254)
[0000][PE] mean and std.dev: (2258.15, 2379.47)
[0000][PE] low and high boundaries for proper pairs: (1, 12118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.81, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (837, 1343, 1602)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (1241.40, 598.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206236 reads in 406.466 CPU sec, 22.764 real sec
[0000] Calling mem_process_seqs.., task: 2006
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516539, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 577, 1793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (1045.61, 1159.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6278)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1423, 1967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3959)
[0000][PE] mean and std.dev: (1276.06, 647.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4955)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206312 reads in 410.072 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 2007
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516354, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 394, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (655.73, 549.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5286)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1225, 1763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3247)
[0000][PE] mean and std.dev: (1178.88, 609.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3989)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 416.772 CPU sec, 23.364 real sec
[0000] Calling mem_process_seqs.., task: 2008
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 515798, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (285, 1375, 1831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4923)
[0000][PE] mean and std.dev: (1091.00, 731.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (677, 1187, 1611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (1204.06, 734.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 418.667 CPU sec, 23.484 real sec
[0000] Calling mem_process_seqs.., task: 2009
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516583, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 733, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1224.10, 1150.19)
[0000][PE] low and high boundaries for proper pairs: (1, 7891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (901, 1198, 1748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3442)
[0000][PE] mean and std.dev: (1127.37, 575.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 415.489 CPU sec, 23.329 real sec
[0000] Calling mem_process_seqs.., task: 2010
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1206314
	[0000][ M::kt_pipeline] read 1206314 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516802, 5, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (367, 718, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2461)
[0000][PE] mean and std.dev: (808.64, 560.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.47, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (913, 1248, 1290)
[0000][PE] low and high boundaries for computing mean and std.dev: (159, 2044)
[0000][PE] mean and std.dev: (1055.56, 379.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2572)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 409.548 CPU sec, 23.089 real sec
[0000] Calling mem_process_seqs.., task: 2011
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206294
	[0000][ M::kt_pipeline] read 1206294 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516764, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (302, 512, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2363)
[0000][PE] mean and std.dev: (516.73, 336.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.67, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1165, 1608, 2776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5998)
[0000][PE] mean and std.dev: (1802.82, 972.98)
[0000][PE] low and high boundaries for proper pairs: (1, 7609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206314 reads in 413.037 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 2012
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516356, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1129, 2535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6739)
[0000][PE] mean and std.dev: (1652.39, 1360.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 113.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206294 reads in 411.342 CPU sec, 23.059 real sec
[0000] Calling mem_process_seqs.., task: 2013
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516917, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 953, 1378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (906.58, 613.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.48, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (865, 1412, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5032)
[0000][PE] mean and std.dev: (1501.57, 718.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6421)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 409.559 CPU sec, 22.963 real sec
[0000] Calling mem_process_seqs.., task: 2014
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516488, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 472, 1057)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (690.68, 564.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (992, 1321, 1731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3209)
[0000][PE] mean and std.dev: (1148.50, 475.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 413.056 CPU sec, 23.140 real sec
[0000] Calling mem_process_seqs.., task: 2015
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516676, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 849, 1424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3872)
[0000][PE] mean and std.dev: (718.59, 577.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5096)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (719, 1156, 1625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (1175.50, 732.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4343)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 408.221 CPU sec, 22.866 real sec
[0000] Calling mem_process_seqs.., task: 2016
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206534
	[0000][ M::kt_pipeline] read 1206534 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516749, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 615, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4299)
[0000][PE] mean and std.dev: (981.83, 912.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.28, 114.08)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (825, 1348, 2848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6894)
[0000][PE] mean and std.dev: (1559.33, 1013.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 415.398 CPU sec, 23.264 real sec
[0000] Calling mem_process_seqs.., task: 2017
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516484, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 675, 1856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5046)
[0000][PE] mean and std.dev: (1122.33, 1180.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1325, 1874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3994)
[0000][PE] mean and std.dev: (1221.88, 606.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206534 reads in 410.702 CPU sec, 23.029 real sec
[0000] Calling mem_process_seqs.., task: 2018
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1206424
	[0000][ M::kt_pipeline] read 1206424 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516264, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (418, 907, 1581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3907)
[0000][PE] mean and std.dev: (1019.25, 769.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.38, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 1525, 2030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4582)
[0000][PE] mean and std.dev: (1289.62, 725.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 409.334 CPU sec, 22.927 real sec
[0000] Calling mem_process_seqs.., task: 2019
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516425, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 757, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (787.69, 647.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (735, 1281, 1783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3879)
[0000][PE] mean and std.dev: (1287.00, 676.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206424 reads in 409.823 CPU sec, 22.970 real sec
[0000] Calling mem_process_seqs.., task: 2020
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206282
	[0000][ M::kt_pipeline] read 1206282 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516658, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 813, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3644)
[0000][PE] mean and std.dev: (945.48, 781.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (919, 1321, 2448)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5506)
[0000][PE] mean and std.dev: (1620.31, 1096.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 408.788 CPU sec, 22.929 real sec
[0000] Calling mem_process_seqs.., task: 2021
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206466
	[0000][ M::kt_pipeline] read 1206466 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516881, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (595, 1608, 3829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10297)
[0000][PE] mean and std.dev: (2293.57, 2016.21)
[0000][PE] low and high boundaries for proper pairs: (1, 13531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1076, 1326, 1913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3587)
[0000][PE] mean and std.dev: (1233.25, 443.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206282 reads in 409.910 CPU sec, 22.973 real sec
[0000] Calling mem_process_seqs.., task: 2022
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 517081, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 790, 1950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5342)
[0000][PE] mean and std.dev: (1201.96, 1354.96)
[0000][PE] low and high boundaries for proper pairs: (1, 7038)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.47, 113.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (520, 1203, 1608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (1038.05, 588.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206466 reads in 409.160 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 2023
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 517000, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (304, 418, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (751.44, 631.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (847, 1270, 1949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4153)
[0000][PE] mean and std.dev: (1407.41, 770.04)
[0000][PE] low and high boundaries for proper pairs: (1, 5255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 410.559 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 2024
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206220
	[0000][ M::kt_pipeline] read 1206220 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516401, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (242, 401, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4664)
[0000][PE] mean and std.dev: (953.30, 976.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6138)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.34, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1179, 1712)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (1036.12, 476.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 411.630 CPU sec, 23.067 real sec
[0000] Calling mem_process_seqs.., task: 2025
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516550, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 778, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3039)
[0000][PE] mean and std.dev: (843.68, 774.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3962)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1028, 1726, 2728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6128)
[0000][PE] mean and std.dev: (1692.94, 983.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206220 reads in 411.560 CPU sec, 23.060 real sec
[0000] Calling mem_process_seqs.., task: 2026
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1206186
	[0000][ M::kt_pipeline] read 1206186 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516651, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 364, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5186)
[0000][PE] mean and std.dev: (1045.88, 1156.39)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1268, 2265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5217)
[0000][PE] mean and std.dev: (1661.61, 1148.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 409.951 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 2027
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516676, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 869, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3472)
[0000][PE] mean and std.dev: (771.39, 727.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4588)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (820, 1355, 2697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6451)
[0000][PE] mean and std.dev: (1688.00, 1310.35)
[0000][PE] low and high boundaries for proper pairs: (1, 8328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206186 reads in 411.662 CPU sec, 23.058 real sec
[0000] Calling mem_process_seqs.., task: 2028
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000266, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000266 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516741, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (316, 434, 1630)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4258)
[0000][PE] mean and std.dev: (763.19, 703.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (487.09, 114.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1080, 1502, 2349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1743.70, 922.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6156)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 416.108 CPU sec, 23.477 real sec
[0000] Calling mem_process_seqs.., task: 2029
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516956, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (582, 1084, 2206)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5454)
[0000][PE] mean and std.dev: (1007.47, 718.06)
[0000][PE] low and high boundaries for proper pairs: (1, 7078)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (957, 1557, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4596)
[0000][PE] mean and std.dev: (1571.85, 959.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5809)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 410.819 CPU sec, 23.041 real sec
[0000] Calling mem_process_seqs.., task: 2030
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516125, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (330, 642, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (922.54, 797.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (876, 1190, 2126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4626)
[0000][PE] mean and std.dev: (1472.88, 1018.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 416.987 CPU sec, 23.372 real sec
[0000] Calling mem_process_seqs.., task: 2031
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516275, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 423, 2149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6215)
[0000][PE] mean and std.dev: (1147.29, 1365.50)
[0000][PE] low and high boundaries for proper pairs: (1, 8248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (638, 1365, 2112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (1353.11, 820.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 411.751 CPU sec, 23.122 real sec
[0000] Calling mem_process_seqs.., task: 2032
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516094, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 672, 2053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5487)
[0000][PE] mean and std.dev: (1003.08, 799.69)
[0000][PE] low and high boundaries for proper pairs: (1, 7204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1068, 1555, 2225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1610.25, 650.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 412.710 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 2033
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206244
	[0000][ M::kt_pipeline] read 1206244 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516045, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 416, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (674.56, 597.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1184, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (1210.35, 494.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3189)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 415.207 CPU sec, 23.297 real sec
[0000] Calling mem_process_seqs.., task: 2034
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516444, 9, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (398, 883, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (1059.27, 860.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5522)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (873, 1135, 2392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5430)
[0000][PE] mean and std.dev: (1570.67, 1166.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206244 reads in 413.582 CPU sec, 23.209 real sec
[0000] Calling mem_process_seqs.., task: 2035
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1206504
	[0000][ M::kt_pipeline] read 1206504 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516675, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 445, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3093)
[0000][PE] mean and std.dev: (772.75, 709.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1125, 1539, 2379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4887)
[0000][PE] mean and std.dev: (1924.67, 1228.27)
[0000][PE] low and high boundaries for proper pairs: (1, 6838)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 412.971 CPU sec, 23.143 real sec
[0000] Calling mem_process_seqs.., task: 2036
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206404
	[0000][ M::kt_pipeline] read 1206404 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516835, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 559, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (695.47, 592.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4607)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1083, 1465, 2188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4398)
[0000][PE] mean and std.dev: (1597.46, 739.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206504 reads in 408.944 CPU sec, 22.947 real sec
[0000] Calling mem_process_seqs.., task: 2037
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206382
	[0000][ M::kt_pipeline] read 1206382 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516447, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (373, 791, 1713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4393)
[0000][PE] mean and std.dev: (1174.74, 992.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1174, 1334, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (1480.67, 626.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206404 reads in 409.718 CPU sec, 22.967 real sec
[0000] Calling mem_process_seqs.., task: 2038
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516844, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (767, 1466, 2334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5468)
[0000][PE] mean and std.dev: (1421.28, 1091.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1256, 1963, 2445)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4823)
[0000][PE] mean and std.dev: (1858.29, 705.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6012)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206382 reads in 408.858 CPU sec, 22.930 real sec
[0000] Calling mem_process_seqs.., task: 2039
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516880, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (356, 1068, 2306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6206)
[0000][PE] mean and std.dev: (1325.47, 1121.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (870, 1112, 1711)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (1307.12, 717.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 407.682 CPU sec, 22.897 real sec
[0000] Calling mem_process_seqs.., task: 2040
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516845, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (348, 721, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4827)
[0000][PE] mean and std.dev: (1171.03, 1139.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6320)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (798, 1204, 1787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3765)
[0000][PE] mean and std.dev: (1308.29, 752.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4754)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 409.284 CPU sec, 22.937 real sec
[0000] Calling mem_process_seqs.., task: 2041
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516609, 3, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (461, 966, 2281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5921)
[0000][PE] mean and std.dev: (1304.00, 1222.82)
[0000][PE] low and high boundaries for proper pairs: (1, 7741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.49, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 413.145 CPU sec, 23.141 real sec
[0000] Calling mem_process_seqs.., task: 2042
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000218, nseq: 1206324
	[0000][ M::kt_pipeline] read 1206324 sequences (180000218 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516336, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (437, 849, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (938.59, 659.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (811, 1285, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (1202.93, 637.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 409.683 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 2043
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206398
	[0000][ M::kt_pipeline] read 1206398 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516354, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 377, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2730)
[0000][PE] mean and std.dev: (615.70, 576.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1166, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3557)
[0000][PE] mean and std.dev: (1338.54, 992.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206324 reads in 419.887 CPU sec, 23.525 real sec
[0000] Calling mem_process_seqs.., task: 2044
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1206350
	[0000][ M::kt_pipeline] read 1206350 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516478, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (323, 531, 1234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3056)
[0000][PE] mean and std.dev: (743.48, 585.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1247, 1508, 2266)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4304)
[0000][PE] mean and std.dev: (1666.79, 785.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5323)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206398 reads in 411.823 CPU sec, 23.098 real sec
[0000] Calling mem_process_seqs.., task: 2045
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1206490
	[0000][ M::kt_pipeline] read 1206490 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516749, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (694, 1206, 1862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (1395.33, 1004.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5414)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206350 reads in 411.361 CPU sec, 23.036 real sec
[0000] Calling mem_process_seqs.., task: 2046
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206490
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516248, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (355, 476, 2067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5491)
[0000][PE] mean and std.dev: (971.64, 909.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1086, 1248, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (1436.18, 485.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206490 reads in 410.361 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 2047
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206334
	[0000][ M::kt_pipeline] read 1206334 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516452, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (492, 1059, 1720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (1073.26, 806.24)
[0000][PE] low and high boundaries for proper pairs: (1, 5404)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1824, 2654)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6082)
[0000][PE] mean and std.dev: (2169.29, 1558.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8403)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 408.815 CPU sec, 22.855 real sec
[0000] Calling mem_process_seqs.., task: 2048
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1206456
	[0000][ M::kt_pipeline] read 1206456 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517006, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (303, 480, 1937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5205)
[0000][PE] mean and std.dev: (1113.10, 1296.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6839)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (828, 1613, 4830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12834)
[0000][PE] mean and std.dev: (2314.38, 2075.70)
[0000][PE] low and high boundaries for proper pairs: (1, 16836)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206334 reads in 412.296 CPU sec, 23.108 real sec
[0000] Calling mem_process_seqs.., task: 2049
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206594
	[0000][ M::kt_pipeline] read 1206594 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 517029, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1032, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (1038.10, 826.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.44, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1166, 1299, 1795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3053)
[0000][PE] mean and std.dev: (1272.53, 438.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206456 reads in 419.277 CPU sec, 23.466 real sec
[0000] Calling mem_process_seqs.., task: 2050
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516237, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 399, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3033)
[0000][PE] mean and std.dev: (873.11, 822.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (822, 1201, 2931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7149)
[0000][PE] mean and std.dev: (1556.75, 1250.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206594 reads in 415.263 CPU sec, 23.300 real sec
[0000] Calling mem_process_seqs.., task: 2051
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206422
	[0000][ M::kt_pipeline] read 1206422 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516724, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 781, 2882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8090)
[0000][PE] mean and std.dev: (1518.12, 1856.92)
[0000][PE] low and high boundaries for proper pairs: (1, 10694)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1192, 2042, 3332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7612)
[0000][PE] mean and std.dev: (2248.12, 1616.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9752)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 416.053 CPU sec, 23.334 real sec
[0000] Calling mem_process_seqs.., task: 2052
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516589, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 993, 2524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6870)
[0000][PE] mean and std.dev: (1372.62, 1433.52)
[0000][PE] low and high boundaries for proper pairs: (1, 9043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1393, 2526)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5604)
[0000][PE] mean and std.dev: (1807.00, 1378.42)
[0000][PE] low and high boundaries for proper pairs: (1, 7321)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206422 reads in 414.634 CPU sec, 23.224 real sec
[0000] Calling mem_process_seqs.., task: 2053
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1206342
	[0000][ M::kt_pipeline] read 1206342 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516540, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 506, 1735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (976.57, 794.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (983, 1373, 2467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5435)
[0000][PE] mean and std.dev: (1677.53, 844.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 412.385 CPU sec, 23.118 real sec
[0000] Calling mem_process_seqs.., task: 2054
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516561, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (385, 597, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3454)
[0000][PE] mean and std.dev: (878.96, 700.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4477)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.49, 113.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1167, 1568, 1827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3147)
[0000][PE] mean and std.dev: (1458.36, 564.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206342 reads in 414.003 CPU sec, 23.234 real sec
[0000] Calling mem_process_seqs.., task: 2055
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516511, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (472, 1328, 2315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6001)
[0000][PE] mean and std.dev: (1454.41, 1195.25)
[0000][PE] low and high boundaries for proper pairs: (1, 7844)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (853, 1093, 1929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4081)
[0000][PE] mean and std.dev: (1276.23, 817.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5157)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.995 CPU sec, 22.957 real sec
[0000] Calling mem_process_seqs.., task: 2056
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516641, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (800, 1304, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4127)
[0000][PE] mean and std.dev: (1271.40, 923.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (852, 1362, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6141)
[0000][PE] mean and std.dev: (1640.29, 1102.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 413.323 CPU sec, 23.187 real sec
[0000] Calling mem_process_seqs.., task: 2057
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516842, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (401, 1359, 2185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5753)
[0000][PE] mean and std.dev: (1415.17, 1202.91)
[0000][PE] low and high boundaries for proper pairs: (1, 7537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (625, 815, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (925.75, 497.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 410.857 CPU sec, 23.019 real sec
[0000] Calling mem_process_seqs.., task: 2058
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206226
	[0000][ M::kt_pipeline] read 1206226 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516785, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (631, 1053, 1909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4465)
[0000][PE] mean and std.dev: (1187.59, 721.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 970, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3533)
[0000][PE] mean and std.dev: (1064.10, 497.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 411.598 CPU sec, 23.075 real sec
[0000] Calling mem_process_seqs.., task: 2059
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000214, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516798, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (349, 938, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4537)
[0000][PE] mean and std.dev: (1028.76, 794.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1128, 1454, 1716)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2892)
[0000][PE] mean and std.dev: (1396.24, 511.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3480)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206226 reads in 412.051 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 2060
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 515915, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (428, 1201, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3026)
[0000][PE] mean and std.dev: (1004.65, 591.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (718, 1100, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2791)
[0000][PE] mean and std.dev: (1014.60, 541.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3482)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 413.642 CPU sec, 23.145 real sec
[0000] Calling mem_process_seqs.., task: 2061
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 515962, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (382, 829, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4576)
[0000][PE] mean and std.dev: (1231.05, 1227.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1386, 1993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1520.59, 715.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 411.243 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 2062
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516109, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 480, 1375)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3553)
[0000][PE] mean and std.dev: (719.29, 656.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (932, 1314, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3932)
[0000][PE] mean and std.dev: (1461.36, 912.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 411.018 CPU sec, 23.009 real sec
[0000] Calling mem_process_seqs.., task: 2063
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206192
	[0000][ M::kt_pipeline] read 1206192 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516311, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (357, 743, 1533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (1000.71, 896.77)
[0000][PE] low and high boundaries for proper pairs: (1, 5061)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (859, 1372, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5323)
[0000][PE] mean and std.dev: (1584.69, 985.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 416.421 CPU sec, 23.331 real sec
[0000] Calling mem_process_seqs.., task: 2064
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1206260
	[0000][ M::kt_pipeline] read 1206260 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516448, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (735, 1261, 1525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3105)
[0000][PE] mean and std.dev: (1037.50, 469.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (511, 1169, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4447)
[0000][PE] mean and std.dev: (1021.56, 640.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206192 reads in 409.474 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 2065
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516352, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (504, 1554, 2527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6573)
[0000][PE] mean and std.dev: (1410.67, 1058.19)
[0000][PE] low and high boundaries for proper pairs: (1, 8596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (472, 1372, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5149)
[0000][PE] mean and std.dev: (1302.33, 1032.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206260 reads in 417.116 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 2066
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516899, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 654, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4631)
[0000][PE] mean and std.dev: (1034.24, 1080.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.55, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (883, 1248, 2428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5518)
[0000][PE] mean and std.dev: (1387.43, 749.28)
[0000][PE] low and high boundaries for proper pairs: (1, 7063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 412.937 CPU sec, 23.147 real sec
[0000] Calling mem_process_seqs.., task: 2067
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1206484
	[0000][ M::kt_pipeline] read 1206484 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 517023, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 868, 1509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3871)
[0000][PE] mean and std.dev: (921.33, 676.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5052)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (659, 1588, 3053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7841)
[0000][PE] mean and std.dev: (1899.25, 1323.24)
[0000][PE] low and high boundaries for proper pairs: (1, 10235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 412.293 CPU sec, 23.124 real sec
[0000] Calling mem_process_seqs.., task: 2068
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516339, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 475, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (784.76, 759.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 113.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (978, 1488, 2507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5565)
[0000][PE] mean and std.dev: (1464.93, 900.45)
[0000][PE] low and high boundaries for proper pairs: (1, 7094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206484 reads in 413.655 CPU sec, 23.210 real sec
[0000] Calling mem_process_seqs.., task: 2069
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206496
	[0000][ M::kt_pipeline] read 1206496 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516830, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (470, 1114, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5048)
[0000][PE] mean and std.dev: (1259.32, 912.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6574)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.96, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (981, 1814, 2496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5526)
[0000][PE] mean and std.dev: (1605.13, 1007.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 414.196 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 2070
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516840, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (293, 681, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (890.45, 782.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4022)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1027, 1431, 2667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5947)
[0000][PE] mean and std.dev: (1705.76, 1065.38)
[0000][PE] low and high boundaries for proper pairs: (1, 7587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206496 reads in 411.217 CPU sec, 23.051 real sec
[0000] Calling mem_process_seqs.., task: 2071
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206388
	[0000][ M::kt_pipeline] read 1206388 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516608, 7, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 785, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (956.00, 732.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.46, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1280, 1628, 2322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4406)
[0000][PE] mean and std.dev: (1742.91, 739.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 412.225 CPU sec, 23.083 real sec
[0000] Calling mem_process_seqs.., task: 2072
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206388
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516613, 0, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (307, 657, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (616.68, 476.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (915, 1022, 2003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4179)
[0000][PE] mean and std.dev: (1228.64, 616.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206388 reads in 411.028 CPU sec, 23.031 real sec
[0000] Calling mem_process_seqs.., task: 2073
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206514
	[0000][ M::kt_pipeline] read 1206514 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516661, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (351, 787, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (897.60, 756.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1137, 1314, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2949)
[0000][PE] mean and std.dev: (1192.07, 607.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3622)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 412.395 CPU sec, 23.100 real sec
[0000] Calling mem_process_seqs.., task: 2074
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206464
	[0000][ M::kt_pipeline] read 1206464 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 515919, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (369, 975, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4026)
[0000][PE] mean and std.dev: (1033.75, 759.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (903, 1394, 1768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3498)
[0000][PE] mean and std.dev: (1315.46, 657.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206514 reads in 418.459 CPU sec, 23.481 real sec
[0000] Calling mem_process_seqs.., task: 2075
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516843, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 485, 1200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (759.48, 709.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.98, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1157, 1760, 3395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7871)
[0000][PE] mean and std.dev: (2411.14, 1816.56)
[0000][PE] low and high boundaries for proper pairs: (1, 10109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206464 reads in 408.416 CPU sec, 22.887 real sec
[0000] Calling mem_process_seqs.., task: 2076
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1206310
	[0000][ M::kt_pipeline] read 1206310 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516562, 9, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (350, 601, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4775)
[0000][PE] mean and std.dev: (897.26, 789.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1181, 1342, 2449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4985)
[0000][PE] mean and std.dev: (1458.75, 511.03)
[0000][PE] low and high boundaries for proper pairs: (1, 6253)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 413.189 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 2077
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516500, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (264, 784, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (803.42, 622.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1360, 1806)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3394)
[0000][PE] mean and std.dev: (1328.04, 586.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4188)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206310 reads in 409.802 CPU sec, 22.977 real sec
[0000] Calling mem_process_seqs.., task: 2078
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206322
	[0000][ M::kt_pipeline] read 1206322 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516005, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (339, 551, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3807)
[0000][PE] mean and std.dev: (809.12, 688.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4963)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.82, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1069, 1385, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (1300.95, 598.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 410.816 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 2079
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206458
	[0000][ M::kt_pipeline] read 1206458 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516742, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 1356, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5213)
[0000][PE] mean and std.dev: (1310.76, 970.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 113.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1261, 1775)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3381)
[0000][PE] mean and std.dev: (1293.15, 735.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206322 reads in 412.013 CPU sec, 23.099 real sec
[0000] Calling mem_process_seqs.., task: 2080
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516753, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 345, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3687)
[0000][PE] mean and std.dev: (793.35, 1050.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (733, 1525, 2212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5170)
[0000][PE] mean and std.dev: (1442.90, 898.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206458 reads in 411.604 CPU sec, 23.073 real sec
[0000] Calling mem_process_seqs.., task: 2081
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516428, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 547, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3847)
[0000][PE] mean and std.dev: (980.00, 935.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5050)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (937, 1132, 1667)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3127)
[0000][PE] mean and std.dev: (1083.18, 474.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3857)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 410.127 CPU sec, 22.991 real sec
[0000] Calling mem_process_seqs.., task: 2082
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206470
	[0000][ M::kt_pipeline] read 1206470 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516356, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 395, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3714)
[0000][PE] mean and std.dev: (673.60, 732.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1276, 1968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4064)
[0000][PE] mean and std.dev: (1433.20, 595.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 413.622 CPU sec, 23.193 real sec
[0000] Calling mem_process_seqs.., task: 2083
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1206358
	[0000][ M::kt_pipeline] read 1206358 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516545, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (417, 1286, 2237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5877)
[0000][PE] mean and std.dev: (1117.17, 907.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (917, 1329, 2221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (1369.53, 853.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6133)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206470 reads in 413.453 CPU sec, 23.165 real sec
[0000] Calling mem_process_seqs.., task: 2084
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1206376
	[0000][ M::kt_pipeline] read 1206376 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516575, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 684, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (909.69, 758.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1177, 2122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4718)
[0000][PE] mean and std.dev: (1317.10, 782.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206358 reads in 413.509 CPU sec, 23.161 real sec
[0000] Calling mem_process_seqs.., task: 2085
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1206296
	[0000][ M::kt_pipeline] read 1206296 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516461, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 1202, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4645)
[0000][PE] mean and std.dev: (1045.12, 686.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6049)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.70, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (727, 1319, 2734)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6748)
[0000][PE] mean and std.dev: (1524.65, 956.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8755)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206376 reads in 413.854 CPU sec, 23.197 real sec
[0000] Calling mem_process_seqs.., task: 2086
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206494
	[0000][ M::kt_pipeline] read 1206494 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516857, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 408, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (606.04, 497.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3435)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (485, 1030, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3680)
[0000][PE] mean and std.dev: (1059.41, 730.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4745)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206296 reads in 413.473 CPU sec, 23.191 real sec
[0000] Calling mem_process_seqs.., task: 2087
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516301, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 1133, 2153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5771)
[0000][PE] mean and std.dev: (1387.43, 1353.64)
[0000][PE] low and high boundaries for proper pairs: (1, 7580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.88, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 2237, 4390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10766)
[0000][PE] mean and std.dev: (2771.19, 2371.99)
[0000][PE] low and high boundaries for proper pairs: (1, 13954)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206494 reads in 408.462 CPU sec, 22.879 real sec
[0000] Calling mem_process_seqs.., task: 2088
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206474
	[0000][ M::kt_pipeline] read 1206474 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516554, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 526, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2897)
[0000][PE] mean and std.dev: (604.06, 556.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3764)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.50, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1519, 2320, 2984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5914)
[0000][PE] mean and std.dev: (2229.39, 1109.00)
[0000][PE] low and high boundaries for proper pairs: (1, 7379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 412.879 CPU sec, 23.139 real sec
[0000] Calling mem_process_seqs.., task: 2089
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1206372
	[0000][ M::kt_pipeline] read 1206372 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516410, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 562, 2195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6171)
[0000][PE] mean and std.dev: (1048.52, 1220.66)
[0000][PE] low and high boundaries for proper pairs: (1, 8159)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (824, 1282, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (1217.12, 641.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206474 reads in 411.267 CPU sec, 23.037 real sec
[0000] Calling mem_process_seqs.., task: 2090
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516545, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (456, 948, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3288)
[0000][PE] mean and std.dev: (928.71, 522.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4232)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 113.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (965, 1220, 1762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3356)
[0000][PE] mean and std.dev: (1140.45, 523.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4153)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206372 reads in 413.905 CPU sec, 23.208 real sec
[0000] Calling mem_process_seqs.., task: 2091
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516285, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 720, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3549)
[0000][PE] mean and std.dev: (789.70, 663.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4639)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (676, 1130, 2444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5980)
[0000][PE] mean and std.dev: (1262.25, 863.24)
[0000][PE] low and high boundaries for proper pairs: (1, 7748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 409.851 CPU sec, 22.946 real sec
[0000] Calling mem_process_seqs.., task: 2092
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1206410
	[0000][ M::kt_pipeline] read 1206410 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516853, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 486, 1528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4294)
[0000][PE] mean and std.dev: (1009.23, 1170.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (931, 1298, 2627)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6019)
[0000][PE] mean and std.dev: (1678.35, 1336.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 414.932 CPU sec, 23.239 real sec
[0000] Calling mem_process_seqs.., task: 2093
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1206392
	[0000][ M::kt_pipeline] read 1206392 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516942, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 593, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3654)
[0000][PE] mean and std.dev: (799.63, 653.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (672, 1495, 2345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1689.38, 1473.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206410 reads in 411.221 CPU sec, 23.069 real sec
[0000] Calling mem_process_seqs.., task: 2094
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1206420
	[0000][ M::kt_pipeline] read 1206420 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516521, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (374, 1328, 2724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7424)
[0000][PE] mean and std.dev: (1606.10, 1371.60)
[0000][PE] low and high boundaries for proper pairs: (1, 9774)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (984, 1472, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6285)
[0000][PE] mean and std.dev: (1937.35, 1543.64)
[0000][PE] low and high boundaries for proper pairs: (1, 8112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206392 reads in 409.384 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 2095
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1206442
	[0000][ M::kt_pipeline] read 1206442 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516702, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (354, 976, 1796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1076.38, 933.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1214, 1393, 2556)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5240)
[0000][PE] mean and std.dev: (1689.47, 810.02)
[0000][PE] low and high boundaries for proper pairs: (1, 6582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206420 reads in 409.181 CPU sec, 22.892 real sec
[0000] Calling mem_process_seqs.., task: 2096
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206366
	[0000][ M::kt_pipeline] read 1206366 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516382, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 517, 1745)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4639)
[0000][PE] mean and std.dev: (1157.14, 1256.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.37, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 725, 1650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4126)
[0000][PE] mean and std.dev: (1045.69, 797.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5364)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206442 reads in 414.463 CPU sec, 23.231 real sec
[0000] Calling mem_process_seqs.., task: 2097
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516547, 7, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 854, 1893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5009)
[0000][PE] mean and std.dev: (1178.88, 1167.72)
[0000][PE] low and high boundaries for proper pairs: (1, 6567)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1465, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (1285.36, 710.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206366 reads in 414.032 CPU sec, 23.167 real sec
[0000] Calling mem_process_seqs.., task: 2098
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206406
	[0000][ M::kt_pipeline] read 1206406 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516671, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (389, 1107, 3583)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9971)
[0000][PE] mean and std.dev: (2161.68, 2345.63)
[0000][PE] low and high boundaries for proper pairs: (1, 13165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1090, 1431, 1838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3334)
[0000][PE] mean and std.dev: (1375.68, 387.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4082)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 408.529 CPU sec, 22.883 real sec
[0000] Calling mem_process_seqs.., task: 2099
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516564, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 679, 1958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5226)
[0000][PE] mean and std.dev: (1125.11, 1054.21)
[0000][PE] low and high boundaries for proper pairs: (1, 6860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.17, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1026, 1390, 1818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (1372.35, 489.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4194)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206406 reads in 413.083 CPU sec, 23.135 real sec
[0000] Calling mem_process_seqs.., task: 2100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 516810, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 538, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3804)
[0000][PE] mean and std.dev: (800.77, 648.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.45, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (814, 1206, 1780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3712)
[0000][PE] mean and std.dev: (1214.95, 808.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 410.865 CPU sec, 23.027 real sec
[0000] Calling mem_process_seqs.., task: 2101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516499, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (413, 746, 2442)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6500)
[0000][PE] mean and std.dev: (1185.35, 1126.69)
[0000][PE] low and high boundaries for proper pairs: (1, 8529)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (764, 1364, 1496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (1070.18, 444.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 412.001 CPU sec, 23.117 real sec
[0000] Calling mem_process_seqs.., task: 2102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1206224
	[0000][ M::kt_pipeline] read 1206224 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516732, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (289, 637, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3256)
[0000][PE] mean and std.dev: (866.69, 718.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.69, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (885, 1145, 2363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5319)
[0000][PE] mean and std.dev: (1310.00, 791.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6797)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 409.488 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 2103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516336, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 1099, 2077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5685)
[0000][PE] mean and std.dev: (1331.00, 1281.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (503, 1239, 2752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7250)
[0000][PE] mean and std.dev: (1660.33, 1598.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206224 reads in 413.701 CPU sec, 23.162 real sec
[0000] Calling mem_process_seqs.., task: 2104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516634, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 723, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (807.93, 654.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3955)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (651, 1247, 1433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2997)
[0000][PE] mean and std.dev: (1003.58, 501.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 412.862 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 2105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516840, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 320, 624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1448)
[0000][PE] mean and std.dev: (388.94, 331.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1860)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.46, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (815, 1216, 3881)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10013)
[0000][PE] mean and std.dev: (2285.06, 2329.48)
[0000][PE] low and high boundaries for proper pairs: (1, 13079)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 409.205 CPU sec, 22.916 real sec
[0000] Calling mem_process_seqs.., task: 2106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1206572
	[0000][ M::kt_pipeline] read 1206572 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516792, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 563, 867)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1953)
[0000][PE] mean and std.dev: (616.76, 309.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1475, 3972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9974)
[0000][PE] mean and std.dev: (2358.43, 1819.40)
[0000][PE] low and high boundaries for proper pairs: (1, 12975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 410.136 CPU sec, 23.018 real sec
[0000] Calling mem_process_seqs.., task: 2107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000034, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516268, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (535, 1199, 2230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5620)
[0000][PE] mean and std.dev: (1271.32, 1140.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1295, 1677, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4484)
[0000][PE] mean and std.dev: (1692.17, 648.10)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206572 reads in 412.675 CPU sec, 23.097 real sec
[0000] Calling mem_process_seqs.., task: 2108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206340
	[0000][ M::kt_pipeline] read 1206340 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516519, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 583, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (575.76, 413.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.44, 114.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1092, 1736, 2332)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4812)
[0000][PE] mean and std.dev: (1535.15, 815.14)
[0000][PE] low and high boundaries for proper pairs: (1, 6052)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 414.242 CPU sec, 23.220 real sec
[0000] Calling mem_process_seqs.., task: 2109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1206560
	[0000][ M::kt_pipeline] read 1206560 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516435, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (698, 1144, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6428)
[0000][PE] mean and std.dev: (1689.24, 1403.95)
[0000][PE] low and high boundaries for proper pairs: (1, 8338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.41, 114.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 1192, 2170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5164)
[0000][PE] mean and std.dev: (1457.12, 880.18)
[0000][PE] low and high boundaries for proper pairs: (1, 6661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206340 reads in 411.975 CPU sec, 23.061 real sec
[0000] Calling mem_process_seqs.., task: 2110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206560
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516616, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (768, 1439, 2520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6024)
[0000][PE] mean and std.dev: (1622.61, 1313.21)
[0000][PE] low and high boundaries for proper pairs: (1, 7776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (911, 1355, 2253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4937)
[0000][PE] mean and std.dev: (1617.27, 1137.95)
[0000][PE] low and high boundaries for proper pairs: (1, 6279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206560 reads in 412.407 CPU sec, 23.127 real sec
[0000] Calling mem_process_seqs.., task: 2111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516376, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (375, 1048, 1598)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4044)
[0000][PE] mean and std.dev: (1090.62, 780.23)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (942, 1372, 2264)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4908)
[0000][PE] mean and std.dev: (1645.33, 1150.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6246)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 409.405 CPU sec, 23.001 real sec
[0000] Calling mem_process_seqs.., task: 2112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516730, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (657, 981, 1579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3423)
[0000][PE] mean and std.dev: (907.46, 572.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (776, 1239, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3392)
[0000][PE] mean and std.dev: (1196.52, 546.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 409.536 CPU sec, 22.944 real sec
[0000] Calling mem_process_seqs.., task: 2113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516632, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 701, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3831)
[0000][PE] mean and std.dev: (846.65, 715.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5035)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 113.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (905, 1714, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5258)
[0000][PE] mean and std.dev: (1451.00, 895.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 410.120 CPU sec, 22.968 real sec
[0000] Calling mem_process_seqs.., task: 2114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206378
	[0000][ M::kt_pipeline] read 1206378 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 516537, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 523, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (885.38, 854.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4437)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.43, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (762, 1289, 2538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6090)
[0000][PE] mean and std.dev: (1455.35, 941.50)
[0000][PE] low and high boundaries for proper pairs: (1, 7866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 409.195 CPU sec, 22.914 real sec
[0000] Calling mem_process_seqs.., task: 2115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1206318
	[0000][ M::kt_pipeline] read 1206318 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516345, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 336, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3235)
[0000][PE] mean and std.dev: (573.83, 533.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (461, 1266, 2233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5777)
[0000][PE] mean and std.dev: (1544.65, 1338.09)
[0000][PE] low and high boundaries for proper pairs: (1, 7549)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206378 reads in 413.313 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 2116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206318
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516740, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 606, 1237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3237)
[0000][PE] mean and std.dev: (718.60, 623.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1275, 1610, 2735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5655)
[0000][PE] mean and std.dev: (1730.14, 758.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7115)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206318 reads in 406.613 CPU sec, 22.736 real sec
[0000] Calling mem_process_seqs.., task: 2117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 517082, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (344, 741, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (775.11, 530.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4252)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.52, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 776, 1516)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3942)
[0000][PE] mean and std.dev: (1028.21, 794.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 406.710 CPU sec, 22.796 real sec
[0000] Calling mem_process_seqs.., task: 2118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1206352
	[0000][ M::kt_pipeline] read 1206352 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516515, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 887, 1278)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (779.82, 552.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (971, 1360, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5429)
[0000][PE] mean and std.dev: (1587.82, 1177.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 412.803 CPU sec, 23.103 real sec
[0000] Calling mem_process_seqs.., task: 2119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206428
	[0000][ M::kt_pipeline] read 1206428 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516096, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 325, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (372.85, 342.92)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (732, 1386, 2328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5520)
[0000][PE] mean and std.dev: (1548.69, 913.30)
[0000][PE] low and high boundaries for proper pairs: (1, 7116)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206352 reads in 415.660 CPU sec, 23.294 real sec
[0000] Calling mem_process_seqs.., task: 2120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206574
	[0000][ M::kt_pipeline] read 1206574 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516969, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (412, 926, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2965)
[0000][PE] mean and std.dev: (740.13, 474.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1000, 1111, 1261)
[0000][PE] low and high boundaries for computing mean and std.dev: (478, 1783)
[0000][PE] mean and std.dev: (1051.86, 263.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2104)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206428 reads in 413.404 CPU sec, 23.155 real sec
[0000] Calling mem_process_seqs.., task: 2121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206574
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516633, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 654, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (898.44, 796.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (409, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (111, 856)
[0000][PE] mean and std.dev: (486.19, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1005)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (695, 1308, 2326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5588)
[0000][PE] mean and std.dev: (1341.06, 890.26)
[0000][PE] low and high boundaries for proper pairs: (1, 7219)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206574 reads in 414.182 CPU sec, 23.201 real sec
[0000] Calling mem_process_seqs.., task: 2122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516283, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 471, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3704)
[0000][PE] mean and std.dev: (801.26, 593.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1299, 1622, 2677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5433)
[0000][PE] mean and std.dev: (1789.20, 708.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 414.901 CPU sec, 23.275 real sec
[0000] Calling mem_process_seqs.., task: 2123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1206196
	[0000][ M::kt_pipeline] read 1206196 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516680, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 462, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (681.00, 537.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3576)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.80, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (924, 1717, 2109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4479)
[0000][PE] mean and std.dev: (1410.82, 810.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5664)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 412.563 CPU sec, 23.112 real sec
[0000] Calling mem_process_seqs.., task: 2124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1206480
	[0000][ M::kt_pipeline] read 1206480 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516376, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 1036, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4608)
[0000][PE] mean and std.dev: (1004.74, 983.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (823, 1292, 2380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5494)
[0000][PE] mean and std.dev: (1554.00, 1059.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206196 reads in 410.074 CPU sec, 23.010 real sec
[0000] Calling mem_process_seqs.., task: 2125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1206472
	[0000][ M::kt_pipeline] read 1206472 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516440, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (324, 793, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2916)
[0000][PE] mean and std.dev: (759.89, 611.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (904, 1096, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (1243.94, 670.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3925)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206480 reads in 408.608 CPU sec, 22.906 real sec
[0000] Calling mem_process_seqs.., task: 2126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1206270
	[0000][ M::kt_pipeline] read 1206270 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206472
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516018, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (425, 833, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2597)
[0000][PE] mean and std.dev: (803.00, 560.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.48, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (918, 1197, 1919)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3921)
[0000][PE] mean and std.dev: (1235.88, 523.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4922)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206472 reads in 413.473 CPU sec, 23.154 real sec
[0000] Calling mem_process_seqs.., task: 2127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516480, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (571, 1234, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (1083.31, 681.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1321, 1620, 2903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6067)
[0000][PE] mean and std.dev: (1563.08, 955.11)
[0000][PE] low and high boundaries for proper pairs: (1, 7649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206270 reads in 411.519 CPU sec, 23.068 real sec
[0000] Calling mem_process_seqs.., task: 2128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206360
	[0000][ M::kt_pipeline] read 1206360 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516285, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (380, 1111, 2651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7193)
[0000][PE] mean and std.dev: (1482.33, 1454.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9464)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.54, 114.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (977, 1662, 2640)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5966)
[0000][PE] mean and std.dev: (1603.85, 857.53)
[0000][PE] low and high boundaries for proper pairs: (1, 7629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 408.559 CPU sec, 22.921 real sec
[0000] Calling mem_process_seqs.., task: 2129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1206336
	[0000][ M::kt_pipeline] read 1206336 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516063, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (488, 1463, 2690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7094)
[0000][PE] mean and std.dev: (1854.48, 1718.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1113, 1681, 2260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4554)
[0000][PE] mean and std.dev: (1516.64, 842.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206360 reads in 414.157 CPU sec, 23.204 real sec
[0000] Calling mem_process_seqs.., task: 2130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516550, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (266, 424, 2163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5957)
[0000][PE] mean and std.dev: (1339.35, 1547.18)
[0000][PE] low and high boundaries for proper pairs: (1, 7854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.61, 114.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1607, 1793, 2343)
[0000][PE] low and high boundaries for computing mean and std.dev: (135, 3815)
[0000][PE] mean and std.dev: (1775.94, 505.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206336 reads in 409.956 CPU sec, 22.949 real sec
[0000] Calling mem_process_seqs.., task: 2131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1206434
	[0000][ M::kt_pipeline] read 1206434 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (33, 516540, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (383, 879, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (1127.09, 943.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.72, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1005, 1239, 2965)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6885)
[0000][PE] mean and std.dev: (1683.05, 1138.16)
[0000][PE] low and high boundaries for proper pairs: (1, 8845)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 409.628 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 2132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516240, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 366, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (625.24, 586.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (900, 1313, 2249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4947)
[0000][PE] mean and std.dev: (1644.35, 1054.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206434 reads in 413.227 CPU sec, 23.175 real sec
[0000] Calling mem_process_seqs.., task: 2133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1206098
	[0000][ M::kt_pipeline] read 1206098 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516554, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 880, 2352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6562)
[0000][PE] mean and std.dev: (1201.06, 1229.45)
[0000][PE] low and high boundaries for proper pairs: (1, 8667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1206, 2218)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4974)
[0000][PE] mean and std.dev: (1571.35, 1005.82)
[0000][PE] low and high boundaries for proper pairs: (1, 6352)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 411.535 CPU sec, 23.045 real sec
[0000] Calling mem_process_seqs.., task: 2134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206218
	[0000][ M::kt_pipeline] read 1206218 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516677, 8, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 700, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2984)
[0000][PE] mean and std.dev: (732.47, 551.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1112, 1601, 2071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3989)
[0000][PE] mean and std.dev: (1659.25, 813.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206098 reads in 411.564 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 2135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1206524
	[0000][ M::kt_pipeline] read 1206524 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516586, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (411, 773, 1849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4725)
[0000][PE] mean and std.dev: (1166.78, 1107.56)
[0000][PE] low and high boundaries for proper pairs: (1, 6163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (940, 1184, 2386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5278)
[0000][PE] mean and std.dev: (1254.36, 640.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206218 reads in 411.701 CPU sec, 23.077 real sec
[0000] Calling mem_process_seqs.., task: 2136
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1206460
	[0000][ M::kt_pipeline] read 1206460 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206524
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (32, 516854, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 416, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (849.90, 867.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1303, 1771, 4293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10273)
[0000][PE] mean and std.dev: (2701.53, 2010.25)
[0000][PE] low and high boundaries for proper pairs: (1, 13263)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206524 reads in 414.507 CPU sec, 23.221 real sec
[0000] Calling mem_process_seqs.., task: 2137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516736, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 629, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3939)
[0000][PE] mean and std.dev: (842.95, 819.47)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (760, 1636, 2100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4780)
[0000][PE] mean and std.dev: (1760.72, 1238.36)
[0000][PE] low and high boundaries for proper pairs: (1, 6714)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206460 reads in 409.483 CPU sec, 22.952 real sec
[0000] Calling mem_process_seqs.., task: 2138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1206346
	[0000][ M::kt_pipeline] read 1206346 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516311, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 757, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3163)
[0000][PE] mean and std.dev: (802.31, 548.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4111)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1513, 2751)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5991)
[0000][PE] mean and std.dev: (1651.23, 910.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 415.307 CPU sec, 23.269 real sec
[0000] Calling mem_process_seqs.., task: 2139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206320
	[0000][ M::kt_pipeline] read 1206320 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516554, 9, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 1039, 1656)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4428)
[0000][PE] mean and std.dev: (880.35, 815.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (899, 1209, 2924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6974)
[0000][PE] mean and std.dev: (2179.21, 1990.00)
[0000][PE] low and high boundaries for proper pairs: (1, 10139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206346 reads in 412.397 CPU sec, 23.120 real sec
[0000] Calling mem_process_seqs.., task: 2140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1206326
	[0000][ M::kt_pipeline] read 1206326 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516629, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 687, 1408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3760)
[0000][PE] mean and std.dev: (965.40, 945.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1161, 2147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4807)
[0000][PE] mean and std.dev: (1427.18, 1000.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206320 reads in 412.302 CPU sec, 23.094 real sec
[0000] Calling mem_process_seqs.., task: 2141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1206418
	[0000][ M::kt_pipeline] read 1206418 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516489, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 752, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3222)
[0000][PE] mean and std.dev: (840.65, 578.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1193, 1560, 2553)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5273)
[0000][PE] mean and std.dev: (1498.45, 731.54)
[0000][PE] low and high boundaries for proper pairs: (1, 6633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206326 reads in 410.963 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 2142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516609, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 621, 1932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5126)
[0000][PE] mean and std.dev: (1197.95, 1339.37)
[0000][PE] low and high boundaries for proper pairs: (1, 6723)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (907, 1187, 1819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3643)
[0000][PE] mean and std.dev: (1159.06, 763.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206418 reads in 411.770 CPU sec, 23.071 real sec
[0000] Calling mem_process_seqs.., task: 2143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1206348
	[0000][ M::kt_pipeline] read 1206348 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516399, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (342, 887, 1410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (865.07, 669.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4614)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (793, 1302, 2608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6238)
[0000][PE] mean and std.dev: (1618.67, 1344.68)
[0000][PE] low and high boundaries for proper pairs: (1, 8053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 412.213 CPU sec, 23.080 real sec
[0000] Calling mem_process_seqs.., task: 2144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1206380
	[0000][ M::kt_pipeline] read 1206380 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516273, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (280, 853, 2094)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5722)
[0000][PE] mean and std.dev: (1271.97, 1223.02)
[0000][PE] low and high boundaries for proper pairs: (1, 7536)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.59, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1082, 2176, 2871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6449)
[0000][PE] mean and std.dev: (2169.24, 1404.38)
[0000][PE] low and high boundaries for proper pairs: (1, 8238)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206348 reads in 412.610 CPU sec, 23.126 real sec
[0000] Calling mem_process_seqs.., task: 2145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1206412
	[0000][ M::kt_pipeline] read 1206412 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516152, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (433, 961, 2222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5800)
[0000][PE] mean and std.dev: (1149.75, 907.84)
[0000][PE] low and high boundaries for proper pairs: (1, 7589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1007, 1237, 2335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4991)
[0000][PE] mean and std.dev: (1551.75, 830.46)
[0000][PE] low and high boundaries for proper pairs: (1, 6319)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206380 reads in 411.246 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 2146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1206432
	[0000][ M::kt_pipeline] read 1206432 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516562, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (353, 987, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3344)
[0000][PE] mean and std.dev: (1024.39, 875.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4525)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.38, 114.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (974, 1383, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5255)
[0000][PE] mean and std.dev: (1705.05, 1014.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206412 reads in 408.832 CPU sec, 22.889 real sec
[0000] Calling mem_process_seqs.., task: 2147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1206390
	[0000][ M::kt_pipeline] read 1206390 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516536, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 544, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4283)
[0000][PE] mean and std.dev: (851.94, 681.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (716, 1193, 3277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8399)
[0000][PE] mean and std.dev: (1777.52, 1451.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206432 reads in 409.973 CPU sec, 22.951 real sec
[0000] Calling mem_process_seqs.., task: 2148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1206502
	[0000][ M::kt_pipeline] read 1206502 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516661, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 572, 2021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5399)
[0000][PE] mean and std.dev: (1142.07, 1116.23)
[0000][PE] low and high boundaries for proper pairs: (1, 7088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (675, 1450, 2140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5070)
[0000][PE] mean and std.dev: (1434.53, 1013.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206390 reads in 412.532 CPU sec, 23.102 real sec
[0000] Calling mem_process_seqs.., task: 2149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516609, 9, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 426, 802)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (533.38, 456.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.28, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1169, 1651, 2698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5756)
[0000][PE] mean and std.dev: (1771.00, 839.77)
[0000][PE] low and high boundaries for proper pairs: (1, 7285)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206502 reads in 410.171 CPU sec, 22.969 real sec
[0000] Calling mem_process_seqs.., task: 2150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1206374
	[0000][ M::kt_pipeline] read 1206374 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516182, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (320, 790, 1697)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4451)
[0000][PE] mean and std.dev: (973.47, 827.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5828)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.86, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (881, 1196, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (1045.28, 474.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 412.429 CPU sec, 23.113 real sec
[0000] Calling mem_process_seqs.., task: 2151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1206364
	[0000][ M::kt_pipeline] read 1206364 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516408, 8, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 776, 1744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4860)
[0000][PE] mean and std.dev: (1077.14, 1033.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6418)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.45, 114.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (751, 1361, 2031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4591)
[0000][PE] mean and std.dev: (1380.71, 856.99)
[0000][PE] low and high boundaries for proper pairs: (1, 5871)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206374 reads in 411.063 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 2152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206402
	[0000][ M::kt_pipeline] read 1206402 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516581, 8, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (277, 387, 1285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3301)
[0000][PE] mean and std.dev: (599.38, 477.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.51, 114.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1225, 1650, 3070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6760)
[0000][PE] mean and std.dev: (1943.09, 1164.74)
[0000][PE] low and high boundaries for proper pairs: (1, 8605)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206364 reads in 410.982 CPU sec, 23.023 real sec
[0000] Calling mem_process_seqs.., task: 2153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1206462
	[0000][ M::kt_pipeline] read 1206462 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 516537, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (286, 607, 3968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11332)
[0000][PE] mean and std.dev: (1705.71, 1845.02)
[0000][PE] low and high boundaries for proper pairs: (1, 15014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.54, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (954, 1271, 1729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (1163.88, 498.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206402 reads in 417.938 CPU sec, 23.444 real sec
[0000] Calling mem_process_seqs.., task: 2154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206478
	[0000][ M::kt_pipeline] read 1206478 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516023, 6, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 504, 1738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4598)
[0000][PE] mean and std.dev: (1114.14, 1097.47)
[0000][PE] low and high boundaries for proper pairs: (1, 6028)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.34, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1131, 1616, 2714)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5880)
[0000][PE] mean and std.dev: (1861.07, 1206.31)
[0000][PE] low and high boundaries for proper pairs: (1, 7463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206462 reads in 413.198 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 2155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516858, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (371, 691, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4076)
[0000][PE] mean and std.dev: (920.12, 708.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5311)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (943, 1330, 2271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4927)
[0000][PE] mean and std.dev: (1435.44, 1040.67)
[0000][PE] low and high boundaries for proper pairs: (1, 6255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206478 reads in 410.188 CPU sec, 23.001 real sec
[0000] Calling mem_process_seqs.., task: 2156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1206386
	[0000][ M::kt_pipeline] read 1206386 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516320, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 814, 1841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (894.70, 712.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6335)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.90, 114.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (520, 1173, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3136)
[0000][PE] mean and std.dev: (1027.94, 685.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4008)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 412.271 CPU sec, 23.123 real sec
[0000] Calling mem_process_seqs.., task: 2157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206400
	[0000][ M::kt_pipeline] read 1206400 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516608, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (338, 624, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3002)
[0000][PE] mean and std.dev: (696.77, 540.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (481, 1750, 2023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1297.38, 782.16)
[0000][PE] low and high boundaries for proper pairs: (1, 6649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206386 reads in 415.355 CPU sec, 23.279 real sec
[0000] Calling mem_process_seqs.., task: 2158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1206230
	[0000][ M::kt_pipeline] read 1206230 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 517010, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 1235, 3194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8938)
[0000][PE] mean and std.dev: (1930.57, 1942.31)
[0000][PE] low and high boundaries for proper pairs: (1, 11810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.75, 114.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (994, 1265, 1804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (1186.44, 618.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206400 reads in 411.548 CPU sec, 23.039 real sec
[0000] Calling mem_process_seqs.., task: 2159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1206520
	[0000][ M::kt_pipeline] read 1206520 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516125, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (335, 860, 1895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5015)
[0000][PE] mean and std.dev: (1066.20, 854.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.77, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (844, 1495, 1969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (1228.70, 552.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5344)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206230 reads in 415.621 CPU sec, 23.309 real sec
[0000] Calling mem_process_seqs.., task: 2160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000230, nseq: 1206276
	[0000][ M::kt_pipeline] read 1206276 sequences (180000230 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206520
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516562, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 727, 2531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6937)
[0000][PE] mean and std.dev: (1082.20, 1026.17)
[0000][PE] low and high boundaries for proper pairs: (1, 9140)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.53, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1231, 1373, 2011)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3571)
[0000][PE] mean and std.dev: (1359.91, 567.59)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206520 reads in 409.918 CPU sec, 22.996 real sec
[0000] Calling mem_process_seqs.., task: 2161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516314, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (343, 860, 1918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5068)
[0000][PE] mean and std.dev: (1188.00, 1295.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.85, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (972, 1731, 2765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6351)
[0000][PE] mean and std.dev: (1850.46, 1473.37)
[0000][PE] low and high boundaries for proper pairs: (1, 8144)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206276 reads in 409.934 CPU sec, 22.986 real sec
[0000] Calling mem_process_seqs.., task: 2162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516328, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (336, 1334, 2617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7179)
[0000][PE] mean and std.dev: (1401.69, 1060.08)
[0000][PE] low and high boundaries for proper pairs: (1, 9460)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.78, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (920, 1308, 1920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3920)
[0000][PE] mean and std.dev: (1378.23, 648.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 414.579 CPU sec, 23.230 real sec
[0000] Calling mem_process_seqs.., task: 2163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516374, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 633, 1243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3291)
[0000][PE] mean and std.dev: (711.59, 670.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.76, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (724, 1371, 1703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3661)
[0000][PE] mean and std.dev: (1063.36, 515.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 411.407 CPU sec, 23.033 real sec
[0000] Calling mem_process_seqs.., task: 2164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1206488
	[0000][ M::kt_pipeline] read 1206488 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516818, 2, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (337, 474, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (734.23, 596.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4917)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.52, 114.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (738, 1249, 1871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4137)
[0000][PE] mean and std.dev: (1182.62, 694.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 409.834 CPU sec, 22.960 real sec
[0000] Calling mem_process_seqs.., task: 2165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1206450
	[0000][ M::kt_pipeline] read 1206450 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 516818, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (463, 571, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (659.23, 437.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.79, 114.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1133, 1586, 2603)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5543)
[0000][PE] mean and std.dev: (1820.16, 958.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206488 reads in 414.497 CPU sec, 23.211 real sec
[0000] Calling mem_process_seqs.., task: 2166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1206508
	[0000][ M::kt_pipeline] read 1206508 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516706, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 489, 1582)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4148)
[0000][PE] mean and std.dev: (856.68, 634.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1184, 2078, 2624)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5504)
[0000][PE] mean and std.dev: (1816.69, 750.08)
[0000][PE] low and high boundaries for proper pairs: (1, 6944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206450 reads in 411.523 CPU sec, 23.066 real sec
[0000] Calling mem_process_seqs.., task: 2167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1206384
	[0000][ M::kt_pipeline] read 1206384 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516693, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 691, 1690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4426)
[0000][PE] mean and std.dev: (1016.22, 948.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 478, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.34, 114.53)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1217, 1778, 2586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5324)
[0000][PE] mean and std.dev: (1787.95, 872.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206508 reads in 415.493 CPU sec, 23.288 real sec
[0000] Calling mem_process_seqs.., task: 2168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1206370
	[0000][ M::kt_pipeline] read 1206370 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516681, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 491, 1236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3340)
[0000][PE] mean and std.dev: (715.11, 713.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.71, 114.16)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1012, 1405, 3191)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7549)
[0000][PE] mean and std.dev: (1861.90, 1292.63)
[0000][PE] low and high boundaries for proper pairs: (1, 9728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206384 reads in 416.217 CPU sec, 23.374 real sec
[0000] Calling mem_process_seqs.., task: 2169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1206210
	[0000][ M::kt_pipeline] read 1206210 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516525, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 922, 2972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8278)
[0000][PE] mean and std.dev: (1766.61, 1847.34)
[0000][PE] low and high boundaries for proper pairs: (1, 10931)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 949, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4228)
[0000][PE] mean and std.dev: (1040.36, 882.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206370 reads in 409.570 CPU sec, 22.955 real sec
[0000] Calling mem_process_seqs.., task: 2170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206526
	[0000][ M::kt_pipeline] read 1206526 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 516692, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (377, 901, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3752)
[0000][PE] mean and std.dev: (816.64, 587.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.93, 113.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (840, 1160, 1629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (1190.20, 598.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206210 reads in 412.637 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 2171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1206280
	[0000][ M::kt_pipeline] read 1206280 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206526
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 516167, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 658, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3632)
[0000][PE] mean and std.dev: (721.54, 588.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.62, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (930, 1348, 2726)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6318)
[0000][PE] mean and std.dev: (1951.47, 1277.43)
[0000][PE] low and high boundaries for proper pairs: (1, 8114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206526 reads in 413.432 CPU sec, 23.177 real sec
[0000] Calling mem_process_seqs.., task: 2172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1206440
	[0000][ M::kt_pipeline] read 1206440 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516954, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 433, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3007)
[0000][PE] mean and std.dev: (692.77, 499.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.57, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1052, 1488, 1728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3080)
[0000][PE] mean and std.dev: (1393.41, 363.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206280 reads in 410.973 CPU sec, 23.017 real sec
[0000] Calling mem_process_seqs.., task: 2173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1206368
	[0000][ M::kt_pipeline] read 1206368 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 516649, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (300, 387, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1803)
[0000][PE] mean and std.dev: (413.08, 252.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.50, 114.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1379, 1766, 2432)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4538)
[0000][PE] mean and std.dev: (1694.48, 909.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206440 reads in 411.455 CPU sec, 23.032 real sec
[0000] Calling mem_process_seqs.., task: 2174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1206362
	[0000][ M::kt_pipeline] read 1206362 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (36, 516761, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (332, 839, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3614)
[0000][PE] mean and std.dev: (945.74, 761.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4708)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1018, 1382, 1755)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3229)
[0000][PE] mean and std.dev: (1327.07, 500.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3966)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206368 reads in 411.351 CPU sec, 23.063 real sec
[0000] Calling mem_process_seqs.., task: 2175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1206278
	[0000][ M::kt_pipeline] read 1206278 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516756, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 401, 1121)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2889)
[0000][PE] mean and std.dev: (542.88, 470.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.68, 114.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1021, 1150, 1531)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (1010.30, 332.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3061)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206362 reads in 412.033 CPU sec, 23.062 real sec
[0000] Calling mem_process_seqs.., task: 2176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206436
	[0000][ M::kt_pipeline] read 1206436 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516211, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 926, 2754)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7530)
[0000][PE] mean and std.dev: (1628.59, 1699.10)
[0000][PE] low and high boundaries for proper pairs: (1, 9918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.87, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (789, 1097, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (1160.23, 460.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4473)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206278 reads in 411.263 CPU sec, 23.040 real sec
[0000] Calling mem_process_seqs.., task: 2177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1206448
	[0000][ M::kt_pipeline] read 1206448 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 516508, 8, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (319, 1025, 1800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4762)
[0000][PE] mean and std.dev: (1083.57, 832.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.55, 114.06)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (645, 1130, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3405)
[0000][PE] mean and std.dev: (1099.09, 638.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4325)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206436 reads in 410.361 CPU sec, 22.989 real sec
[0000] Calling mem_process_seqs.., task: 2178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1206416
	[0000][ M::kt_pipeline] read 1206416 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516673, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 457, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (599.80, 744.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.56, 114.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (746, 1608, 2015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4553)
[0000][PE] mean and std.dev: (1200.92, 853.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5822)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206448 reads in 413.542 CPU sec, 23.144 real sec
[0000] Calling mem_process_seqs.., task: 2179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1206482
	[0000][ M::kt_pipeline] read 1206482 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516288, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (322, 554, 1039)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (639.88, 477.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.73, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1146, 2020, 3173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7227)
[0000][PE] mean and std.dev: (2337.40, 1642.69)
[0000][PE] low and high boundaries for proper pairs: (1, 9254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206416 reads in 412.495 CPU sec, 23.125 real sec
[0000] Calling mem_process_seqs.., task: 2180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (38, 516233, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (328, 945, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4888)
[0000][PE] mean and std.dev: (1246.44, 1125.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.35, 113.89)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (528, 1193, 2408)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6168)
[0000][PE] mean and std.dev: (1380.75, 1263.49)
[0000][PE] low and high boundaries for proper pairs: (1, 8048)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206482 reads in 414.591 CPU sec, 23.235 real sec
[0000] Calling mem_process_seqs.., task: 2181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516603, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (326, 463, 1695)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (1206.91, 1196.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.66, 114.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (467, 773, 1890)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4736)
[0000][PE] mean and std.dev: (1139.94, 929.97)
[0000][PE] low and high boundaries for proper pairs: (1, 6159)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 415.439 CPU sec, 23.277 real sec
[0000] Calling mem_process_seqs.., task: 2182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 516614, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (584, 1222, 2528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6416)
[0000][PE] mean and std.dev: (1548.21, 1606.14)
[0000][PE] low and high boundaries for proper pairs: (1, 8360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.58, 114.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (987, 1224, 2171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4539)
[0000][PE] mean and std.dev: (1301.94, 639.70)
[0000][PE] low and high boundaries for proper pairs: (1, 5723)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 412.391 CPU sec, 23.130 real sec
[0000] Calling mem_process_seqs.., task: 2183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1206492
	[0000][ M::kt_pipeline] read 1206492 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 516793, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (299, 677, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (734.30, 532.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3855)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.74, 114.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1160, 1725, 2298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4574)
[0000][PE] mean and std.dev: (1578.00, 710.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5712)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 413.358 CPU sec, 23.178 real sec
[0000] Calling mem_process_seqs.., task: 2184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206546
	[0000][ M::kt_pipeline] read 1206546 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 516057, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (283, 586, 2012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5470)
[0000][PE] mean and std.dev: (1123.00, 1265.67)
[0000][PE] low and high boundaries for proper pairs: (1, 7199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.91, 114.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (734, 2199, 3383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8681)
[0000][PE] mean and std.dev: (1685.45, 1194.14)
[0000][PE] low and high boundaries for proper pairs: (1, 11330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206492 reads in 413.302 CPU sec, 23.159 real sec
[0000] Calling mem_process_seqs.., task: 2185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1206430
	[0000][ M::kt_pipeline] read 1206430 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516003, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 651, 1727)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4679)
[0000][PE] mean and std.dev: (906.78, 1004.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6155)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.63, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1246, 1817, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3313)
[0000][PE] mean and std.dev: (1610.44, 589.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206546 reads in 411.753 CPU sec, 23.044 real sec
[0000] Calling mem_process_seqs.., task: 2186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1206344
	[0000][ M::kt_pipeline] read 1206344 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516571, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (358, 731, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (979.70, 857.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.60, 114.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (842, 1235, 1742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3542)
[0000][PE] mean and std.dev: (1201.91, 563.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206430 reads in 410.423 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 2187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1206504
	[0000][ M::kt_pipeline] read 1206504 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 516614, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 375, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (663.59, 602.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3733)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.64, 114.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (593, 1333, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4556)
[0000][PE] mean and std.dev: (1350.91, 1013.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206344 reads in 415.340 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 2188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1206500
	[0000][ M::kt_pipeline] read 1206500 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 516575, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (327, 877, 1482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3792)
[0000][PE] mean and std.dev: (1068.17, 924.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.66, 114.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (578, 1177, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7967)
[0000][PE] mean and std.dev: (1927.92, 1816.82)
[0000][PE] low and high boundaries for proper pairs: (1, 10430)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206504 reads in 413.397 CPU sec, 23.183 real sec
[0000] Calling mem_process_seqs.., task: 2189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1206498
	[0000][ M::kt_pipeline] read 1206498 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 516583, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (370, 862, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4747)
[0000][PE] mean and std.dev: (1024.61, 716.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.89, 114.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1122, 1618, 2543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5385)
[0000][PE] mean and std.dev: (1602.67, 976.63)
[0000][PE] low and high boundaries for proper pairs: (1, 6806)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206500 reads in 410.009 CPU sec, 22.961 real sec
[0000] Calling mem_process_seqs.., task: 2190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1206288
	[0000][ M::kt_pipeline] read 1206288 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 516905, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (271, 461, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3415)
[0000][PE] mean and std.dev: (725.83, 661.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.65, 114.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (526, 1255, 2016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4996)
[0000][PE] mean and std.dev: (1210.59, 698.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6486)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206498 reads in 412.416 CPU sec, 23.087 real sec
[0000] Calling mem_process_seqs.., task: 2191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1206356
	[0000][ M::kt_pipeline] read 1206356 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 516821, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (366, 932, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3519)
[0000][PE] mean and std.dev: (957.17, 827.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4570)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.53, 113.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (908, 1157, 2488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5648)
[0000][PE] mean and std.dev: (1468.38, 971.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7228)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206288 reads in 409.532 CPU sec, 22.971 real sec
[0000] Calling mem_process_seqs.., task: 2192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1206354
	[0000][ M::kt_pipeline] read 1206354 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 516764, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (397, 573, 1483)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3655)
[0000][PE] mean and std.dev: (1057.94, 961.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.64, 113.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1368, 1925, 2615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5109)
[0000][PE] mean and std.dev: (1981.90, 1127.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206356 reads in 411.184 CPU sec, 23.021 real sec
[0000] Calling mem_process_seqs.., task: 2193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1206332
	[0000][ M::kt_pipeline] read 1206332 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 516970, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (311, 353, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (806.37, 754.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.83, 114.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (1202, 1451, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3710)
[0000][PE] mean and std.dev: (1466.83, 764.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4546)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206354 reads in 409.622 CPU sec, 22.965 real sec
[0000] Calling mem_process_seqs.., task: 2194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1206298
	[0000][ M::kt_pipeline] read 1206298 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 517147, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 776, 1644)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4442)
[0000][PE] mean and std.dev: (1065.48, 953.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5841)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.84, 114.39)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (910, 1179, 1648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (1182.94, 430.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206332 reads in 410.762 CPU sec, 23.021 real sec
[0000] Calling mem_process_seqs.., task: 2195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 141060864, nseq: 945324
	[0000][ M::kt_pipeline] read 945324 sequences (141060864 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1206298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 516508, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (296, 799, 2372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6524)
[0000][PE] mean and std.dev: (962.05, 908.30)
[0000][PE] low and high boundaries for proper pairs: (1, 8600)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 558)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 854)
[0000][PE] mean and std.dev: (486.23, 113.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1002)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (742, 1188, 1902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4222)
[0000][PE] mean and std.dev: (1151.86, 568.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1206298 reads in 414.998 CPU sec, 23.280 real sec
[0000] Calling mem_process_seqs.., task: 2196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 945324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 404442, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (287, 679, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3086)
[0000][PE] mean and std.dev: (750.94, 601.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (410, 479, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (112, 857)
[0000][PE] mean and std.dev: (486.61, 114.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1006)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (797, 1144, 1853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3965)
[0000][PE] mean and std.dev: (1380.70, 858.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 945324 reads in 315.429 CPU sec, 17.707 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.145714 MHz
Runtime profile:

	Time taken for main_mem function: 50455.14 sec

	IO times (sec) :
	Reading IO time (reads) avg: 2402.83, (2402.83, 2402.83)
	Writing IO time (SAM) avg: 3778.18, (3778.18, 3778.18)
	Reading IO time (Reference Genome) avg: 6.59, (6.59, 6.59)
	Index read time avg: 12.36, (12.36, 12.36)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 50436.05
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 50395.50, (50395.50, 50395.50)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 20347.93, (20347.93, 20347.93)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 29846.35, (29846.35, 29846.35)
		SMEM compute avg: 9833.57, (9913.13, 9760.16)
		SAL compute avg: 3859.99, (3888.05, 3825.75)
				MEM_SA avg: 1740.85, (1745.66, 1734.19)

		BSW time, avg: 11946.43, (11948.02, 11938.76)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
