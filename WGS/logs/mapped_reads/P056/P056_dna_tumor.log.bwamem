Looking to launch executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw", simd = .avx512bw
Launching executable "/staging/leuven/stg_00096/home/rdewin/system/miniconda/envs/WGS/bin/bwa-mem2.avx512bw"
-----------------------------
Executing in AVX512 mode!!
-----------------------------
* SA compression enabled with xfactor: 8
* Ref file: resources/genome.fa
* Entering FMI_search
* Index file found. Loading index from resources/genome.fa.bwt.2bit.64
* Reference seq len for bi-index = 6234584141
* sentinel-index: 2011702948
* Count:
0,	1
1,	1846794483
2,	3117292071
3,	4387789659
4,	6234584141

* Reading other elements of the index from files resources/genome.fa
* Index prefix: resources/genome.fa
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = resources/genome.fa.0123
* Reference genome size: 6234584140 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 2508.0984 MB
2. Memory pre-allocation for BSW: 4313.1064 MB
3. Memory pre-allocation for BWT: 1391.6552 MB
------------------------------------------
* Threads used (compute): 18
* No. of pipeline threads: 2

[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1203356
	[0000][ M::kt_pipeline] read 1203356 sequences (180000178 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203342
	[0000][ M::kt_pipeline] read 1203342 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524781, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 201, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 833)
[0000][PE] mean and std.dev: (231.50, 130.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1059)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (328.88, 62.89)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 321, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3126)
[0000][PE] mean and std.dev: (762.00, 737.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4099)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203356 reads in 389.280 CPU sec, 118.138 real sec
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1203400
	[0000][ M::kt_pipeline] read 1203400 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525263, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 303, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (393.42, 339.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (328.99, 62.87)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 326, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (750.19, 747.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203342 reads in 344.981 CPU sec, 53.495 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1203480
	[0000][ M::kt_pipeline] read 1203480 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524850, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 493, 773)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2001)
[0000][PE] mean and std.dev: (587.21, 487.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.17, 62.97)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 332, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1202)
[0000][PE] mean and std.dev: (357.60, 189.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203400 reads in 330.120 CPU sec, 42.238 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524865, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 224, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (258.00, 208.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1431)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.13, 63.07)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 341, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (546.80, 419.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203480 reads in 335.052 CPU sec, 58.423 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203512
	[0000][ M::kt_pipeline] read 1203512 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525081, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 242, 631)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1607)
[0000][PE] mean and std.dev: (268.29, 210.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.24, 62.89)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 417, 838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2054)
[0000][PE] mean and std.dev: (461.92, 304.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 325.920 CPU sec, 39.276 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1203462
	[0000][ M::kt_pipeline] read 1203462 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203512
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524997, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 273, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2999)
[0000][PE] mean and std.dev: (760.76, 854.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4178)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.31, 63.00)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 312, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (708.76, 726.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3644)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203512 reads in 321.705 CPU sec, 38.307 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1203430
	[0000][ M::kt_pipeline] read 1203430 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525033, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 254, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2844)
[0000][PE] mean and std.dev: (366.67, 380.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.36, 62.85)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 878, 1702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4510)
[0000][PE] mean and std.dev: (1157.85, 958.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203462 reads in 323.031 CPU sec, 47.934 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524993, 3, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.37, 62.86)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 357, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1573)
[0000][PE] mean and std.dev: (454.06, 286.08)
[0000][PE] low and high boundaries for proper pairs: (1, 2018)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203430 reads in 325.263 CPU sec, 35.322 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000065, nseq: 1203272
	[0000][ M::kt_pipeline] read 1203272 sequences (180000065 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524526, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 564, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4367)
[0000][PE] mean and std.dev: (919.76, 1062.71)
[0000][PE] low and high boundaries for proper pairs: (1, 5765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.28, 62.93)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 374, 1023)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2523)
[0000][PE] mean and std.dev: (640.59, 527.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 325.842 CPU sec, 43.528 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1203508
	[0000][ M::kt_pipeline] read 1203508 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525163, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 245, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (250.13, 108.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1037)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.58, 62.96)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 299, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (674.19, 748.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203272 reads in 324.196 CPU sec, 41.352 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524784, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 236, 262)
[0000][PE] low and high boundaries for computing mean and std.dev: (97, 372)
[0000][PE] mean and std.dev: (215.13, 41.93)
[0000][PE] low and high boundaries for proper pairs: (42, 427)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.52, 63.00)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (156, 348, 1392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3864)
[0000][PE] mean and std.dev: (694.06, 865.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203508 reads in 322.343 CPU sec, 35.674 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203510
	[0000][ M::kt_pipeline] read 1203510 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 525525, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.44, 62.90)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 275, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 574)
[0000][PE] mean and std.dev: (280.12, 64.75)
[0000][PE] low and high boundaries for proper pairs: (1, 685)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 319.356 CPU sec, 37.198 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203500
	[0000][ M::kt_pipeline] read 1203500 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524739, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 169, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (232.83, 196.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.86, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 577, 1471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (879.80, 779.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5296)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203510 reads in 316.689 CPU sec, 44.777 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525143, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 240, 594)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1554)
[0000][PE] mean and std.dev: (329.62, 291.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2034)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.58, 62.99)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 895, 1851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4975)
[0000][PE] mean and std.dev: (1084.41, 901.70)
[0000][PE] low and high boundaries for proper pairs: (1, 6537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203500 reads in 306.603 CPU sec, 38.967 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1203448
	[0000][ M::kt_pipeline] read 1203448 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525041, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 215, 253)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 409)
[0000][PE] mean and std.dev: (217.00, 56.38)
[0000][PE] low and high boundaries for proper pairs: (1, 487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.65, 63.19)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 617, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (639.54, 487.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 312.710 CPU sec, 36.198 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203476
	[0000][ M::kt_pipeline] read 1203476 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525238, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 248, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (344.53, 261.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.79, 63.21)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 1335, 2072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5562)
[0000][PE] mean and std.dev: (1337.82, 1146.51)
[0000][PE] low and high boundaries for proper pairs: (1, 7307)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203448 reads in 313.123 CPU sec, 38.900 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1203370
	[0000][ M::kt_pipeline] read 1203370 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525088, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 384, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (523.95, 418.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.80, 63.02)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 622, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2832)
[0000][PE] mean and std.dev: (718.38, 581.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3689)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203476 reads in 324.552 CPU sec, 41.150 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1203412
	[0000][ M::kt_pipeline] read 1203412 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524724, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 279, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1927)
[0000][PE] mean and std.dev: (434.50, 422.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.83, 63.07)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 736, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3952)
[0000][PE] mean and std.dev: (802.37, 588.02)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203370 reads in 313.530 CPU sec, 34.988 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203572
	[0000][ M::kt_pipeline] read 1203572 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 525338, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 352, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (577.08, 528.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.96, 63.15)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 352, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (716.56, 626.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4526)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203412 reads in 313.113 CPU sec, 46.260 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1203582
	[0000][ M::kt_pipeline] read 1203582 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203572
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524843, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 203, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 422)
[0000][PE] mean and std.dev: (174.55, 55.04)
[0000][PE] low and high boundaries for proper pairs: (1, 509)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.84, 63.10)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 312, 635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1475)
[0000][PE] mean and std.dev: (444.64, 330.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203572 reads in 316.997 CPU sec, 40.865 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203518
	[0000][ M::kt_pipeline] read 1203518 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203582
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525116, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 313, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (615.59, 539.56)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.77, 63.06)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 342, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (453.18, 322.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203582 reads in 313.308 CPU sec, 37.131 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203310
	[0000][ M::kt_pipeline] read 1203310 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524827, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 203, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 645)
[0000][PE] mean and std.dev: (185.82, 70.65)
[0000][PE] low and high boundaries for proper pairs: (1, 814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.90, 63.24)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 229, 306)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 570)
[0000][PE] mean and std.dev: (225.91, 70.95)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203518 reads in 324.316 CPU sec, 39.064 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1203434
	[0000][ M::kt_pipeline] read 1203434 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525002, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 206, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (356.25, 292.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.63, 62.90)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 526, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3564)
[0000][PE] mean and std.dev: (766.36, 649.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203310 reads in 319.209 CPU sec, 31.778 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000033, nseq: 1203548
	[0000][ M::kt_pipeline] read 1203548 sequences (180000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525002, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 510, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4422)
[0000][PE] mean and std.dev: (796.06, 765.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5851)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.87, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 470, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (490.00, 345.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2567)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203434 reads in 322.955 CPU sec, 41.602 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1203380
	[0000][ M::kt_pipeline] read 1203380 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203548
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524849, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 294, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3089)
[0000][PE] mean and std.dev: (699.89, 729.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.87, 63.02)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 276, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1367)
[0000][PE] mean and std.dev: (365.80, 297.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1756)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203548 reads in 309.803 CPU sec, 37.382 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203434
	[0000][ M::kt_pipeline] read 1203434 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525022, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 269, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2116)
[0000][PE] mean and std.dev: (442.05, 354.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.52, 62.97)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 515, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (580.47, 353.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203380 reads in 311.150 CPU sec, 37.644 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1203470
	[0000][ M::kt_pipeline] read 1203470 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525172, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 312, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2286)
[0000][PE] mean and std.dev: (599.38, 541.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.42, 63.09)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 461, 1152)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (666.12, 561.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203434 reads in 331.927 CPU sec, 40.294 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203552
	[0000][ M::kt_pipeline] read 1203552 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525260, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 741, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2677)
[0000][PE] mean and std.dev: (613.75, 398.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.56, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 681, 2296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6468)
[0000][PE] mean and std.dev: (1056.31, 1073.24)
[0000][PE] low and high boundaries for proper pairs: (1, 8554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203470 reads in 322.236 CPU sec, 45.537 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203492
	[0000][ M::kt_pipeline] read 1203492 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525262, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 218, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2219)
[0000][PE] mean and std.dev: (475.07, 633.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3007)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.48, 62.94)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 359, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2269)
[0000][PE] mean and std.dev: (631.47, 560.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2941)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203552 reads in 310.930 CPU sec, 39.213 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1203408
	[0000][ M::kt_pipeline] read 1203408 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524956, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 274, 457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1027)
[0000][PE] mean and std.dev: (270.41, 172.49)
[0000][PE] low and high boundaries for proper pairs: (1, 1312)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.67, 63.09)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 813, 1167)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2907)
[0000][PE] mean and std.dev: (808.00, 542.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203492 reads in 314.310 CPU sec, 40.151 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000137, nseq: 1203452
	[0000][ M::kt_pipeline] read 1203452 sequences (180000137 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524958, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 270, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2500)
[0000][PE] mean and std.dev: (575.93, 699.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3375)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.79, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 314, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2396)
[0000][PE] mean and std.dev: (586.58, 519.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203408 reads in 309.112 CPU sec, 34.933 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524763, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 246, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3649)
[0000][PE] mean and std.dev: (684.18, 791.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.11, 63.22)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (354, 383, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (588.29, 396.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3186)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203452 reads in 317.854 CPU sec, 49.688 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524964, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 223, 395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (245.57, 158.93)
[0000][PE] low and high boundaries for proper pairs: (1, 1157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.20, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 256, 546)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1172)
[0000][PE] mean and std.dev: (381.23, 317.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 328.551 CPU sec, 46.202 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203460
	[0000][ M::kt_pipeline] read 1203460 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525615, 6, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 246, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2394)
[0000][PE] mean and std.dev: (461.38, 421.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3126)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.02)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 309.644 CPU sec, 36.353 real sec
[0000] Calling mem_process_seqs.., task: 34
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524956, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 259, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3200)
[0000][PE] mean and std.dev: (516.19, 544.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4221)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.15)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 1053, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (1163.74, 950.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5557)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203460 reads in 309.252 CPU sec, 34.462 real sec
[0000] Calling mem_process_seqs.., task: 35
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525350, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 274, 908)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2284)
[0000][PE] mean and std.dev: (462.76, 353.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.66, 63.06)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 477, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (591.67, 396.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 305.055 CPU sec, 40.325 real sec
[0000] Calling mem_process_seqs.., task: 36
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525344, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 251, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (488.88, 485.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 251, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1110)
[0000][PE] mean and std.dev: (249.44, 141.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 305.323 CPU sec, 27.245 real sec
[0000] Calling mem_process_seqs.., task: 37
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525132, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 261, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (416.73, 352.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 335, 597)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1319)
[0000][PE] mean and std.dev: (407.90, 269.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1680)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 324.865 CPU sec, 49.150 real sec
[0000] Calling mem_process_seqs.., task: 38
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1203296
	[0000][ M::kt_pipeline] read 1203296 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525455, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 229, 674)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1608)
[0000][PE] mean and std.dev: (385.20, 299.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2075)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.99, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 210, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2280)
[0000][PE] mean and std.dev: (476.08, 546.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 319.413 CPU sec, 40.270 real sec
[0000] Calling mem_process_seqs.., task: 39
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203400
	[0000][ M::kt_pipeline] read 1203400 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524874, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 312, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2675)
[0000][PE] mean and std.dev: (637.69, 650.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.00, 63.11)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (408, 842, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3855)
[0000][PE] mean and std.dev: (959.06, 599.48)
[0000][PE] low and high boundaries for proper pairs: (1, 5004)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203296 reads in 318.466 CPU sec, 44.276 real sec
[0000] Calling mem_process_seqs.., task: 40
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525309, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 379, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1983)
[0000][PE] mean and std.dev: (504.73, 418.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2569)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.00, 63.13)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 457, 1675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4511)
[0000][PE] mean and std.dev: (712.83, 664.15)
[0000][PE] low and high boundaries for proper pairs: (1, 5929)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203400 reads in 321.657 CPU sec, 41.929 real sec
[0000] Calling mem_process_seqs.., task: 41
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525034, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 189, 559)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1401)
[0000][PE] mean and std.dev: (252.14, 218.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 342, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2896)
[0000][PE] mean and std.dev: (687.14, 556.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3783)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 317.403 CPU sec, 34.415 real sec
[0000] Calling mem_process_seqs.., task: 42
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203390
	[0000][ M::kt_pipeline] read 1203390 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525187, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 567, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4708)
[0000][PE] mean and std.dev: (863.25, 952.22)
[0000][PE] low and high boundaries for proper pairs: (1, 6218)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.08, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 297, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (601.04, 505.38)
[0000][PE] low and high boundaries for proper pairs: (1, 3727)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 322.961 CPU sec, 46.170 real sec
[0000] Calling mem_process_seqs.., task: 43
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1203408
	[0000][ M::kt_pipeline] read 1203408 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525531, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 254, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1771)
[0000][PE] mean and std.dev: (424.33, 356.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2303)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.95, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 305, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1382)
[0000][PE] mean and std.dev: (380.50, 264.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203390 reads in 315.662 CPU sec, 36.905 real sec
[0000] Calling mem_process_seqs.., task: 44
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524934, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 545, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3153)
[0000][PE] mean and std.dev: (784.72, 729.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 883, 1435)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3801)
[0000][PE] mean and std.dev: (823.06, 702.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203408 reads in 311.063 CPU sec, 39.289 real sec
[0000] Calling mem_process_seqs.., task: 45
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203306
	[0000][ M::kt_pipeline] read 1203306 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524751, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 274, 1027)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2789)
[0000][PE] mean and std.dev: (542.50, 536.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 1084, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3474)
[0000][PE] mean and std.dev: (974.81, 825.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 318.563 CPU sec, 41.071 real sec
[0000] Calling mem_process_seqs.., task: 46
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203394
	[0000][ M::kt_pipeline] read 1203394 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 524748, 3, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 678, 2362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6528)
[0000][PE] mean and std.dev: (957.00, 919.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203306 reads in 320.496 CPU sec, 44.378 real sec
[0000] Calling mem_process_seqs.., task: 47
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203360
	[0000][ M::kt_pipeline] read 1203360 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525315, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 747, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3899)
[0000][PE] mean and std.dev: (823.10, 773.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5134)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 272, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2021)
[0000][PE] mean and std.dev: (465.00, 341.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203394 reads in 316.914 CPU sec, 32.942 real sec
[0000] Calling mem_process_seqs.., task: 48
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524993, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 414, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3609)
[0000][PE] mean and std.dev: (663.65, 565.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4752)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 384, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (688.89, 722.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203360 reads in 310.103 CPU sec, 33.165 real sec
[0000] Calling mem_process_seqs.., task: 49
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203416
	[0000][ M::kt_pipeline] read 1203416 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524809, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 380, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (714.86, 619.32)
[0000][PE] low and high boundaries for proper pairs: (1, 3704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 391, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1705)
[0000][PE] mean and std.dev: (453.86, 324.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 319.327 CPU sec, 41.314 real sec
[0000] Calling mem_process_seqs.., task: 50
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525249, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 387, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (659.43, 685.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.70, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 633, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2322)
[0000][PE] mean and std.dev: (662.69, 436.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3002)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203416 reads in 313.143 CPU sec, 34.229 real sec
[0000] Calling mem_process_seqs.., task: 51
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525132, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 212, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2209)
[0000][PE] mean and std.dev: (478.00, 533.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2892)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 229, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3040)
[0000][PE] mean and std.dev: (667.26, 722.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 307.554 CPU sec, 28.326 real sec
[0000] Calling mem_process_seqs.., task: 52
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525105, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 198, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 781)
[0000][PE] mean and std.dev: (228.50, 140.06)
[0000][PE] low and high boundaries for proper pairs: (1, 994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (754, 877, 1453)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2851)
[0000][PE] mean and std.dev: (987.05, 481.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 316.543 CPU sec, 35.722 real sec
[0000] Calling mem_process_seqs.., task: 53
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1203522
	[0000][ M::kt_pipeline] read 1203522 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524874, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 882, 1176)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (685.12, 567.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4185)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.44)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (617, 837, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2966)
[0000][PE] mean and std.dev: (917.25, 584.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3749)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 321.856 CPU sec, 36.570 real sec
[0000] Calling mem_process_seqs.., task: 54
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000078, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000078 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525133, 5, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 286, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1839)
[0000][PE] mean and std.dev: (369.82, 254.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2377)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.50, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 363, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4216)
[0000][PE] mean and std.dev: (771.43, 747.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5555)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203522 reads in 315.069 CPU sec, 39.570 real sec
[0000] Calling mem_process_seqs.., task: 55
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203494
	[0000][ M::kt_pipeline] read 1203494 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524889, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 746, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2735)
[0000][PE] mean and std.dev: (800.62, 642.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3575)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.58, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (350, 910, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3443)
[0000][PE] mean and std.dev: (933.15, 663.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4474)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 323.055 CPU sec, 36.528 real sec
[0000] Calling mem_process_seqs.., task: 56
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203404
	[0000][ M::kt_pipeline] read 1203404 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524892, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 206, 297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 559)
[0000][PE] mean and std.dev: (194.57, 63.94)
[0000][PE] low and high boundaries for proper pairs: (1, 690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.65, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (475, 777, 1046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2188)
[0000][PE] mean and std.dev: (692.00, 360.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203494 reads in 317.331 CPU sec, 40.370 real sec
[0000] Calling mem_process_seqs.., task: 57
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203460
	[0000][ M::kt_pipeline] read 1203460 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525236, 10, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 217, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2121)
[0000][PE] mean and std.dev: (462.81, 478.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.43, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (218, 1198, 3209)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9191)
[0000][PE] mean and std.dev: (1676.90, 1887.94)
[0000][PE] low and high boundaries for proper pairs: (1, 12182)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 440, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (612.36, 512.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203404 reads in 308.676 CPU sec, 36.067 real sec
[0000] Calling mem_process_seqs.., task: 58
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525092, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 240, 607)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1541)
[0000][PE] mean and std.dev: (377.50, 333.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.68, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 1081, 2418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6686)
[0000][PE] mean and std.dev: (1239.00, 968.33)
[0000][PE] low and high boundaries for proper pairs: (1, 8820)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203460 reads in 325.953 CPU sec, 46.270 real sec
[0000] Calling mem_process_seqs.., task: 59
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1203416
	[0000][ M::kt_pipeline] read 1203416 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525024, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 392, 1706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (777.86, 778.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6200)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 824, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2292)
[0000][PE] mean and std.dev: (789.40, 580.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3113)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 328.840 CPU sec, 47.855 real sec
[0000] Calling mem_process_seqs.., task: 60
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203282
	[0000][ M::kt_pipeline] read 1203282 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524952, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (236, 267, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2315)
[0000][PE] mean and std.dev: (426.12, 373.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.45, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (128, 323, 1679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (788.92, 754.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6332)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203416 reads in 320.598 CPU sec, 41.182 real sec
[0000] Calling mem_process_seqs.., task: 61
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1203336
	[0000][ M::kt_pipeline] read 1203336 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524970, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 250, 353)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 739)
[0000][PE] mean and std.dev: (231.27, 90.17)
[0000][PE] low and high boundaries for proper pairs: (1, 932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 238, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2846)
[0000][PE] mean and std.dev: (499.57, 500.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203282 reads in 316.124 CPU sec, 48.438 real sec
[0000] Calling mem_process_seqs.., task: 62
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525345, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (109, 217, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4468)
[0000][PE] mean and std.dev: (824.00, 1173.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5921)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.52, 63.13)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 353, 770)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1828)
[0000][PE] mean and std.dev: (405.00, 242.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2357)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203336 reads in 322.087 CPU sec, 48.947 real sec
[0000] Calling mem_process_seqs.., task: 63
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1203354
	[0000][ M::kt_pipeline] read 1203354 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525231, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 246, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2067)
[0000][PE] mean and std.dev: (455.54, 450.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2699)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.52, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 950, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4156)
[0000][PE] mean and std.dev: (967.78, 682.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5450)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 311.332 CPU sec, 40.173 real sec
[0000] Calling mem_process_seqs.., task: 64
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203424
	[0000][ M::kt_pipeline] read 1203424 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525220, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 240, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2095)
[0000][PE] mean and std.dev: (470.05, 593.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2845)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.35, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 294, 662)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (449.22, 329.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2105)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203354 reads in 313.978 CPU sec, 34.566 real sec
[0000] Calling mem_process_seqs.., task: 65
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525264, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 287, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3173)
[0000][PE] mean and std.dev: (501.39, 637.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.28, 63.09)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 312, 507)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1017)
[0000][PE] mean and std.dev: (345.20, 192.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203424 reads in 326.427 CPU sec, 51.529 real sec
[0000] Calling mem_process_seqs.., task: 66
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203456
	[0000][ M::kt_pipeline] read 1203456 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524511, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 225, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2732)
[0000][PE] mean and std.dev: (557.67, 595.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.27, 63.23)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 356, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (585.53, 427.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 324.402 CPU sec, 44.382 real sec
[0000] Calling mem_process_seqs.., task: 67
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1203464
	[0000][ M::kt_pipeline] read 1203464 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524804, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 522, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (495.72, 339.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.05, 63.11)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 310, 748)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (426.67, 321.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203456 reads in 327.894 CPU sec, 52.582 real sec
[0000] Calling mem_process_seqs.., task: 68
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1203534
	[0000][ M::kt_pipeline] read 1203534 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525454, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 231, 316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 634)
[0000][PE] mean and std.dev: (233.94, 104.66)
[0000][PE] low and high boundaries for proper pairs: (1, 793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.32, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 285, 915)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2277)
[0000][PE] mean and std.dev: (478.16, 397.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203464 reads in 329.010 CPU sec, 52.253 real sec
[0000] Calling mem_process_seqs.., task: 69
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203534
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525022, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 310, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (567.07, 581.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.53, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 263, 524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1190)
[0000][PE] mean and std.dev: (327.75, 261.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203534 reads in 325.074 CPU sec, 42.749 real sec
[0000] Calling mem_process_seqs.., task: 70
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1203324
	[0000][ M::kt_pipeline] read 1203324 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524622, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (114, 243, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3840)
[0000][PE] mean and std.dev: (561.75, 575.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5082)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.15, 63.21)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 350, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (564.16, 467.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 312.620 CPU sec, 38.530 real sec
[0000] Calling mem_process_seqs.., task: 71
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1203294
	[0000][ M::kt_pipeline] read 1203294 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524857, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (491, 526, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3674)
[0000][PE] mean and std.dev: (971.15, 953.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4785)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.02, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 362, 1418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3772)
[0000][PE] mean and std.dev: (694.72, 635.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203324 reads in 306.493 CPU sec, 33.070 real sec
[0000] Calling mem_process_seqs.., task: 72
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524712, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 264, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (464.00, 524.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.06, 63.13)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 462, 835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2011)
[0000][PE] mean and std.dev: (547.29, 417.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203294 reads in 328.853 CPU sec, 39.083 real sec
[0000] Calling mem_process_seqs.., task: 73
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 524832, 8, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 221, 669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1625)
[0000][PE] mean and std.dev: (286.20, 217.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2103)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.00, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 376, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1814)
[0000][PE] mean and std.dev: (478.58, 306.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 324.748 CPU sec, 52.251 real sec
[0000] Calling mem_process_seqs.., task: 74
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524916, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 238, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (409.80, 413.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.06, 63.32)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 375, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (589.71, 494.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 322.801 CPU sec, 43.210 real sec
[0000] Calling mem_process_seqs.., task: 75
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525198, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 281, 663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1549)
[0000][PE] mean and std.dev: (384.70, 248.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.10, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 390, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3226)
[0000][PE] mean and std.dev: (732.22, 737.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 329.511 CPU sec, 51.202 real sec
[0000] Calling mem_process_seqs.., task: 76
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524895, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 209, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 860)
[0000][PE] mean and std.dev: (247.00, 108.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.99, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 880, 2358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6602)
[0000][PE] mean and std.dev: (1543.11, 1951.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 314.045 CPU sec, 42.536 real sec
[0000] Calling mem_process_seqs.., task: 77
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1203320
	[0000][ M::kt_pipeline] read 1203320 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525109, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 389, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2017)
[0000][PE] mean and std.dev: (455.90, 346.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.08, 63.00)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 1519, 1798)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4680)
[0000][PE] mean and std.dev: (1144.30, 813.41)
[0000][PE] low and high boundaries for proper pairs: (1, 6121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 312.026 CPU sec, 33.335 real sec
[0000] Calling mem_process_seqs.., task: 78
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525171, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 319, 938)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (524.47, 567.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.86, 63.25)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 978, 2136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5994)
[0000][PE] mean and std.dev: (1334.83, 1314.54)
[0000][PE] low and high boundaries for proper pairs: (1, 7923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203320 reads in 315.974 CPU sec, 38.629 real sec
[0000] Calling mem_process_seqs.., task: 79
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203286
	[0000][ M::kt_pipeline] read 1203286 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524331, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 304, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1479)
[0000][PE] mean and std.dev: (395.71, 349.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1924)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.00, 63.26)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 290, 579)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1321)
[0000][PE] mean and std.dev: (323.36, 218.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 333.130 CPU sec, 48.775 real sec
[0000] Calling mem_process_seqs.., task: 80
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203354
	[0000][ M::kt_pipeline] read 1203354 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 525206, 8, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.15, 63.33)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 340, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4172)
[0000][PE] mean and std.dev: (854.92, 974.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5496)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203286 reads in 329.801 CPU sec, 46.157 real sec
[0000] Calling mem_process_seqs.., task: 81
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525131, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (308, 716, 1173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2903)
[0000][PE] mean and std.dev: (591.50, 343.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.83, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 348, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (711.88, 732.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203354 reads in 331.585 CPU sec, 51.996 real sec
[0000] Calling mem_process_seqs.., task: 82
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1203354
	[0000][ M::kt_pipeline] read 1203354 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524746, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 298, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4783)
[0000][PE] mean and std.dev: (820.81, 1023.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.13, 63.13)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 600, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3063)
[0000][PE] mean and std.dev: (801.86, 644.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 336.483 CPU sec, 53.768 real sec
[0000] Calling mem_process_seqs.., task: 83
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203396
	[0000][ M::kt_pipeline] read 1203396 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524985, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 232, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 612)
[0000][PE] mean and std.dev: (213.15, 56.98)
[0000][PE] low and high boundaries for proper pairs: (1, 756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.18, 63.11)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (360, 875, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (721.56, 400.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203354 reads in 334.501 CPU sec, 47.220 real sec
[0000] Calling mem_process_seqs.., task: 84
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203470
	[0000][ M::kt_pipeline] read 1203470 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525047, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 634, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (791.94, 713.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.16, 62.95)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 356, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2630)
[0000][PE] mean and std.dev: (599.50, 490.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3423)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203396 reads in 329.634 CPU sec, 47.822 real sec
[0000] Calling mem_process_seqs.., task: 85
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524701, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 256, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2171)
[0000][PE] mean and std.dev: (570.53, 598.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.15, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 847, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4527)
[0000][PE] mean and std.dev: (780.55, 568.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5932)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203470 reads in 327.982 CPU sec, 46.580 real sec
[0000] Calling mem_process_seqs.., task: 86
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524640, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 244, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 977)
[0000][PE] mean and std.dev: (216.75, 102.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.51, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (581, 668, 1425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3113)
[0000][PE] mean and std.dev: (870.14, 657.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 329.987 CPU sec, 51.158 real sec
[0000] Calling mem_process_seqs.., task: 87
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203348
	[0000][ M::kt_pipeline] read 1203348 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524634, 8, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (273, 316, 1136)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2862)
[0000][PE] mean and std.dev: (550.30, 431.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.32, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 684, 1568)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4206)
[0000][PE] mean and std.dev: (852.75, 714.59)
[0000][PE] low and high boundaries for proper pairs: (1, 5525)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 326.146 CPU sec, 49.668 real sec
[0000] Calling mem_process_seqs.., task: 88
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203296
	[0000][ M::kt_pipeline] read 1203296 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525042, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 285, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2388)
[0000][PE] mean and std.dev: (469.57, 419.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.32, 63.04)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 433, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2690)
[0000][PE] mean and std.dev: (618.17, 446.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3498)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203348 reads in 325.599 CPU sec, 46.998 real sec
[0000] Calling mem_process_seqs.., task: 89
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1203258
	[0000][ M::kt_pipeline] read 1203258 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524828, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 340, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2743)
[0000][PE] mean and std.dev: (610.65, 510.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.56, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 433, 1312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (548.13, 467.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203296 reads in 316.088 CPU sec, 38.725 real sec
[0000] Calling mem_process_seqs.., task: 90
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203306
	[0000][ M::kt_pipeline] read 1203306 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524642, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 232, 308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (199.64, 56.94)
[0000][PE] low and high boundaries for proper pairs: (1, 659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.53, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 962, 2874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1612.56, 1808.72)
[0000][PE] low and high boundaries for proper pairs: (1, 10944)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203258 reads in 314.316 CPU sec, 40.286 real sec
[0000] Calling mem_process_seqs.., task: 91
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524904, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 277, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2925)
[0000][PE] mean and std.dev: (578.32, 614.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.38, 63.19)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 364, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3114)
[0000][PE] mean and std.dev: (664.60, 611.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203306 reads in 328.243 CPU sec, 43.346 real sec
[0000] Calling mem_process_seqs.., task: 92
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525145, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 205, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 899)
[0000][PE] mean and std.dev: (245.14, 200.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.45, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 374, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2863)
[0000][PE] mean and std.dev: (672.04, 526.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 322.462 CPU sec, 52.720 real sec
[0000] Calling mem_process_seqs.., task: 93
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000030, nseq: 1203372
	[0000][ M::kt_pipeline] read 1203372 sequences (180000030 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524556, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 193, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 600)
[0000][PE] mean and std.dev: (197.00, 79.47)
[0000][PE] low and high boundaries for proper pairs: (1, 743)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 359, 1186)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3096)
[0000][PE] mean and std.dev: (616.35, 572.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 322.334 CPU sec, 55.323 real sec
[0000] Calling mem_process_seqs.., task: 94
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203300
	[0000][ M::kt_pipeline] read 1203300 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524733, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 242, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1048)
[0000][PE] mean and std.dev: (247.91, 131.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.50, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 776, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (800.50, 671.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203372 reads in 319.195 CPU sec, 49.053 real sec
[0000] Calling mem_process_seqs.., task: 95
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000054, nseq: 1203250
	[0000][ M::kt_pipeline] read 1203250 sequences (180000054 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524540, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 632, 2616)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7410)
[0000][PE] mean and std.dev: (1169.21, 1394.03)
[0000][PE] low and high boundaries for proper pairs: (1, 9807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 333, 780)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1848)
[0000][PE] mean and std.dev: (495.62, 419.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203300 reads in 315.114 CPU sec, 42.219 real sec
[0000] Calling mem_process_seqs.., task: 96
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1203448
	[0000][ M::kt_pipeline] read 1203448 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524741, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 347, 1489)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (852.50, 1000.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5356)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.45, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 353, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3207)
[0000][PE] mean and std.dev: (635.41, 489.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4193)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203250 reads in 319.213 CPU sec, 40.417 real sec
[0000] Calling mem_process_seqs.., task: 97
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1203342
	[0000][ M::kt_pipeline] read 1203342 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525033, 0, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 249, 312)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 630)
[0000][PE] mean and std.dev: (243.12, 141.72)
[0000][PE] low and high boundaries for proper pairs: (1, 810)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.55, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 296, 1513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (760.73, 755.52)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203448 reads in 313.671 CPU sec, 37.443 real sec
[0000] Calling mem_process_seqs.., task: 98
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524965, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 324, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2958)
[0000][PE] mean and std.dev: (709.82, 791.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.57, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 214, 1717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4751)
[0000][PE] mean and std.dev: (760.55, 781.04)
[0000][PE] low and high boundaries for proper pairs: (1, 6268)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203342 reads in 331.383 CPU sec, 48.827 real sec
[0000] Calling mem_process_seqs.., task: 99
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525127, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (228, 443, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2352)
[0000][PE] mean and std.dev: (649.18, 582.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3060)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.81, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 332, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2687)
[0000][PE] mean and std.dev: (572.10, 474.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 332.167 CPU sec, 51.894 real sec
[0000] Calling mem_process_seqs.., task: 100
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525271, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 214, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1048)
[0000][PE] mean and std.dev: (211.40, 93.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1340)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 649, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2995)
[0000][PE] mean and std.dev: (866.20, 865.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 328.532 CPU sec, 51.243 real sec
[0000] Calling mem_process_seqs.., task: 101
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524923, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 193, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 613)
[0000][PE] mean and std.dev: (208.32, 106.97)
[0000][PE] low and high boundaries for proper pairs: (1, 772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.81, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (367, 961, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (866.74, 528.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 315.067 CPU sec, 40.852 real sec
[0000] Calling mem_process_seqs.., task: 102
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524400, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 308, 910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2270)
[0000][PE] mean and std.dev: (392.14, 282.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.56, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 472, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (823.82, 883.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 321.015 CPU sec, 41.323 real sec
[0000] Calling mem_process_seqs.., task: 103
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1203424
	[0000][ M::kt_pipeline] read 1203424 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525073, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 230, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 664)
[0000][PE] mean and std.dev: (212.21, 94.95)
[0000][PE] low and high boundaries for proper pairs: (1, 835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.54, 63.13)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 760, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (757.62, 576.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3515)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 324.191 CPU sec, 48.180 real sec
[0000] Calling mem_process_seqs.., task: 104
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203280
	[0000][ M::kt_pipeline] read 1203280 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525126, 6, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 214, 625)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1595)
[0000][PE] mean and std.dev: (378.92, 352.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203424 reads in 317.860 CPU sec, 44.465 real sec
[0000] Calling mem_process_seqs.., task: 105
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525452, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 313, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2502)
[0000][PE] mean and std.dev: (600.54, 624.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.47, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 263, 782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1932)
[0000][PE] mean and std.dev: (439.87, 442.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203280 reads in 321.610 CPU sec, 39.461 real sec
[0000] Calling mem_process_seqs.., task: 106
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203298
	[0000][ M::kt_pipeline] read 1203298 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524743, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 282, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3402)
[0000][PE] mean and std.dev: (536.56, 456.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.30, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 766, 1269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (586.87, 432.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 317.593 CPU sec, 40.687 real sec
[0000] Calling mem_process_seqs.., task: 107
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524996, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 194, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1657)
[0000][PE] mean and std.dev: (357.19, 371.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2158)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.42, 63.09)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203298 reads in 326.046 CPU sec, 49.904 real sec
[0000] Calling mem_process_seqs.., task: 108
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525337, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 258, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (280.94, 148.01)
[0000][PE] low and high boundaries for proper pairs: (1, 873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 62.99)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 267, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1471)
[0000][PE] mean and std.dev: (398.30, 297.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 325.962 CPU sec, 50.546 real sec
[0000] Calling mem_process_seqs.., task: 109
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525363, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 299, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2265)
[0000][PE] mean and std.dev: (565.14, 500.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 308, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3098)
[0000][PE] mean and std.dev: (703.27, 577.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 321.836 CPU sec, 49.475 real sec
[0000] Calling mem_process_seqs.., task: 110
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525248, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 238, 588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1432)
[0000][PE] mean and std.dev: (284.29, 238.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.56, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 334, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2475)
[0000][PE] mean and std.dev: (629.73, 536.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 324.382 CPU sec, 48.466 real sec
[0000] Calling mem_process_seqs.., task: 111
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 524592, 4, 32)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 754, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3860)
[0000][PE] mean and std.dev: (782.54, 754.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.84, 63.26)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 645, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (720.10, 584.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 333.136 CPU sec, 52.933 real sec
[0000] Calling mem_process_seqs.., task: 112
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1203282
	[0000][ M::kt_pipeline] read 1203282 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525074, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 250, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (238.78, 65.71)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.04, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (322, 662, 2692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7432)
[0000][PE] mean and std.dev: (1210.41, 1161.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 331.701 CPU sec, 54.796 real sec
[0000] Calling mem_process_seqs.., task: 113
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1203414
	[0000][ M::kt_pipeline] read 1203414 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525068, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 736, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2985)
[0000][PE] mean and std.dev: (793.84, 699.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3919)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.02, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 794, 1572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4154)
[0000][PE] mean and std.dev: (794.22, 576.12)
[0000][PE] low and high boundaries for proper pairs: (1, 5445)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203282 reads in 318.710 CPU sec, 43.547 real sec
[0000] Calling mem_process_seqs.., task: 114
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1203296
	[0000][ M::kt_pipeline] read 1203296 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524494, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 338, 671)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1533)
[0000][PE] mean and std.dev: (427.33, 307.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1964)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 1029, 1535)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4097)
[0000][PE] mean and std.dev: (1065.23, 765.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5378)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203414 reads in 324.110 CPU sec, 55.265 real sec
[0000] Calling mem_process_seqs.., task: 115
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524850, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 249, 358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 734)
[0000][PE] mean and std.dev: (216.90, 74.74)
[0000][PE] low and high boundaries for proper pairs: (1, 922)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 364, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (480.27, 378.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3068)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203296 reads in 329.157 CPU sec, 61.152 real sec
[0000] Calling mem_process_seqs.., task: 116
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1203414
	[0000][ M::kt_pipeline] read 1203414 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524946, 10, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 212, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2671)
[0000][PE] mean and std.dev: (568.93, 492.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1098, 3248, 4309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10731)
[0000][PE] mean and std.dev: (3165.80, 2394.34)
[0000][PE] low and high boundaries for proper pairs: (1, 13942)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 595, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4575)
[0000][PE] mean and std.dev: (907.23, 867.17)
[0000][PE] low and high boundaries for proper pairs: (1, 6040)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 330.360 CPU sec, 62.594 real sec
[0000] Calling mem_process_seqs.., task: 117
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203532
	[0000][ M::kt_pipeline] read 1203532 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524873, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 354, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3568)
[0000][PE] mean and std.dev: (671.93, 616.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4714)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.11)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203414 reads in 316.601 CPU sec, 44.001 real sec
[0000] Calling mem_process_seqs.., task: 118
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1203476
	[0000][ M::kt_pipeline] read 1203476 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524601, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 471, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2872)
[0000][PE] mean and std.dev: (629.40, 605.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.27, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 256, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1786)
[0000][PE] mean and std.dev: (488.00, 437.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2313)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203532 reads in 319.210 CPU sec, 38.533 real sec
[0000] Calling mem_process_seqs.., task: 119
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524937, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 209, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1717)
[0000][PE] mean and std.dev: (254.39, 174.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2234)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.09, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 784, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3176)
[0000][PE] mean and std.dev: (691.95, 674.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4137)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203476 reads in 320.613 CPU sec, 42.960 real sec
[0000] Calling mem_process_seqs.., task: 120
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203504
	[0000][ M::kt_pipeline] read 1203504 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524882, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 219, 301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 501)
[0000][PE] mean and std.dev: (241.17, 81.94)
[0000][PE] low and high boundaries for proper pairs: (1, 601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 514, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2372)
[0000][PE] mean and std.dev: (482.85, 364.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3086)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 324.501 CPU sec, 48.425 real sec
[0000] Calling mem_process_seqs.., task: 121
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203504
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524729, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 515, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3010)
[0000][PE] mean and std.dev: (657.73, 495.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3932)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 544, 1203)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2987)
[0000][PE] mean and std.dev: (770.78, 620.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203504 reads in 324.428 CPU sec, 49.095 real sec
[0000] Calling mem_process_seqs.., task: 122
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1203394
	[0000][ M::kt_pipeline] read 1203394 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525013, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 193, 490)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1216)
[0000][PE] mean and std.dev: (229.67, 171.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 776, 1815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4777)
[0000][PE] mean and std.dev: (926.40, 813.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6258)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 319.750 CPU sec, 48.306 real sec
[0000] Calling mem_process_seqs.., task: 123
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1203234
	[0000][ M::kt_pipeline] read 1203234 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525382, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 243, 930)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2468)
[0000][PE] mean and std.dev: (421.78, 489.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3237)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.13, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 379, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (680.56, 643.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203394 reads in 328.149 CPU sec, 43.399 real sec
[0000] Calling mem_process_seqs.., task: 124
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 525003, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 286, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2059)
[0000][PE] mean and std.dev: (444.93, 356.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.21, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 324, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2514)
[0000][PE] mean and std.dev: (608.95, 490.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3256)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203234 reads in 326.941 CPU sec, 47.588 real sec
[0000] Calling mem_process_seqs.., task: 125
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000009, nseq: 1203536
	[0000][ M::kt_pipeline] read 1203536 sequences (180000009 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525371, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 415, 1497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4065)
[0000][PE] mean and std.dev: (819.50, 855.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.10, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (339, 1063, 2251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6075)
[0000][PE] mean and std.dev: (1265.84, 1161.49)
[0000][PE] low and high boundaries for proper pairs: (1, 7987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 332.540 CPU sec, 59.185 real sec
[0000] Calling mem_process_seqs.., task: 126
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1203362
	[0000][ M::kt_pipeline] read 1203362 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525166, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 358, 1580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4290)
[0000][PE] mean and std.dev: (921.67, 1081.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5645)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.09, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 306, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (764.88, 742.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4848)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203536 reads in 329.162 CPU sec, 50.597 real sec
[0000] Calling mem_process_seqs.., task: 127
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524891, 3, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 310, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2466)
[0000][PE] mean and std.dev: (463.18, 417.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3226)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.05, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203362 reads in 334.982 CPU sec, 57.719 real sec
[0000] Calling mem_process_seqs.., task: 128
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1203432
	[0000][ M::kt_pipeline] read 1203432 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524819, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 335, 1130)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3030)
[0000][PE] mean and std.dev: (596.88, 547.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.11, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 318, 979)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2527)
[0000][PE] mean and std.dev: (537.11, 550.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 323.428 CPU sec, 45.007 real sec
[0000] Calling mem_process_seqs.., task: 129
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1203380
	[0000][ M::kt_pipeline] read 1203380 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525381, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 302, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (465.73, 413.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2325)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.06, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 1033, 2204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5988)
[0000][PE] mean and std.dev: (1278.05, 1171.56)
[0000][PE] low and high boundaries for proper pairs: (1, 7880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203432 reads in 328.755 CPU sec, 48.322 real sec
[0000] Calling mem_process_seqs.., task: 130
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203348
	[0000][ M::kt_pipeline] read 1203348 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525057, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 600, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2796)
[0000][PE] mean and std.dev: (734.81, 684.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.86, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 316, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3244)
[0000][PE] mean and std.dev: (571.30, 498.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203380 reads in 329.307 CPU sec, 52.775 real sec
[0000] Calling mem_process_seqs.., task: 131
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203352
	[0000][ M::kt_pipeline] read 1203352 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525429, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 176, 636)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1624)
[0000][PE] mean and std.dev: (327.18, 328.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2118)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 507, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5156)
[0000][PE] mean and std.dev: (760.28, 703.31)
[0000][PE] low and high boundaries for proper pairs: (1, 6787)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203348 reads in 336.022 CPU sec, 53.585 real sec
[0000] Calling mem_process_seqs.., task: 132
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524542, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 297, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3044)
[0000][PE] mean and std.dev: (625.31, 694.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4006)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.95, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 375, 1184)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3094)
[0000][PE] mean and std.dev: (660.15, 669.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203352 reads in 327.473 CPU sec, 44.594 real sec
[0000] Calling mem_process_seqs.., task: 133
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1203462
	[0000][ M::kt_pipeline] read 1203462 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524901, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 257, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 917)
[0000][PE] mean and std.dev: (307.55, 185.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.91, 63.08)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 389, 1620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4352)
[0000][PE] mean and std.dev: (795.29, 754.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 320.283 CPU sec, 36.769 real sec
[0000] Calling mem_process_seqs.., task: 134
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203294
	[0000][ M::kt_pipeline] read 1203294 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525043, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 275, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2463)
[0000][PE] mean and std.dev: (463.00, 497.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3223)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 627, 1198)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3196)
[0000][PE] mean and std.dev: (659.69, 560.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203462 reads in 333.306 CPU sec, 59.902 real sec
[0000] Calling mem_process_seqs.., task: 135
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1203446
	[0000][ M::kt_pipeline] read 1203446 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525149, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 212, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 884)
[0000][PE] mean and std.dev: (216.42, 98.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.99, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 621, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3431)
[0000][PE] mean and std.dev: (669.92, 487.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4483)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203294 reads in 320.905 CPU sec, 45.778 real sec
[0000] Calling mem_process_seqs.., task: 136
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524961, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 454, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4022)
[0000][PE] mean and std.dev: (595.62, 664.16)
[0000][PE] low and high boundaries for proper pairs: (1, 5295)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (192, 799, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2625)
[0000][PE] mean and std.dev: (679.14, 531.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3436)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203258
	[0000][ M::kt_pipeline] read 1203258 sequences (180000280 bp)...
	[0000][ M::mem_process_seqs] Processed 1203446 reads in 329.725 CPU sec, 52.900 real sec
[0000] Calling mem_process_seqs.., task: 137
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203258
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524984, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 232, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2887)
[0000][PE] mean and std.dev: (400.73, 423.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3793)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.89, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 432, 1626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4368)
[0000][PE] mean and std.dev: (899.46, 766.37)
[0000][PE] low and high boundaries for proper pairs: (1, 5739)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203258 reads in 318.031 CPU sec, 43.820 real sec
[0000] Calling mem_process_seqs.., task: 138
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1203284
	[0000][ M::kt_pipeline] read 1203284 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524651, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 938, 1789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4829)
[0000][PE] mean and std.dev: (941.07, 741.48)
[0000][PE] low and high boundaries for proper pairs: (1, 6349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.86, 63.48)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (353, 928, 1469)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3701)
[0000][PE] mean and std.dev: (763.50, 472.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4817)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 326.798 CPU sec, 48.098 real sec
[0000] Calling mem_process_seqs.., task: 139
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1203402
	[0000][ M::kt_pipeline] read 1203402 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525083, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 315, 1701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4711)
[0000][PE] mean and std.dev: (839.92, 969.77)
[0000][PE] low and high boundaries for proper pairs: (1, 6216)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.10, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 353, 554)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1204)
[0000][PE] mean and std.dev: (303.55, 120.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203284 reads in 315.110 CPU sec, 48.011 real sec
[0000] Calling mem_process_seqs.., task: 140
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203402
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524914, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 291, 702)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (297.53, 232.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (335, 955, 1422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3596)
[0000][PE] mean and std.dev: (1039.14, 862.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4683)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203402 reads in 318.475 CPU sec, 46.881 real sec
[0000] Calling mem_process_seqs.., task: 141
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203400
	[0000][ M::kt_pipeline] read 1203400 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524713, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 277, 1212)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3272)
[0000][PE] mean and std.dev: (717.47, 795.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4302)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 312, 737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (416.69, 329.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 323.865 CPU sec, 53.095 real sec
[0000] Calling mem_process_seqs.., task: 142
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524853, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 243, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 614)
[0000][PE] mean and std.dev: (199.76, 76.93)
[0000][PE] low and high boundaries for proper pairs: (1, 759)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 636, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4047)
[0000][PE] mean and std.dev: (1041.17, 1109.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5481)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203400 reads in 325.012 CPU sec, 49.950 real sec
[0000] Calling mem_process_seqs.., task: 143
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1203404
	[0000][ M::kt_pipeline] read 1203404 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524757, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 229, 279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 513)
[0000][PE] mean and std.dev: (213.78, 71.55)
[0000][PE] low and high boundaries for proper pairs: (1, 630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.44)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 292, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2330)
[0000][PE] mean and std.dev: (449.35, 415.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 330.095 CPU sec, 48.771 real sec
[0000] Calling mem_process_seqs.., task: 144
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524624, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 273, 1524)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4192)
[0000][PE] mean and std.dev: (662.06, 765.97)
[0000][PE] low and high boundaries for proper pairs: (1, 5526)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.88, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 497, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2362)
[0000][PE] mean and std.dev: (580.30, 422.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203404 reads in 333.476 CPU sec, 54.223 real sec
[0000] Calling mem_process_seqs.., task: 145
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000176, nseq: 1203302
	[0000][ M::kt_pipeline] read 1203302 sequences (180000176 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525067, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 273, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1970)
[0000][PE] mean and std.dev: (343.69, 279.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 694, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2282)
[0000][PE] mean and std.dev: (600.50, 400.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 315.784 CPU sec, 37.019 real sec
[0000] Calling mem_process_seqs.., task: 146
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524850, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 248, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (498.45, 446.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 637, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3681)
[0000][PE] mean and std.dev: (821.00, 688.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4824)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203302 reads in 324.014 CPU sec, 49.814 real sec
[0000] Calling mem_process_seqs.., task: 147
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524772, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 217, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (331.43, 241.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 705, 1493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3949)
[0000][PE] mean and std.dev: (1068.94, 975.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5177)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 313.723 CPU sec, 45.415 real sec
[0000] Calling mem_process_seqs.., task: 148
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203522
	[0000][ M::kt_pipeline] read 1203522 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524732, 5, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 171, 543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (280.53, 285.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 240, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2886)
[0000][PE] mean and std.dev: (588.71, 724.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3795)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 317.817 CPU sec, 45.131 real sec
[0000] Calling mem_process_seqs.., task: 149
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1203408
	[0000][ M::kt_pipeline] read 1203408 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525004, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 294, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1588)
[0000][PE] mean and std.dev: (399.68, 376.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 413, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (772.81, 599.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4601)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203522 reads in 312.270 CPU sec, 42.319 real sec
[0000] Calling mem_process_seqs.., task: 150
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525354, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 232, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 784)
[0000][PE] mean and std.dev: (238.33, 115.32)
[0000][PE] low and high boundaries for proper pairs: (1, 991)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.61, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 417, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (630.81, 506.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203408 reads in 320.959 CPU sec, 44.071 real sec
[0000] Calling mem_process_seqs.., task: 151
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203448
	[0000][ M::kt_pipeline] read 1203448 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525340, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 573, 2116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5968)
[0000][PE] mean and std.dev: (1123.62, 1568.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.63, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 1159, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (975.40, 650.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 329.157 CPU sec, 51.088 real sec
[0000] Calling mem_process_seqs.., task: 152
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1203412
	[0000][ M::kt_pipeline] read 1203412 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524909, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 230, 280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 482)
[0000][PE] mean and std.dev: (208.00, 58.50)
[0000][PE] low and high boundaries for proper pairs: (1, 583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 341, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3051)
[0000][PE] mean and std.dev: (736.42, 778.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203448 reads in 322.869 CPU sec, 47.179 real sec
[0000] Calling mem_process_seqs.., task: 153
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203450
	[0000][ M::kt_pipeline] read 1203450 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524967, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 663, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4042)
[0000][PE] mean and std.dev: (855.31, 891.83)
[0000][PE] low and high boundaries for proper pairs: (1, 5317)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.39, 63.53)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 794, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (632.71, 445.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203412 reads in 321.765 CPU sec, 46.063 real sec
[0000] Calling mem_process_seqs.., task: 154
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1203456
	[0000][ M::kt_pipeline] read 1203456 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203450
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524747, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 242, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (651.89, 743.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4171)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.47)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 376, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2808)
[0000][PE] mean and std.dev: (611.23, 527.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203450 reads in 326.160 CPU sec, 45.872 real sec
[0000] Calling mem_process_seqs.., task: 155
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525190, 4, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 264, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2339)
[0000][PE] mean and std.dev: (515.33, 657.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.52, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 297, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 702)
[0000][PE] mean and std.dev: (257.48, 79.93)
[0000][PE] low and high boundaries for proper pairs: (1, 864)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203456 reads in 313.290 CPU sec, 38.527 real sec
[0000] Calling mem_process_seqs.., task: 156
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1203302
	[0000][ M::kt_pipeline] read 1203302 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524787, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 261, 317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 621)
[0000][PE] mean and std.dev: (215.40, 72.21)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.29, 63.23)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 465, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2878)
[0000][PE] mean and std.dev: (587.00, 476.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 323.854 CPU sec, 56.605 real sec
[0000] Calling mem_process_seqs.., task: 157
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1203428
	[0000][ M::kt_pipeline] read 1203428 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524852, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 280, 1351)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3565)
[0000][PE] mean and std.dev: (710.86, 711.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4672)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.50, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 553, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (666.24, 570.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4146)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203302 reads in 329.308 CPU sec, 50.983 real sec
[0000] Calling mem_process_seqs.., task: 158
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203348
	[0000][ M::kt_pipeline] read 1203348 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525055, 3, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 211, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (257.76, 187.74)
[0000][PE] low and high boundaries for proper pairs: (1, 1009)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.64, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 569, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3219)
[0000][PE] mean and std.dev: (821.54, 715.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4212)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203428 reads in 329.027 CPU sec, 56.511 real sec
[0000] Calling mem_process_seqs.., task: 159
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203348
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525409, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 254, 575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1393)
[0000][PE] mean and std.dev: (322.09, 288.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.51, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 267, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2423)
[0000][PE] mean and std.dev: (427.15, 392.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3172)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203348 reads in 330.008 CPU sec, 54.195 real sec
[0000] Calling mem_process_seqs.., task: 160
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 525192, 8, 14)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.19, 63.02)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 836, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3164)
[0000][PE] mean and std.dev: (806.07, 517.52)
[0000][PE] low and high boundaries for proper pairs: (1, 4109)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 323.669 CPU sec, 54.161 real sec
[0000] Calling mem_process_seqs.., task: 161
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525315, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 276, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3583)
[0000][PE] mean and std.dev: (811.10, 888.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.40, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 335, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2433)
[0000][PE] mean and std.dev: (612.62, 540.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 306.765 CPU sec, 32.576 real sec
[0000] Calling mem_process_seqs.., task: 162
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1203284
	[0000][ M::kt_pipeline] read 1203284 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524878, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 209, 998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (476.26, 630.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.22, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 809, 1532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (816.85, 579.20)
[0000][PE] low and high boundaries for proper pairs: (1, 5471)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 314.215 CPU sec, 39.203 real sec
[0000] Calling mem_process_seqs.., task: 163
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203356
	[0000][ M::kt_pipeline] read 1203356 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203284
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525213, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 322, 1119)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3013)
[0000][PE] mean and std.dev: (608.77, 553.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.27, 63.05)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 420, 1211)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3115)
[0000][PE] mean and std.dev: (615.42, 478.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4067)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203284 reads in 325.907 CPU sec, 54.282 real sec
[0000] Calling mem_process_seqs.., task: 164
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000284, nseq: 1203362
	[0000][ M::kt_pipeline] read 1203362 sequences (180000284 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524916, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 541, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (619.55, 455.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.66, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 754, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3611)
[0000][PE] mean and std.dev: (835.48, 593.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4716)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203356 reads in 316.095 CPU sec, 39.597 real sec
[0000] Calling mem_process_seqs.., task: 165
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000231, nseq: 1203274
	[0000][ M::kt_pipeline] read 1203274 sequences (180000231 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524406, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 804, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3395)
[0000][PE] mean and std.dev: (985.44, 971.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4873)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.70, 63.09)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 407, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3787)
[0000][PE] mean and std.dev: (659.43, 586.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203362 reads in 329.855 CPU sec, 58.276 real sec
[0000] Calling mem_process_seqs.., task: 166
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1203276
	[0000][ M::kt_pipeline] read 1203276 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525171, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 266, 589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (393.73, 301.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 736, 1223)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3167)
[0000][PE] mean and std.dev: (715.15, 500.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203274 reads in 312.455 CPU sec, 41.774 real sec
[0000] Calling mem_process_seqs.., task: 167
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524872, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 208, 743)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1935)
[0000][PE] mean and std.dev: (437.31, 398.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.49, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 839, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2551)
[0000][PE] mean and std.dev: (748.41, 404.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3293)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203276 reads in 311.048 CPU sec, 38.506 real sec
[0000] Calling mem_process_seqs.., task: 168
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1203336
	[0000][ M::kt_pipeline] read 1203336 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525257, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 227, 659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1661)
[0000][PE] mean and std.dev: (305.53, 216.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2162)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.66, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 742, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2521)
[0000][PE] mean and std.dev: (681.59, 416.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 323.190 CPU sec, 48.562 real sec
[0000] Calling mem_process_seqs.., task: 169
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203208
	[0000][ M::kt_pipeline] read 1203208 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525377, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 301, 528)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1160)
[0000][PE] mean and std.dev: (385.12, 282.36)
[0000][PE] low and high boundaries for proper pairs: (1, 1515)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.47, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 325, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4214)
[0000][PE] mean and std.dev: (828.59, 959.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5534)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203336 reads in 322.972 CPU sec, 54.974 real sec
[0000] Calling mem_process_seqs.., task: 170
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1203286
	[0000][ M::kt_pipeline] read 1203286 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525223, 3, 31)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 212, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 885)
[0000][PE] mean and std.dev: (211.29, 73.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.81, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 359, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (659.48, 478.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203208 reads in 328.296 CPU sec, 49.739 real sec
[0000] Calling mem_process_seqs.., task: 171
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000167, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000167 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525196, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 609, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1934)
[0000][PE] mean and std.dev: (517.25, 365.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.52, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 369, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 683)
[0000][PE] mean and std.dev: (290.09, 76.64)
[0000][PE] low and high boundaries for proper pairs: (1, 832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203286 reads in 318.846 CPU sec, 62.279 real sec
[0000] Calling mem_process_seqs.., task: 172
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1203378
	[0000][ M::kt_pipeline] read 1203378 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 523279, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.21, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 1236, 1343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3487)
[0000][PE] mean and std.dev: (907.69, 625.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4559)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 358.008 CPU sec, 55.514 real sec
[0000] Calling mem_process_seqs.., task: 173
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524784, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 236, 786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (494.57, 559.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (149, 224, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1868)
[0000][PE] mean and std.dev: (331.60, 353.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203378 reads in 328.680 CPU sec, 45.444 real sec
[0000] Calling mem_process_seqs.., task: 174
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524934, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 198, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 753)
[0000][PE] mean and std.dev: (219.80, 132.02)
[0000][PE] low and high boundaries for proper pairs: (1, 961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 249, 973)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2531)
[0000][PE] mean and std.dev: (433.15, 341.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3310)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 321.904 CPU sec, 52.849 real sec
[0000] Calling mem_process_seqs.., task: 175
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203276
	[0000][ M::kt_pipeline] read 1203276 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525020, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 336, 383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 789)
[0000][PE] mean and std.dev: (276.40, 149.42)
[0000][PE] low and high boundaries for proper pairs: (1, 992)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.16)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 770, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (784.70, 560.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4634)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 314.775 CPU sec, 42.514 real sec
[0000] Calling mem_process_seqs.., task: 176
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1203332
	[0000][ M::kt_pipeline] read 1203332 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524706, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 262, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (350.95, 353.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2256)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 900, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (786.32, 570.88)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203276 reads in 315.656 CPU sec, 53.322 real sec
[0000] Calling mem_process_seqs.., task: 177
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203306
	[0000][ M::kt_pipeline] read 1203306 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525100, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 293, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (268.47, 112.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.09)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (682, 1173, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (1134.50, 891.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4942)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203332 reads in 321.637 CPU sec, 55.576 real sec
[0000] Calling mem_process_seqs.., task: 178
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203314
	[0000][ M::kt_pipeline] read 1203314 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 515151, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 974, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (647.69, 545.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3939)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.20, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 297, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (443.75, 398.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203306 reads in 355.756 CPU sec, 57.626 real sec
[0000] Calling mem_process_seqs.., task: 179
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203298
	[0000][ M::kt_pipeline] read 1203298 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524780, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 197, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2411)
[0000][PE] mean and std.dev: (328.36, 296.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 279, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1230)
[0000][PE] mean and std.dev: (311.64, 240.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1571)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203314 reads in 316.080 CPU sec, 50.099 real sec
[0000] Calling mem_process_seqs.., task: 180
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1203306
	[0000][ M::kt_pipeline] read 1203306 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 525190, 6, 29)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.88, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 244, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1819)
[0000][PE] mean and std.dev: (457.71, 461.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2372)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203298 reads in 310.170 CPU sec, 39.613 real sec
[0000] Calling mem_process_seqs.., task: 181
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524730, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 345, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (483.25, 393.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.96, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 404, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (678.47, 691.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203306 reads in 326.079 CPU sec, 51.045 real sec
[0000] Calling mem_process_seqs.., task: 182
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524609, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 191, 474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (216.43, 141.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1497)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 456, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2189)
[0000][PE] mean and std.dev: (532.15, 368.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 323.827 CPU sec, 51.523 real sec
[0000] Calling mem_process_seqs.., task: 183
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525188, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 314, 849)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2087)
[0000][PE] mean and std.dev: (546.47, 421.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.44)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 2134, 3897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11131)
[0000][PE] mean and std.dev: (2125.17, 1882.33)
[0000][PE] low and high boundaries for proper pairs: (1, 14748)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 326.425 CPU sec, 58.293 real sec
[0000] Calling mem_process_seqs.., task: 184
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525033, 4, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 296, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2582)
[0000][PE] mean and std.dev: (505.00, 457.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 329, 1259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3289)
[0000][PE] mean and std.dev: (694.12, 735.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 323.286 CPU sec, 43.768 real sec
[0000] Calling mem_process_seqs.., task: 185
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203494
	[0000][ M::kt_pipeline] read 1203494 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524657, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 281, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2497)
[0000][PE] mean and std.dev: (489.20, 439.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.46, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 309, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2334)
[0000][PE] mean and std.dev: (436.59, 374.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3054)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 312.335 CPU sec, 41.005 real sec
[0000] Calling mem_process_seqs.., task: 186
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524780, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 277, 792)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2118)
[0000][PE] mean and std.dev: (392.62, 374.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.14)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 875, 1672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4444)
[0000][PE] mean and std.dev: (916.70, 715.32)
[0000][PE] low and high boundaries for proper pairs: (1, 5830)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203494 reads in 318.591 CPU sec, 45.613 real sec
[0000] Calling mem_process_seqs.., task: 187
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203298
	[0000][ M::kt_pipeline] read 1203298 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525186, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 376, 1486)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3950)
[0000][PE] mean and std.dev: (836.82, 901.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.58, 63.04)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 499, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (782.80, 733.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4183)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 314.976 CPU sec, 50.478 real sec
[0000] Calling mem_process_seqs.., task: 188
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525179, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 732, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4475)
[0000][PE] mean and std.dev: (943.88, 1040.63)
[0000][PE] low and high boundaries for proper pairs: (1, 5893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.15)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 1811, 2762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7834)
[0000][PE] mean and std.dev: (2053.20, 2291.98)
[0000][PE] low and high boundaries for proper pairs: (1, 11221)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203298 reads in 316.476 CPU sec, 45.879 real sec
[0000] Calling mem_process_seqs.., task: 189
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1203306
	[0000][ M::kt_pipeline] read 1203306 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524627, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 381, 1896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5266)
[0000][PE] mean and std.dev: (908.47, 925.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 267, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (444.29, 430.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 318.337 CPU sec, 53.996 real sec
[0000] Calling mem_process_seqs.., task: 190
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203316
	[0000][ M::kt_pipeline] read 1203316 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203306
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525005, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 521, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (660.83, 570.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.48)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 249, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2137)
[0000][PE] mean and std.dev: (546.12, 555.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2779)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203306 reads in 329.265 CPU sec, 49.971 real sec
[0000] Calling mem_process_seqs.., task: 191
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1203430
	[0000][ M::kt_pipeline] read 1203430 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524921, 0, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 277, 346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 580)
[0000][PE] mean and std.dev: (243.77, 76.45)
[0000][PE] low and high boundaries for proper pairs: (1, 697)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203316 reads in 324.496 CPU sec, 58.977 real sec
[0000] Calling mem_process_seqs.., task: 192
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524594, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 212, 713)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1785)
[0000][PE] mean and std.dev: (397.29, 398.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2321)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.03, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 285, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (670.65, 723.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203430 reads in 322.945 CPU sec, 54.234 real sec
[0000] Calling mem_process_seqs.., task: 193
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203440
	[0000][ M::kt_pipeline] read 1203440 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525009, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 264, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (410.67, 410.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 307, 403)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 799)
[0000][PE] mean and std.dev: (251.31, 89.60)
[0000][PE] low and high boundaries for proper pairs: (1, 997)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 321.878 CPU sec, 53.549 real sec
[0000] Calling mem_process_seqs.., task: 194
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1203390
	[0000][ M::kt_pipeline] read 1203390 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524687, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 252, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3257)
[0000][PE] mean and std.dev: (714.89, 736.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4271)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.10)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 261, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1480)
[0000][PE] mean and std.dev: (375.47, 358.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1907)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203440 reads in 322.037 CPU sec, 53.761 real sec
[0000] Calling mem_process_seqs.., task: 195
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1203290
	[0000][ M::kt_pipeline] read 1203290 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525069, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (254, 558, 1847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5033)
[0000][PE] mean and std.dev: (1083.38, 1172.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 519, 1370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (721.05, 590.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203390 reads in 325.843 CPU sec, 48.881 real sec
[0000] Calling mem_process_seqs.., task: 196
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524844, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 236, 732)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1924)
[0000][PE] mean and std.dev: (334.93, 296.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2520)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.99, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 331, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2524)
[0000][PE] mean and std.dev: (479.00, 331.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203290 reads in 314.563 CPU sec, 46.930 real sec
[0000] Calling mem_process_seqs.., task: 197
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525052, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 585, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3464)
[0000][PE] mean and std.dev: (883.14, 783.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4532)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.12, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 921, 1645)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4221)
[0000][PE] mean and std.dev: (1043.84, 807.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5509)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 326.391 CPU sec, 60.828 real sec
[0000] Calling mem_process_seqs.., task: 198
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1203274
	[0000][ M::kt_pipeline] read 1203274 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524725, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 262, 1086)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2960)
[0000][PE] mean and std.dev: (456.35, 534.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3897)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 214, 787)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2033)
[0000][PE] mean and std.dev: (503.56, 446.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2656)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 306.570 CPU sec, 37.964 real sec
[0000] Calling mem_process_seqs.., task: 199
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203274
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524959, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 542, 1557)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4277)
[0000][PE] mean and std.dev: (794.53, 762.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5637)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 274, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3514)
[0000][PE] mean and std.dev: (554.90, 741.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4625)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203274 reads in 318.616 CPU sec, 54.219 real sec
[0000] Calling mem_process_seqs.., task: 200
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203408
	[0000][ M::kt_pipeline] read 1203408 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524708, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 286, 473)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1151)
[0000][PE] mean and std.dev: (277.29, 250.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1490)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 441, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2775)
[0000][PE] mean and std.dev: (583.00, 431.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 308.096 CPU sec, 35.133 real sec
[0000] Calling mem_process_seqs.., task: 201
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000252, nseq: 1203426
	[0000][ M::kt_pipeline] read 1203426 sequences (180000252 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525010, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 916, 1759)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4697)
[0000][PE] mean and std.dev: (1072.20, 901.43)
[0000][PE] low and high boundaries for proper pairs: (1, 6166)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.96, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 348, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (534.86, 368.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203408 reads in 326.427 CPU sec, 53.285 real sec
[0000] Calling mem_process_seqs.., task: 202
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203272
	[0000][ M::kt_pipeline] read 1203272 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525077, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 233, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 672)
[0000][PE] mean and std.dev: (269.35, 142.17)
[0000][PE] low and high boundaries for proper pairs: (1, 838)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.90, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 429, 1355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3537)
[0000][PE] mean and std.dev: (749.87, 606.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203426 reads in 306.667 CPU sec, 36.888 real sec
[0000] Calling mem_process_seqs.., task: 203
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203324
	[0000][ M::kt_pipeline] read 1203324 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203272
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524991, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 275, 761)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1945)
[0000][PE] mean and std.dev: (424.65, 396.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 377, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (594.83, 512.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4535)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203272 reads in 313.707 CPU sec, 50.731 real sec
[0000] Calling mem_process_seqs.., task: 204
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203300
	[0000][ M::kt_pipeline] read 1203300 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524045, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (281, 659, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (758.81, 619.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4245)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.10, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 396, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1316)
[0000][PE] mean and std.dev: (356.71, 189.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203324 reads in 318.702 CPU sec, 50.458 real sec
[0000] Calling mem_process_seqs.., task: 205
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525549, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 221, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 581)
[0000][PE] mean and std.dev: (203.35, 78.90)
[0000][PE] low and high boundaries for proper pairs: (1, 720)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 855, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (799.69, 518.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203300 reads in 326.841 CPU sec, 51.119 real sec
[0000] Calling mem_process_seqs.., task: 206
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524971, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 557, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2622)
[0000][PE] mean and std.dev: (697.45, 642.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.15, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 800, 1848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4988)
[0000][PE] mean and std.dev: (877.89, 1008.57)
[0000][PE] low and high boundaries for proper pairs: (1, 6558)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 321.126 CPU sec, 50.276 real sec
[0000] Calling mem_process_seqs.., task: 207
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525250, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 293, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 630)
[0000][PE] mean and std.dev: (221.00, 95.53)
[0000][PE] low and high boundaries for proper pairs: (1, 781)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 616, 1059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2713)
[0000][PE] mean and std.dev: (671.42, 493.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 322.638 CPU sec, 45.755 real sec
[0000] Calling mem_process_seqs.., task: 208
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203484
	[0000][ M::kt_pipeline] read 1203484 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525772, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 210, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 835)
[0000][PE] mean and std.dev: (224.07, 143.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1069)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.13, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 268, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3590)
[0000][PE] mean and std.dev: (702.47, 771.72)
[0000][PE] low and high boundaries for proper pairs: (1, 4722)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 319.064 CPU sec, 56.379 real sec
[0000] Calling mem_process_seqs.., task: 209
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1203482
	[0000][ M::kt_pipeline] read 1203482 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524908, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 913, 2340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6620)
[0000][PE] mean and std.dev: (1073.87, 1229.63)
[0000][PE] low and high boundaries for proper pairs: (1, 8760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.68, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 208, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2608)
[0000][PE] mean and std.dev: (372.18, 400.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3417)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203484 reads in 317.431 CPU sec, 60.223 real sec
[0000] Calling mem_process_seqs.., task: 210
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1203514
	[0000][ M::kt_pipeline] read 1203514 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525125, 4, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 388, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (444.68, 272.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.96, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 303, 949)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2453)
[0000][PE] mean and std.dev: (528.54, 445.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203482 reads in 315.899 CPU sec, 55.259 real sec
[0000] Calling mem_process_seqs.., task: 211
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1203278
	[0000][ M::kt_pipeline] read 1203278 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525179, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 229, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 704)
[0000][PE] mean and std.dev: (220.41, 100.49)
[0000][PE] low and high boundaries for proper pairs: (1, 884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.09, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 345, 687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (384.29, 277.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203514 reads in 310.705 CPU sec, 48.001 real sec
[0000] Calling mem_process_seqs.., task: 212
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1203466
	[0000][ M::kt_pipeline] read 1203466 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203278
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524503, 5, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 222, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 946)
[0000][PE] mean and std.dev: (191.21, 80.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 409, 1423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3759)
[0000][PE] mean and std.dev: (836.64, 779.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4927)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203278 reads in 317.241 CPU sec, 58.724 real sec
[0000] Calling mem_process_seqs.., task: 213
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525171, 12, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 264, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2045)
[0000][PE] mean and std.dev: (435.11, 356.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.16)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (461, 2014, 3911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10811)
[0000][PE] mean and std.dev: (2212.83, 1972.52)
[0000][PE] low and high boundaries for proper pairs: (1, 14261)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 357, 1663)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4533)
[0000][PE] mean and std.dev: (716.31, 621.56)
[0000][PE] low and high boundaries for proper pairs: (1, 5968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203466 reads in 311.221 CPU sec, 45.081 real sec
[0000] Calling mem_process_seqs.., task: 214
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1203390
	[0000][ M::kt_pipeline] read 1203390 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524921, 1, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 189, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 444)
[0000][PE] mean and std.dev: (182.15, 82.42)
[0000][PE] low and high boundaries for proper pairs: (1, 549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 451, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2818)
[0000][PE] mean and std.dev: (505.45, 485.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 316.602 CPU sec, 52.695 real sec
[0000] Calling mem_process_seqs.., task: 215
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203458
	[0000][ M::kt_pipeline] read 1203458 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 525028, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 343, 926)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2370)
[0000][PE] mean and std.dev: (534.83, 553.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 912, 1135)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2855)
[0000][PE] mean and std.dev: (759.95, 493.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3715)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203390 reads in 319.394 CPU sec, 72.404 real sec
[0000] Calling mem_process_seqs.., task: 216
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524883, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 285, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 898)
[0000][PE] mean and std.dev: (266.46, 144.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1146)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 470, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2449)
[0000][PE] mean and std.dev: (677.36, 630.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3199)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203458 reads in 320.481 CPU sec, 53.577 real sec
[0000] Calling mem_process_seqs.., task: 217
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000055, nseq: 1203372
	[0000][ M::kt_pipeline] read 1203372 sequences (180000055 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524958, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 529, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3526)
[0000][PE] mean and std.dev: (614.80, 470.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (763, 1026, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2404)
[0000][PE] mean and std.dev: (1018.16, 564.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3276)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 316.730 CPU sec, 58.022 real sec
[0000] Calling mem_process_seqs.., task: 218
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1203372
	[0000][ M::kt_pipeline] read 1203372 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524859, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 234, 501)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1233)
[0000][PE] mean and std.dev: (244.60, 174.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.88, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 234, 502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1156)
[0000][PE] mean and std.dev: (365.13, 279.92)
[0000][PE] low and high boundaries for proper pairs: (1, 1485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203372 reads in 321.021 CPU sec, 50.659 real sec
[0000] Calling mem_process_seqs.., task: 219
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1203246
	[0000][ M::kt_pipeline] read 1203246 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203372
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 524524, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 279, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1025)
[0000][PE] mean and std.dev: (327.12, 233.80)
[0000][PE] low and high boundaries for proper pairs: (1, 1313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 291, 717)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1639)
[0000][PE] mean and std.dev: (391.92, 221.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203372 reads in 329.798 CPU sec, 58.851 real sec
[0000] Calling mem_process_seqs.., task: 220
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203322
	[0000][ M::kt_pipeline] read 1203322 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524897, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 227, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (351.75, 304.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (414, 1141, 4862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13758)
[0000][PE] mean and std.dev: (2109.46, 2313.90)
[0000][PE] low and high boundaries for proper pairs: (1, 18206)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203246 reads in 322.949 CPU sec, 49.164 real sec
[0000] Calling mem_process_seqs.., task: 221
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203380
	[0000][ M::kt_pipeline] read 1203380 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203322
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525637, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 279, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1439)
[0000][PE] mean and std.dev: (332.81, 295.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1858)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 353, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (630.65, 539.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203322 reads in 321.271 CPU sec, 58.668 real sec
[0000] Calling mem_process_seqs.., task: 222
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1203552
	[0000][ M::kt_pipeline] read 1203552 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203380
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525025, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 354, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (353.67, 211.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2501)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 274, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2320)
[0000][PE] mean and std.dev: (503.92, 404.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3013)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203380 reads in 323.534 CPU sec, 57.436 real sec
[0000] Calling mem_process_seqs.., task: 223
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203552
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524678, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 273, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4241)
[0000][PE] mean and std.dev: (854.22, 832.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 219, 413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 873)
[0000][PE] mean and std.dev: (216.09, 71.11)
[0000][PE] low and high boundaries for proper pairs: (1, 1103)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203552 reads in 319.211 CPU sec, 49.066 real sec
[0000] Calling mem_process_seqs.., task: 224
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203360
	[0000][ M::kt_pipeline] read 1203360 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525257, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 809, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4220)
[0000][PE] mean and std.dev: (930.16, 773.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5543)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 1676, 2635)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7439)
[0000][PE] mean and std.dev: (1489.88, 1480.44)
[0000][PE] low and high boundaries for proper pairs: (1, 9841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 324.274 CPU sec, 55.378 real sec
[0000] Calling mem_process_seqs.., task: 225
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1203424
	[0000][ M::kt_pipeline] read 1203424 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524359, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 311, 1854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5256)
[0000][PE] mean and std.dev: (677.28, 765.44)
[0000][PE] low and high boundaries for proper pairs: (1, 6957)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.50)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 410, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4336)
[0000][PE] mean and std.dev: (617.00, 549.85)
[0000][PE] low and high boundaries for proper pairs: (1, 5702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203360 reads in 320.562 CPU sec, 49.975 real sec
[0000] Calling mem_process_seqs.., task: 226
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203424
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524958, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 685, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (628.30, 512.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3242)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.70, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 359, 1098)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2830)
[0000][PE] mean and std.dev: (603.00, 541.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203424 reads in 319.043 CPU sec, 38.857 real sec
[0000] Calling mem_process_seqs.., task: 227
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1203320
	[0000][ M::kt_pipeline] read 1203320 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524324, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 269, 2045)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5685)
[0000][PE] mean and std.dev: (570.33, 739.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.23, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 386, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (719.91, 531.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 330.280 CPU sec, 43.212 real sec
[0000] Calling mem_process_seqs.., task: 228
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203436
	[0000][ M::kt_pipeline] read 1203436 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525104, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 255, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (329.00, 256.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2640)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.58, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 357, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3414)
[0000][PE] mean and std.dev: (767.88, 600.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203320 reads in 326.840 CPU sec, 48.643 real sec
[0000] Calling mem_process_seqs.., task: 229
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1203466
	[0000][ M::kt_pipeline] read 1203466 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525055, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 695, 1142)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3132)
[0000][PE] mean and std.dev: (602.00, 594.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4127)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 430, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (714.07, 625.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3217)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203436 reads in 323.922 CPU sec, 50.585 real sec
[0000] Calling mem_process_seqs.., task: 230
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203454
	[0000][ M::kt_pipeline] read 1203454 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525411, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 238, 322)
[0000][PE] low and high boundaries for computing mean and std.dev: (19, 524)
[0000][PE] mean and std.dev: (230.54, 79.61)
[0000][PE] low and high boundaries for proper pairs: (1, 625)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.51, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 498, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4244)
[0000][PE] mean and std.dev: (805.08, 827.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5586)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203466 reads in 317.008 CPU sec, 45.551 real sec
[0000] Calling mem_process_seqs.., task: 231
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000074, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000074 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524887, 2, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.81, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 758, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2197)
[0000][PE] mean and std.dev: (717.06, 528.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2833)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203454 reads in 324.797 CPU sec, 49.184 real sec
[0000] Calling mem_process_seqs.., task: 232
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524573, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 200, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 519)
[0000][PE] mean and std.dev: (209.35, 92.33)
[0000][PE] low and high boundaries for proper pairs: (1, 641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 274, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (518.64, 486.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3098)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 323.212 CPU sec, 43.229 real sec
[0000] Calling mem_process_seqs.., task: 233
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1203336
	[0000][ M::kt_pipeline] read 1203336 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524975, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 288, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (673.53, 796.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.44, 63.21)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (142, 576, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3670)
[0000][PE] mean and std.dev: (683.82, 541.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4846)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 323.515 CPU sec, 48.022 real sec
[0000] Calling mem_process_seqs.., task: 234
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1203588
	[0000][ M::kt_pipeline] read 1203588 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525406, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 472, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (646.06, 584.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3396)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.44, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1220, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2849)
[0000][PE] mean and std.dev: (872.58, 447.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3649)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203336 reads in 316.915 CPU sec, 43.006 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 235
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1203470
	[0000][ M::kt_pipeline] read 1203470 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203588
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524902, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 255, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2142)
[0000][PE] mean and std.dev: (364.08, 328.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.48, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (75, 1363, 5293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 15729)
[0000][PE] mean and std.dev: (2533.20, 2466.99)
[0000][PE] low and high boundaries for proper pairs: (1, 20947)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 452, 1476)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3756)
[0000][PE] mean and std.dev: (721.94, 596.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203588 reads in 326.939 CPU sec, 52.749 real sec
[0000] Calling mem_process_seqs.., task: 236
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203594
	[0000][ M::kt_pipeline] read 1203594 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524648, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 233, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2734)
[0000][PE] mean and std.dev: (563.25, 712.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.28, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 350, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (480.24, 363.68)
[0000][PE] low and high boundaries for proper pairs: (1, 3291)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203470 reads in 329.974 CPU sec, 50.972 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 237
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203452
	[0000][ M::kt_pipeline] read 1203452 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203594
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524795, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (258, 339, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (591.83, 531.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4718)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.64, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (151, 719, 1229)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (752.44, 650.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4463)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203594 reads in 327.593 CPU sec, 52.783 real sec
[0000] Calling mem_process_seqs.., task: 238
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203378
	[0000][ M::kt_pipeline] read 1203378 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203452
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525184, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (224, 462, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3182)
[0000][PE] mean and std.dev: (674.95, 653.03)
[0000][PE] low and high boundaries for proper pairs: (1, 4168)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 747, 1589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (980.18, 958.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5657)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203452 reads in 326.266 CPU sec, 60.835 real sec
[0000] Calling mem_process_seqs.., task: 239
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203282
	[0000][ M::kt_pipeline] read 1203282 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 525346, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 273, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 669)
[0000][PE] mean and std.dev: (238.48, 119.47)
[0000][PE] low and high boundaries for proper pairs: (1, 826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.28, 63.00)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 870, 2412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6680)
[0000][PE] mean and std.dev: (1474.09, 1660.78)
[0000][PE] low and high boundaries for proper pairs: (1, 8814)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203378 reads in 331.382 CPU sec, 65.428 real sec
[0000] Calling mem_process_seqs.., task: 240
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1203342
	[0000][ M::kt_pipeline] read 1203342 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524890, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 220, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 610)
[0000][PE] mean and std.dev: (205.33, 75.36)
[0000][PE] low and high boundaries for proper pairs: (1, 748)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.26, 62.97)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 309, 1056)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2696)
[0000][PE] mean and std.dev: (533.47, 493.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3516)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203282 reads in 338.566 CPU sec, 63.830 real sec
[0000] Calling mem_process_seqs.., task: 241
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000289, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000289 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524601, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 252, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1719)
[0000][PE] mean and std.dev: (291.42, 192.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2225)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.40, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203342 reads in 334.977 CPU sec, 48.928 real sec
[0000] Calling mem_process_seqs.., task: 242
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203296
	[0000][ M::kt_pipeline] read 1203296 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525480, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (251, 933, 3182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9044)
[0000][PE] mean and std.dev: (1720.75, 2060.83)
[0000][PE] low and high boundaries for proper pairs: (1, 11975)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.13, 63.00)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 213, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 918)
[0000][PE] mean and std.dev: (266.61, 208.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1180)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 333.840 CPU sec, 47.437 real sec
[0000] Calling mem_process_seqs.., task: 243
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203396
	[0000][ M::kt_pipeline] read 1203396 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524437, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 210, 660)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1656)
[0000][PE] mean and std.dev: (309.06, 241.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2154)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.47, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (509, 704, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (814.08, 464.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3757)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203296 reads in 320.197 CPU sec, 41.134 real sec
[0000] Calling mem_process_seqs.., task: 244
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525271, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 300, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 975)
[0000][PE] mean and std.dev: (369.22, 279.27)
[0000][PE] low and high boundaries for proper pairs: (1, 1486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 750, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3346)
[0000][PE] mean and std.dev: (987.33, 740.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4345)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203396 reads in 318.367 CPU sec, 50.564 real sec
[0000] Calling mem_process_seqs.., task: 245
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1203298
	[0000][ M::kt_pipeline] read 1203298 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524599, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 242, 1888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5282)
[0000][PE] mean and std.dev: (845.53, 1082.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (382, 1217, 1503)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (1135.38, 730.47)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 317.301 CPU sec, 43.167 real sec
[0000] Calling mem_process_seqs.., task: 246
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1203440
	[0000][ M::kt_pipeline] read 1203440 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203298
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524722, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 382, 1028)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2740)
[0000][PE] mean and std.dev: (634.71, 633.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 501, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1940)
[0000][PE] mean and std.dev: (469.80, 366.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2505)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203298 reads in 331.153 CPU sec, 65.447 real sec
[0000] Calling mem_process_seqs.., task: 247
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203286
	[0000][ M::kt_pipeline] read 1203286 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525077, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 545, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4714)
[0000][PE] mean and std.dev: (849.71, 694.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.55, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 917, 2623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7343)
[0000][PE] mean and std.dev: (1313.08, 1515.40)
[0000][PE] low and high boundaries for proper pairs: (1, 9703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203440 reads in 319.753 CPU sec, 34.360 real sec
[0000] Calling mem_process_seqs.., task: 248
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203502
	[0000][ M::kt_pipeline] read 1203502 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524917, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 226, 815)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2153)
[0000][PE] mean and std.dev: (427.67, 395.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.53, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 615, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2920)
[0000][PE] mean and std.dev: (688.07, 447.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203286 reads in 317.333 CPU sec, 41.497 real sec
[0000] Calling mem_process_seqs.., task: 249
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524343, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 287, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1809)
[0000][PE] mean and std.dev: (335.84, 245.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.84, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 1184, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4173)
[0000][PE] mean and std.dev: (913.65, 741.90)
[0000][PE] low and high boundaries for proper pairs: (1, 5488)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203502 reads in 323.274 CPU sec, 43.386 real sec
[0000] Calling mem_process_seqs.., task: 250
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524303, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 196, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (32, 427)
[0000][PE] mean and std.dev: (193.23, 52.58)
[0000][PE] low and high boundaries for proper pairs: (1, 506)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.72, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 261, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2304)
[0000][PE] mean and std.dev: (478.23, 400.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 328.967 CPU sec, 49.653 real sec
[0000] Calling mem_process_seqs.., task: 251
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524399, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 236, 2977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8587)
[0000][PE] mean and std.dev: (1191.27, 1264.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11392)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.59, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 298, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (430.60, 358.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2791)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 329.752 CPU sec, 54.236 real sec
[0000] Calling mem_process_seqs.., task: 252
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524919, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 992, 2037)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5819)
[0000][PE] mean and std.dev: (1034.39, 937.17)
[0000][PE] low and high boundaries for proper pairs: (1, 7710)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (293, 832, 1866)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5012)
[0000][PE] mean and std.dev: (1007.05, 845.93)
[0000][PE] low and high boundaries for proper pairs: (1, 6585)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 329.151 CPU sec, 49.247 real sec
[0000] Calling mem_process_seqs.., task: 253
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203314
	[0000][ M::kt_pipeline] read 1203314 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524701, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 253, 676)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1694)
[0000][PE] mean and std.dev: (321.80, 257.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2203)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 297, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2655)
[0000][PE] mean and std.dev: (509.21, 435.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 332.192 CPU sec, 61.650 real sec
[0000] Calling mem_process_seqs.., task: 254
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1203510
	[0000][ M::kt_pipeline] read 1203510 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525030, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 719, 2835)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8073)
[0000][PE] mean and std.dev: (1333.24, 1394.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10692)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.72, 63.13)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 655, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2518)
[0000][PE] mean and std.dev: (702.21, 530.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3271)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203314 reads in 320.077 CPU sec, 49.677 real sec
[0000] Calling mem_process_seqs.., task: 255
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524789, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 276, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (275.47, 143.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1566)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.72, 63.10)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 333, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1645)
[0000][PE] mean and std.dev: (391.37, 227.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2102)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203510 reads in 314.937 CPU sec, 38.338 real sec
[0000] Calling mem_process_seqs.., task: 256
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525048, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 592, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3015)
[0000][PE] mean and std.dev: (480.64, 392.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 1001, 2173)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6023)
[0000][PE] mean and std.dev: (1220.29, 1110.40)
[0000][PE] low and high boundaries for proper pairs: (1, 7948)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 318.650 CPU sec, 42.073 real sec
[0000] Calling mem_process_seqs.., task: 257
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524937, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 327, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3452)
[0000][PE] mean and std.dev: (617.00, 659.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4550)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.26)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 665, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2146)
[0000][PE] mean and std.dev: (603.55, 347.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2762)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 316.774 CPU sec, 45.864 real sec
[0000] Calling mem_process_seqs.., task: 258
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 523547, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 195, 366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 770)
[0000][PE] mean and std.dev: (204.64, 68.38)
[0000][PE] low and high boundaries for proper pairs: (1, 972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.97, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (357, 690, 1150)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (875.27, 665.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 352.320 CPU sec, 65.284 real sec
[0000] Calling mem_process_seqs.., task: 259
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203232
	[0000][ M::kt_pipeline] read 1203232 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524873, 6, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 695, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3721)
[0000][PE] mean and std.dev: (863.09, 744.78)
[0000][PE] low and high boundaries for proper pairs: (1, 4885)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 320.425 CPU sec, 47.765 real sec
[0000] Calling mem_process_seqs.., task: 260
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1203302
	[0000][ M::kt_pipeline] read 1203302 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525381, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (301, 395, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (614.67, 509.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 793, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2424)
[0000][PE] mean and std.dev: (629.31, 526.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3150)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203232 reads in 327.472 CPU sec, 54.166 real sec
[0000] Calling mem_process_seqs.., task: 261
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1203474
	[0000][ M::kt_pipeline] read 1203474 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524678, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 199, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 693)
[0000][PE] mean and std.dev: (189.33, 84.39)
[0000][PE] low and high boundaries for proper pairs: (1, 884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 661, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2195)
[0000][PE] mean and std.dev: (592.58, 335.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203302 reads in 326.102 CPU sec, 50.158 real sec
[0000] Calling mem_process_seqs.., task: 262
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203360
	[0000][ M::kt_pipeline] read 1203360 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524512, 0, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 297, 991)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (444.67, 402.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 301, 874)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (410.73, 298.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2869)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203474 reads in 325.545 CPU sec, 48.681 real sec
[0000] Calling mem_process_seqs.., task: 263
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524810, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 246, 532)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1196)
[0000][PE] mean and std.dev: (281.20, 148.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (148, 306, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (618.82, 662.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3588)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203360 reads in 320.968 CPU sec, 51.198 real sec
[0000] Calling mem_process_seqs.., task: 264
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000101, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000101 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524888, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 211, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3716)
[0000][PE] mean and std.dev: (600.50, 831.28)
[0000][PE] low and high boundaries for proper pairs: (1, 4899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.68, 63.00)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 271, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2290)
[0000][PE] mean and std.dev: (471.81, 440.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 331.480 CPU sec, 51.813 real sec
[0000] Calling mem_process_seqs.., task: 265
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203470
	[0000][ M::kt_pipeline] read 1203470 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525698, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 297, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4198)
[0000][PE] mean and std.dev: (734.56, 712.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.87, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 329.269 CPU sec, 47.842 real sec
[0000] Calling mem_process_seqs.., task: 266
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203470
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524688, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 299, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2397)
[0000][PE] mean and std.dev: (547.05, 518.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.16)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (135, 268, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2301)
[0000][PE] mean and std.dev: (443.76, 408.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203470 reads in 334.036 CPU sec, 49.982 real sec
[0000] Calling mem_process_seqs.., task: 267
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203336
	[0000][ M::kt_pipeline] read 1203336 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524879, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 280, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (309.13, 234.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1972)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.87, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 730, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4032)
[0000][PE] mean and std.dev: (852.18, 658.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 324.409 CPU sec, 51.193 real sec
[0000] Calling mem_process_seqs.., task: 268
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524948, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 373, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (517.50, 452.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.01, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 302, 1217)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3143)
[0000][PE] mean and std.dev: (638.54, 611.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203336 reads in 326.752 CPU sec, 45.441 real sec
[0000] Calling mem_process_seqs.., task: 269
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 524771, 4, 18)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.99, 63.01)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 623, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (598.88, 502.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 329.504 CPU sec, 54.890 real sec
[0000] Calling mem_process_seqs.., task: 270
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1203266
	[0000][ M::kt_pipeline] read 1203266 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 525190, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 241, 1090)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2864)
[0000][PE] mean and std.dev: (394.26, 379.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.16, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 302, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2665)
[0000][PE] mean and std.dev: (507.26, 487.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 320.718 CPU sec, 41.409 real sec
[0000] Calling mem_process_seqs.., task: 271
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203290
	[0000][ M::kt_pipeline] read 1203290 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525063, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 258, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 763)
[0000][PE] mean and std.dev: (231.81, 93.37)
[0000][PE] low and high boundaries for proper pairs: (1, 967)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 314, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (662.83, 679.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4038)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203266 reads in 331.870 CPU sec, 54.569 real sec
[0000] Calling mem_process_seqs.., task: 272
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1203320
	[0000][ M::kt_pipeline] read 1203320 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525252, 0, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 180, 617)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1587)
[0000][PE] mean and std.dev: (295.05, 256.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2072)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 280, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3095)
[0000][PE] mean and std.dev: (485.53, 461.40)
[0000][PE] low and high boundaries for proper pairs: (1, 4051)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203290 reads in 321.319 CPU sec, 54.240 real sec
[0000] Calling mem_process_seqs.., task: 273
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203312
	[0000][ M::kt_pipeline] read 1203312 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203320
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525108, 0, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 266, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2977)
[0000][PE] mean and std.dev: (581.86, 588.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3907)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.08, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 243, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2256)
[0000][PE] mean and std.dev: (485.26, 462.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2938)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203320 reads in 318.488 CPU sec, 50.931 real sec
[0000] Calling mem_process_seqs.., task: 274
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203214
	[0000][ M::kt_pipeline] read 1203214 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524743, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 243, 320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 626)
[0000][PE] mean and std.dev: (202.09, 57.23)
[0000][PE] low and high boundaries for proper pairs: (1, 779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.15, 63.13)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 349, 2659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7575)
[0000][PE] mean and std.dev: (1403.94, 1414.97)
[0000][PE] low and high boundaries for proper pairs: (1, 10033)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203312 reads in 312.157 CPU sec, 45.011 real sec
[0000] Calling mem_process_seqs.., task: 275
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1203496
	[0000][ M::kt_pipeline] read 1203496 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524873, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 296, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2565)
[0000][PE] mean and std.dev: (472.61, 474.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3360)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.09, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 523, 1684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4698)
[0000][PE] mean and std.dev: (1037.00, 1071.55)
[0000][PE] low and high boundaries for proper pairs: (1, 6205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203214 reads in 310.537 CPU sec, 41.565 real sec
[0000] Calling mem_process_seqs.., task: 276
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203468
	[0000][ M::kt_pipeline] read 1203468 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524503, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 384, 994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (650.50, 594.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 857, 1998)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5392)
[0000][PE] mean and std.dev: (1256.11, 1266.88)
[0000][PE] low and high boundaries for proper pairs: (1, 7089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203496 reads in 334.611 CPU sec, 56.448 real sec
[0000] Calling mem_process_seqs.., task: 277
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1203416
	[0000][ M::kt_pipeline] read 1203416 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524525, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 207, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 558)
[0000][PE] mean and std.dev: (200.85, 68.79)
[0000][PE] low and high boundaries for proper pairs: (1, 688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.94, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 314, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2234)
[0000][PE] mean and std.dev: (371.64, 240.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2891)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203468 reads in 322.567 CPU sec, 52.709 real sec
[0000] Calling mem_process_seqs.., task: 278
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203460
	[0000][ M::kt_pipeline] read 1203460 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525253, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 258, 296)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 598)
[0000][PE] mean and std.dev: (199.21, 67.24)
[0000][PE] low and high boundaries for proper pairs: (1, 749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 1017, 2927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8261)
[0000][PE] mean and std.dev: (1615.07, 1646.23)
[0000][PE] low and high boundaries for proper pairs: (1, 10928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203416 reads in 316.427 CPU sec, 48.118 real sec
[0000] Calling mem_process_seqs.., task: 279
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524639, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 211, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2048)
[0000][PE] mean and std.dev: (400.35, 427.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2683)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 595, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (775.46, 797.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203460 reads in 322.712 CPU sec, 48.062 real sec
[0000] Calling mem_process_seqs.., task: 280
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000119, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000119 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524687, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 385, 3041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8843)
[0000][PE] mean and std.dev: (1553.74, 1657.15)
[0000][PE] low and high boundaries for proper pairs: (1, 11744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.99, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 1060, 1567)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4245)
[0000][PE] mean and std.dev: (874.81, 578.64)
[0000][PE] low and high boundaries for proper pairs: (1, 5584)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 326.101 CPU sec, 58.839 real sec
[0000] Calling mem_process_seqs.., task: 281
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525104, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 318, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1303)
[0000][PE] mean and std.dev: (367.94, 239.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1662)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 647, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2608)
[0000][PE] mean and std.dev: (613.79, 411.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 320.575 CPU sec, 53.126 real sec
[0000] Calling mem_process_seqs.., task: 282
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203510
	[0000][ M::kt_pipeline] read 1203510 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525090, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 1082, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4176)
[0000][PE] mean and std.dev: (615.50, 514.43)
[0000][PE] low and high boundaries for proper pairs: (1, 5489)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 383, 927)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2277)
[0000][PE] mean and std.dev: (602.23, 451.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2952)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 323.200 CPU sec, 55.878 real sec
[0000] Calling mem_process_seqs.., task: 283
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203220
	[0000][ M::kt_pipeline] read 1203220 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203510
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525708, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (237, 414, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (626.48, 525.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.88, 63.17)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (817, 1115, 2038)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4480)
[0000][PE] mean and std.dev: (1339.71, 778.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203510 reads in 324.471 CPU sec, 48.163 real sec
[0000] Calling mem_process_seqs.., task: 284
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525606, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 905, 4071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 11827)
[0000][PE] mean and std.dev: (2343.41, 2671.95)
[0000][PE] low and high boundaries for proper pairs: (1, 15705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.93, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 934, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4006)
[0000][PE] mean and std.dev: (911.00, 608.75)
[0000][PE] low and high boundaries for proper pairs: (1, 5267)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203220 reads in 318.155 CPU sec, 43.754 real sec
[0000] Calling mem_process_seqs.., task: 285
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203364
	[0000][ M::kt_pipeline] read 1203364 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524560, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 248, 1162)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3066)
[0000][PE] mean and std.dev: (727.42, 828.38)
[0000][PE] low and high boundaries for proper pairs: (1, 4041)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 347, 744)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1884)
[0000][PE] mean and std.dev: (447.89, 414.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2454)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 316.277 CPU sec, 50.329 real sec
[0000] Calling mem_process_seqs.., task: 286
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000179, nseq: 1203338
	[0000][ M::kt_pipeline] read 1203338 sequences (180000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525465, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 259, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2108)
[0000][PE] mean and std.dev: (374.55, 293.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2758)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203364 reads in 323.585 CPU sec, 51.773 real sec
[0000] Calling mem_process_seqs.., task: 287
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524873, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 793, 1521)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4043)
[0000][PE] mean and std.dev: (836.82, 625.76)
[0000][PE] low and high boundaries for proper pairs: (1, 5304)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.21, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 783, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3025)
[0000][PE] mean and std.dev: (720.94, 543.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203338 reads in 312.569 CPU sec, 44.781 real sec
[0000] Calling mem_process_seqs.., task: 288
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000040 bp)...
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525294, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 210, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 696)
[0000][PE] mean and std.dev: (221.17, 98.34)
[0000][PE] low and high boundaries for proper pairs: (1, 876)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 296, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3047)
[0000][PE] mean and std.dev: (661.30, 627.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3992)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 324.970 CPU sec, 49.741 real sec
[0000] Calling mem_process_seqs.., task: 289
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203432
	[0000][ M::kt_pipeline] read 1203432 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524695, 2, 20)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.86, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 302, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (684.75, 632.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4063)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 317.216 CPU sec, 43.696 real sec
[0000] Calling mem_process_seqs.., task: 290
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525218, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 316, 999)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (538.09, 570.29)
[0000][PE] low and high boundaries for proper pairs: (1, 3258)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 323, 1273)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3293)
[0000][PE] mean and std.dev: (704.20, 682.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4303)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203432 reads in 325.358 CPU sec, 49.221 real sec
[0000] Calling mem_process_seqs.., task: 291
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1203382
	[0000][ M::kt_pipeline] read 1203382 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524914, 5, 11)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 313, 1010)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2540)
[0000][PE] mean and std.dev: (490.64, 392.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3305)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 315.986 CPU sec, 39.380 real sec
[0000] Calling mem_process_seqs.., task: 292
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203382
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524980, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 425, 984)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2600)
[0000][PE] mean and std.dev: (588.00, 516.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3408)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.96, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 464, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3158)
[0000][PE] mean and std.dev: (708.27, 686.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4125)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203382 reads in 319.352 CPU sec, 40.440 real sec
[0000] Calling mem_process_seqs.., task: 293
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203428
	[0000][ M::kt_pipeline] read 1203428 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524876, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 200, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1442)
[0000][PE] mean and std.dev: (361.91, 345.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 322, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2000)
[0000][PE] mean and std.dev: (460.33, 364.71)
[0000][PE] low and high boundaries for proper pairs: (1, 2608)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 321.584 CPU sec, 42.703 real sec
[0000] Calling mem_process_seqs.., task: 294
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524774, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 411, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2967)
[0000][PE] mean and std.dev: (669.92, 649.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.81, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 384, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3161)
[0000][PE] mean and std.dev: (814.33, 885.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4355)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203428 reads in 326.908 CPU sec, 53.039 real sec
[0000] Calling mem_process_seqs.., task: 295
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203628
	[0000][ M::kt_pipeline] read 1203628 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525556, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 246, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (26, 471)
[0000][PE] mean and std.dev: (228.29, 65.00)
[0000][PE] low and high boundaries for proper pairs: (1, 560)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 302, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1576)
[0000][PE] mean and std.dev: (444.00, 336.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2020)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 330.402 CPU sec, 52.137 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 296
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203474
	[0000][ M::kt_pipeline] read 1203474 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203628
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525280, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (96, 186, 488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1272)
[0000][PE] mean and std.dev: (251.35, 255.32)
[0000][PE] low and high boundaries for proper pairs: (1, 1664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 387, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2575)
[0000][PE] mean and std.dev: (618.89, 529.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3347)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203628 reads in 325.141 CPU sec, 50.784 real sec
[0000] Calling mem_process_seqs.., task: 297
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524845, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 300, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2727)
[0000][PE] mean and std.dev: (573.62, 496.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3581)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 268, 467)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 897)
[0000][PE] mean and std.dev: (320.42, 157.63)
[0000][PE] low and high boundaries for proper pairs: (1, 1112)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203474 reads in 324.756 CPU sec, 53.424 real sec
[0000] Calling mem_process_seqs.., task: 298
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524784, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 488, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3479)
[0000][PE] mean and std.dev: (744.15, 758.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4579)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1062, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4234)
[0000][PE] mean and std.dev: (1015.41, 703.49)
[0000][PE] low and high boundaries for proper pairs: (1, 5548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 319.920 CPU sec, 54.268 real sec
[0000] Calling mem_process_seqs.., task: 299
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1203168
	[0000][ M::kt_pipeline] read 1203168 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525127, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 562, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2435)
[0000][PE] mean and std.dev: (579.43, 516.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.78, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 377, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3019)
[0000][PE] mean and std.dev: (738.20, 749.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 330.811 CPU sec, 47.734 real sec
[0000] Calling mem_process_seqs.., task: 300
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1203492
	[0000][ M::kt_pipeline] read 1203492 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 514770, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 595, 1466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3964)
[0000][PE] mean and std.dev: (780.00, 636.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5213)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.31, 63.17)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 288, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2430)
[0000][PE] mean and std.dev: (498.00, 429.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3178)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203168 reads in 417.380 CPU sec, 63.082 real sec
[0000] Calling mem_process_seqs.., task: 301
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000207, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525038, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 216, 337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 655)
[0000][PE] mean and std.dev: (219.08, 62.51)
[0000][PE] low and high boundaries for proper pairs: (1, 814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 275, 572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1392)
[0000][PE] mean and std.dev: (377.89, 256.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1802)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203492 reads in 317.987 CPU sec, 51.328 real sec
[0000] Calling mem_process_seqs.., task: 302
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1203456
	[0000][ M::kt_pipeline] read 1203456 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524618, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 287, 1280)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3412)
[0000][PE] mean and std.dev: (711.08, 784.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 280, 458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (253.64, 89.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1214)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 324.330 CPU sec, 47.400 real sec
[0000] Calling mem_process_seqs.., task: 303
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203352
	[0000][ M::kt_pipeline] read 1203352 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203456
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525108, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 308, 1391)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (876.75, 1027.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.65, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 432, 3165)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8929)
[0000][PE] mean and std.dev: (1411.58, 2006.02)
[0000][PE] low and high boundaries for proper pairs: (1, 11811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203456 reads in 304.765 CPU sec, 43.719 real sec
[0000] Calling mem_process_seqs.., task: 304
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203412
	[0000][ M::kt_pipeline] read 1203412 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524916, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 487, 837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2071)
[0000][PE] mean and std.dev: (493.62, 287.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2688)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 354, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (519.04, 480.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3606)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203352 reads in 315.653 CPU sec, 55.123 real sec
[0000] Calling mem_process_seqs.., task: 305
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203508
	[0000][ M::kt_pipeline] read 1203508 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525059, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 225, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 970)
[0000][PE] mean and std.dev: (296.31, 210.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 1089, 1536)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4068)
[0000][PE] mean and std.dev: (1128.75, 964.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203412 reads in 321.659 CPU sec, 48.233 real sec
[0000] Calling mem_process_seqs.., task: 306
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203474
	[0000][ M::kt_pipeline] read 1203474 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203508
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525752, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 231, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 624)
[0000][PE] mean and std.dev: (239.71, 109.50)
[0000][PE] low and high boundaries for proper pairs: (1, 773)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.59, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 794, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2933)
[0000][PE] mean and std.dev: (815.81, 736.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3843)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203508 reads in 316.855 CPU sec, 42.562 real sec
[0000] Calling mem_process_seqs.., task: 307
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203454
	[0000][ M::kt_pipeline] read 1203454 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203474
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524950, 8, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 210, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2128)
[0000][PE] mean and std.dev: (361.83, 312.55)
[0000][PE] low and high boundaries for proper pairs: (1, 2783)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.31, 63.20)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 399, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (739.00, 545.33)
[0000][PE] low and high boundaries for proper pairs: (1, 3772)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203474 reads in 325.992 CPU sec, 62.823 real sec
[0000] Calling mem_process_seqs.., task: 308
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525230, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 267, 1235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3389)
[0000][PE] mean and std.dev: (609.65, 619.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4466)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.46, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 328, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (554.48, 491.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203454 reads in 324.562 CPU sec, 59.557 real sec
[0000] Calling mem_process_seqs.., task: 309
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000250, nseq: 1203542
	[0000][ M::kt_pipeline] read 1203542 sequences (180000250 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524860, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 320, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3486)
[0000][PE] mean and std.dev: (466.08, 477.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.63, 63.46)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 362, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4683)
[0000][PE] mean and std.dev: (781.14, 743.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6165)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 326.826 CPU sec, 51.982 real sec
[0000] Calling mem_process_seqs.., task: 310
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525533, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 376, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2244)
[0000][PE] mean and std.dev: (487.27, 358.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2936)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.61, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 253, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (392.79, 298.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203542 reads in 322.221 CPU sec, 45.744 real sec
[0000] Calling mem_process_seqs.., task: 311
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203478
	[0000][ M::kt_pipeline] read 1203478 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524888, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 372, 1077)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (589.88, 584.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (251, 900, 1975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5423)
[0000][PE] mean and std.dev: (1219.73, 1064.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7147)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 321.543 CPU sec, 52.490 real sec
[0000] Calling mem_process_seqs.., task: 312
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000117, nseq: 1203484
	[0000][ M::kt_pipeline] read 1203484 sequences (180000117 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524347, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 202, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3187)
[0000][PE] mean and std.dev: (607.88, 789.07)
[0000][PE] low and high boundaries for proper pairs: (1, 4190)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.51)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 442, 1263)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3281)
[0000][PE] mean and std.dev: (671.33, 544.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203478 reads in 314.599 CPU sec, 42.211 real sec
[0000] Calling mem_process_seqs.., task: 313
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1203434
	[0000][ M::kt_pipeline] read 1203434 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524718, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 269, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (298.67, 128.09)
[0000][PE] low and high boundaries for proper pairs: (1, 998)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 63.25)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 395, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2496)
[0000][PE] mean and std.dev: (654.56, 695.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3437)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203484 reads in 323.440 CPU sec, 50.843 real sec
[0000] Calling mem_process_seqs.., task: 314
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 525223, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 282, 634)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1636)
[0000][PE] mean and std.dev: (393.17, 345.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 469, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1111)
[0000][PE] mean and std.dev: (409.64, 256.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1438)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203434 reads in 314.431 CPU sec, 44.065 real sec
[0000] Calling mem_process_seqs.., task: 315
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524815, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 989, 1419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3929)
[0000][PE] mean and std.dev: (1101.37, 985.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5184)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.34, 63.43)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 274, 586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1372)
[0000][PE] mean and std.dev: (326.83, 237.15)
[0000][PE] low and high boundaries for proper pairs: (1, 1765)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 317.413 CPU sec, 44.371 real sec
[0000] Calling mem_process_seqs.., task: 316
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1203464
	[0000][ M::kt_pipeline] read 1203464 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524408, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 285, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3099)
[0000][PE] mean and std.dev: (579.08, 607.36)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.38, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 401, 1054)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (715.05, 683.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 323.372 CPU sec, 46.704 real sec
[0000] Calling mem_process_seqs.., task: 317
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203434
	[0000][ M::kt_pipeline] read 1203434 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525166, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 250, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (423.77, 350.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.27, 63.23)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 712, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3284)
[0000][PE] mean and std.dev: (763.75, 567.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203464 reads in 323.549 CPU sec, 52.680 real sec
[0000] Calling mem_process_seqs.., task: 318
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203434
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524728, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (148, 211, 1131)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3097)
[0000][PE] mean and std.dev: (470.00, 500.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.11, 63.24)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 429, 1068)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2714)
[0000][PE] mean and std.dev: (716.38, 653.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203434 reads in 323.968 CPU sec, 52.141 real sec
[0000] Calling mem_process_seqs.., task: 319
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525012, 6, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 316, 845)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2123)
[0000][PE] mean and std.dev: (356.07, 242.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.92, 63.09)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (133, 401, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3880)
[0000][PE] mean and std.dev: (953.00, 1155.30)
[0000][PE] low and high boundaries for proper pairs: (1, 5574)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 326.288 CPU sec, 47.071 real sec
[0000] Calling mem_process_seqs.., task: 320
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203396
	[0000][ M::kt_pipeline] read 1203396 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524557, 7, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 342, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (650.80, 767.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3719)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.07, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 447, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1734)
[0000][PE] mean and std.dev: (482.08, 264.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 325.804 CPU sec, 49.788 real sec
[0000] Calling mem_process_seqs.., task: 321
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1203370
	[0000][ M::kt_pipeline] read 1203370 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203396
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524528, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 299, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 789)
[0000][PE] mean and std.dev: (267.31, 92.31)
[0000][PE] low and high boundaries for proper pairs: (1, 981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.17, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 862, 1279)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (773.33, 675.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4513)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203396 reads in 334.778 CPU sec, 66.278 real sec
[0000] Calling mem_process_seqs.., task: 322
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203226
	[0000][ M::kt_pipeline] read 1203226 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524408, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 233, 314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 592)
[0000][PE] mean and std.dev: (202.55, 53.81)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.33, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 542, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3574)
[0000][PE] mean and std.dev: (792.68, 760.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203370 reads in 335.258 CPU sec, 56.815 real sec
[0000] Calling mem_process_seqs.., task: 323
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525610, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 209, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4070)
[0000][PE] mean and std.dev: (707.19, 800.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.35, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (312, 997, 1479)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3813)
[0000][PE] mean and std.dev: (1197.53, 975.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5100)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203226 reads in 333.504 CPU sec, 68.377 real sec
[0000] Calling mem_process_seqs.., task: 324
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525259, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 332, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3283)
[0000][PE] mean and std.dev: (602.39, 487.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.18, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 389, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1730)
[0000][PE] mean and std.dev: (440.95, 278.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 335.930 CPU sec, 60.531 real sec
[0000] Calling mem_process_seqs.., task: 325
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1203222
	[0000][ M::kt_pipeline] read 1203222 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524957, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 236, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 774)
[0000][PE] mean and std.dev: (261.22, 129.05)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.24, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 283, 592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1406)
[0000][PE] mean and std.dev: (386.56, 326.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1813)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 330.815 CPU sec, 61.160 real sec
[0000] Calling mem_process_seqs.., task: 326
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203468
	[0000][ M::kt_pipeline] read 1203468 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524581, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (115, 209, 289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 637)
[0000][PE] mean and std.dev: (181.71, 67.77)
[0000][PE] low and high boundaries for proper pairs: (1, 811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 218, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1583)
[0000][PE] mean and std.dev: (413.28, 384.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2044)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203222 reads in 323.599 CPU sec, 49.783 real sec
[0000] Calling mem_process_seqs.., task: 327
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525181, 2, 5)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 235, 1282)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (525.93, 501.45)
[0000][PE] low and high boundaries for proper pairs: (1, 4495)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.61, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203468 reads in 325.882 CPU sec, 54.993 real sec
[0000] Calling mem_process_seqs.., task: 328
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203488
	[0000][ M::kt_pipeline] read 1203488 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525125, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 183, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (228.37, 153.25)
[0000][PE] low and high boundaries for proper pairs: (1, 1018)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.63, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 815, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4272)
[0000][PE] mean and std.dev: (942.44, 839.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5628)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 320.840 CPU sec, 38.942 real sec
[0000] Calling mem_process_seqs.., task: 329
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525016, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 277, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2383)
[0000][PE] mean and std.dev: (507.39, 504.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 63.05)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 269, 2356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6592)
[0000][PE] mean and std.dev: (1380.84, 1766.62)
[0000][PE] low and high boundaries for proper pairs: (1, 8710)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203488 reads in 321.974 CPU sec, 47.438 real sec
[0000] Calling mem_process_seqs.., task: 330
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203454
	[0000][ M::kt_pipeline] read 1203454 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524427, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 545, 1335)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3689)
[0000][PE] mean and std.dev: (668.08, 599.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 414, 1329)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3495)
[0000][PE] mean and std.dev: (981.93, 1105.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 332.318 CPU sec, 52.600 real sec
[0000] Calling mem_process_seqs.., task: 331
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000233, nseq: 1203316
	[0000][ M::kt_pipeline] read 1203316 sequences (180000233 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524806, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 331, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1719)
[0000][PE] mean and std.dev: (363.62, 276.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2240)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.64, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 216, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1803)
[0000][PE] mean and std.dev: (385.91, 316.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2339)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203454 reads in 322.994 CPU sec, 50.506 real sec
[0000] Calling mem_process_seqs.., task: 332
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1203364
	[0000][ M::kt_pipeline] read 1203364 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524816, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 970, 2669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7557)
[0000][PE] mean and std.dev: (1219.45, 1124.68)
[0000][PE] low and high boundaries for proper pairs: (1, 10001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.54, 63.01)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 266, 783)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (473.53, 363.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203316 reads in 325.280 CPU sec, 51.330 real sec
[0000] Calling mem_process_seqs.., task: 333
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203442
	[0000][ M::kt_pipeline] read 1203442 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525046, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 326, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2538)
[0000][PE] mean and std.dev: (579.05, 571.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3327)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.49, 63.13)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 339, 2259)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6309)
[0000][PE] mean and std.dev: (1328.47, 1614.87)
[0000][PE] low and high boundaries for proper pairs: (1, 8334)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203364 reads in 330.859 CPU sec, 61.632 real sec
[0000] Calling mem_process_seqs.., task: 334
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203352
	[0000][ M::kt_pipeline] read 1203352 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524949, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 379, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (746.93, 728.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.60, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 242, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3324)
[0000][PE] mean and std.dev: (549.95, 522.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4360)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203442 reads in 318.450 CPU sec, 45.500 real sec
[0000] Calling mem_process_seqs.., task: 335
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203344
	[0000][ M::kt_pipeline] read 1203344 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203352
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524886, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 174, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 531)
[0000][PE] mean and std.dev: (192.62, 102.20)
[0000][PE] low and high boundaries for proper pairs: (1, 656)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 340, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3197)
[0000][PE] mean and std.dev: (573.69, 522.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203352 reads in 325.702 CPU sec, 53.120 real sec
[0000] Calling mem_process_seqs.., task: 336
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203446
	[0000][ M::kt_pipeline] read 1203446 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203344
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524248, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 515, 4205)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12161)
[0000][PE] mean and std.dev: (2084.62, 2949.94)
[0000][PE] low and high boundaries for proper pairs: (1, 16139)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.51, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203344 reads in 317.694 CPU sec, 45.230 real sec
[0000] Calling mem_process_seqs.., task: 337
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203446
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524686, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 297, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 831)
[0000][PE] mean and std.dev: (277.92, 162.42)
[0000][PE] low and high boundaries for proper pairs: (1, 1044)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.70, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 334, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3740)
[0000][PE] mean and std.dev: (794.56, 888.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203446 reads in 324.730 CPU sec, 49.103 real sec
[0000] Calling mem_process_seqs.., task: 338
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203462
	[0000][ M::kt_pipeline] read 1203462 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525283, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 595, 942)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (558.47, 524.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.84, 63.14)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 311, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2939)
[0000][PE] mean and std.dev: (675.70, 719.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 321.451 CPU sec, 54.116 real sec
[0000] Calling mem_process_seqs.., task: 339
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525141, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 325, 1474)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3956)
[0000][PE] mean and std.dev: (797.33, 794.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5197)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 335, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1774)
[0000][PE] mean and std.dev: (448.50, 342.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203462 reads in 321.102 CPU sec, 49.855 real sec
[0000] Calling mem_process_seqs.., task: 340
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524770, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 341, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (567.58, 540.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3393)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.70, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 310, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1783)
[0000][PE] mean and std.dev: (428.29, 310.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2304)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 326.705 CPU sec, 59.727 real sec
[0000] Calling mem_process_seqs.., task: 341
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203432
	[0000][ M::kt_pipeline] read 1203432 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524921, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 264, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (751.00, 750.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.89, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 333, 1074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2786)
[0000][PE] mean and std.dev: (778.50, 736.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 312.204 CPU sec, 46.573 real sec
[0000] Calling mem_process_seqs.., task: 342
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203530
	[0000][ M::kt_pipeline] read 1203530 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 524912, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 239, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2753)
[0000][PE] mean and std.dev: (647.43, 778.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 415, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2807)
[0000][PE] mean and std.dev: (625.44, 571.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203432 reads in 314.763 CPU sec, 43.948 real sec
[0000] Calling mem_process_seqs.., task: 343
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000064, nseq: 1203326
	[0000][ M::kt_pipeline] read 1203326 sequences (180000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203530
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524474, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 227, 399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 949)
[0000][PE] mean and std.dev: (268.30, 229.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 565, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3425)
[0000][PE] mean and std.dev: (684.71, 648.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4492)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203530 reads in 321.162 CPU sec, 49.588 real sec
[0000] Calling mem_process_seqs.., task: 344
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1203286
	[0000][ M::kt_pipeline] read 1203286 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203326
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524920, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 246, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (610.44, 676.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 832, 1618)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4232)
[0000][PE] mean and std.dev: (1048.47, 952.78)
[0000][PE] low and high boundaries for proper pairs: (1, 5539)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203326 reads in 320.447 CPU sec, 50.377 real sec
[0000] Calling mem_process_seqs.., task: 345
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203464
	[0000][ M::kt_pipeline] read 1203464 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525414, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 239, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 876)
[0000][PE] mean and std.dev: (308.43, 186.45)
[0000][PE] low and high boundaries for proper pairs: (1, 1109)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.68, 63.26)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 409, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2576)
[0000][PE] mean and std.dev: (688.76, 708.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3521)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203286 reads in 321.052 CPU sec, 54.683 real sec
[0000] Calling mem_process_seqs.., task: 346
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 525610, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 314, 808)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2112)
[0000][PE] mean and std.dev: (559.40, 567.54)
[0000][PE] low and high boundaries for proper pairs: (1, 2830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.61, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 500, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2293)
[0000][PE] mean and std.dev: (687.38, 643.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3261)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203464 reads in 319.474 CPU sec, 57.644 real sec
[0000] Calling mem_process_seqs.., task: 347
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525034, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 282, 807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (418.74, 387.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 347, 1621)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4381)
[0000][PE] mean and std.dev: (783.00, 723.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5761)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 328.903 CPU sec, 59.836 real sec
[0000] Calling mem_process_seqs.., task: 348
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1203342
	[0000][ M::kt_pipeline] read 1203342 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524896, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 236, 947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2503)
[0000][PE] mean and std.dev: (503.06, 558.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3281)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.65, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 417, 1168)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2972)
[0000][PE] mean and std.dev: (722.64, 652.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3874)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 312.700 CPU sec, 42.746 real sec
[0000] Calling mem_process_seqs.., task: 349
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203342
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 525203, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 235, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3300)
[0000][PE] mean and std.dev: (544.23, 591.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4353)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (342, 429, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2637)
[0000][PE] mean and std.dev: (617.67, 538.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203342 reads in 310.368 CPU sec, 43.873 real sec
[0000] Calling mem_process_seqs.., task: 350
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524943, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 249, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (435.27, 299.99)
[0000][PE] low and high boundaries for proper pairs: (1, 2394)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (210, 818, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (739.88, 602.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 325.818 CPU sec, 59.684 real sec
[0000] Calling mem_process_seqs.., task: 351
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1203364
	[0000][ M::kt_pipeline] read 1203364 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524725, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 338, 880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2246)
[0000][PE] mean and std.dev: (499.65, 476.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2929)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 489, 934)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (592.38, 386.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 319.416 CPU sec, 54.190 real sec
[0000] Calling mem_process_seqs.., task: 352
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203370
	[0000][ M::kt_pipeline] read 1203370 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524806, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 262, 1369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (477.75, 650.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4900)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 448, 983)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2579)
[0000][PE] mean and std.dev: (560.88, 548.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3377)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203364 reads in 324.985 CPU sec, 48.874 real sec
[0000] Calling mem_process_seqs.., task: 353
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1203532
	[0000][ M::kt_pipeline] read 1203532 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524854, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 200, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (168.92, 58.98)
[0000][PE] low and high boundaries for proper pairs: (1, 590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (314, 383, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2177)
[0000][PE] mean and std.dev: (590.67, 457.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203370 reads in 331.035 CPU sec, 60.276 real sec
[0000] Calling mem_process_seqs.., task: 354
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203410
	[0000][ M::kt_pipeline] read 1203410 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203532
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525837, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 226, 400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (241.08, 91.10)
[0000][PE] low and high boundaries for proper pairs: (1, 946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.11)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 341, 1249)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (735.16, 652.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4342)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203532 reads in 322.058 CPU sec, 50.862 real sec
[0000] Calling mem_process_seqs.., task: 355
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203412
	[0000][ M::kt_pipeline] read 1203412 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203410
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525193, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 197, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (41, 376)
[0000][PE] mean and std.dev: (178.38, 45.99)
[0000][PE] low and high boundaries for proper pairs: (1, 443)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.96, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 777, 1127)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2815)
[0000][PE] mean and std.dev: (706.44, 495.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203410 reads in 324.950 CPU sec, 45.846 real sec
[0000] Calling mem_process_seqs.., task: 356
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1203316
	[0000][ M::kt_pipeline] read 1203316 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524585, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 846, 945)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2377)
[0000][PE] mean and std.dev: (528.00, 343.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3093)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 314, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2438)
[0000][PE] mean and std.dev: (572.31, 531.64)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203412 reads in 322.641 CPU sec, 49.142 real sec
[0000] Calling mem_process_seqs.., task: 357
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525227, 7, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 347, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2308)
[0000][PE] mean and std.dev: (475.60, 300.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3004)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.97, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 312, 1817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4999)
[0000][PE] mean and std.dev: (743.47, 914.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203316 reads in 316.869 CPU sec, 48.221 real sec
[0000] Calling mem_process_seqs.., task: 358
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524864, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 1136, 4307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 12687)
[0000][PE] mean and std.dev: (2217.94, 2952.25)
[0000][PE] low and high boundaries for proper pairs: (1, 16877)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 492, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3307)
[0000][PE] mean and std.dev: (798.92, 790.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4298)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 310.259 CPU sec, 34.901 real sec
[0000] Calling mem_process_seqs.., task: 359
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1203494
	[0000][ M::kt_pipeline] read 1203494 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524938, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 579, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4327)
[0000][PE] mean and std.dev: (741.15, 724.40)
[0000][PE] low and high boundaries for proper pairs: (1, 5704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 385, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2291)
[0000][PE] mean and std.dev: (548.94, 374.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2968)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 328.296 CPU sec, 51.858 real sec
[0000] Calling mem_process_seqs.., task: 360
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1203346
	[0000][ M::kt_pipeline] read 1203346 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203494
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525162, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (102, 268, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2100)
[0000][PE] mean and std.dev: (374.62, 393.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.09)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 581, 876)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2176)
[0000][PE] mean and std.dev: (557.79, 348.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2826)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203494 reads in 314.576 CPU sec, 46.770 real sec
[0000] Calling mem_process_seqs.., task: 361
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203312
	[0000][ M::kt_pipeline] read 1203312 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203346
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524830, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 296, 650)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1640)
[0000][PE] mean and std.dev: (354.08, 270.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2135)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.87, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (417, 699, 1427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3447)
[0000][PE] mean and std.dev: (819.58, 456.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203346 reads in 316.541 CPU sec, 40.668 real sec
[0000] Calling mem_process_seqs.., task: 362
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524606, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 160, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1064)
[0000][PE] mean and std.dev: (210.85, 153.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1374)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 351, 1320)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3444)
[0000][PE] mean and std.dev: (689.11, 650.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4506)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203312 reads in 317.310 CPU sec, 36.472 real sec
[0000] Calling mem_process_seqs.., task: 363
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1203440
	[0000][ M::kt_pipeline] read 1203440 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525209, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 241, 796)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1998)
[0000][PE] mean and std.dev: (375.75, 288.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.26)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 908, 1402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3708)
[0000][PE] mean and std.dev: (813.44, 587.83)
[0000][PE] low and high boundaries for proper pairs: (1, 4861)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 324.335 CPU sec, 49.097 real sec
[0000] Calling mem_process_seqs.., task: 364
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524593, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 300, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2589)
[0000][PE] mean and std.dev: (499.63, 553.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.64, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 534, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2859)
[0000][PE] mean and std.dev: (677.47, 551.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3718)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203440 reads in 330.902 CPU sec, 56.990 real sec
[0000] Calling mem_process_seqs.., task: 365
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524703, 3, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (333, 655, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1833)
[0000][PE] mean and std.dev: (638.12, 448.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.15)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 359, 1128)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (594.92, 615.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3930)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 320.962 CPU sec, 54.880 real sec
[0000] Calling mem_process_seqs.., task: 366
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1203518
	[0000][ M::kt_pipeline] read 1203518 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524899, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 247, 433)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 847)
[0000][PE] mean and std.dev: (297.38, 164.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.10)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 1056, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3794)
[0000][PE] mean and std.dev: (881.15, 790.34)
[0000][PE] low and high boundaries for proper pairs: (1, 4981)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 325.446 CPU sec, 54.630 real sec
[0000] Calling mem_process_seqs.., task: 367
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1203442
	[0000][ M::kt_pipeline] read 1203442 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524726, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 195, 529)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1313)
[0000][PE] mean and std.dev: (189.23, 107.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1705)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.04, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 836, 1284)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3320)
[0000][PE] mean and std.dev: (851.21, 728.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203518 reads in 320.100 CPU sec, 43.921 real sec
[0000] Calling mem_process_seqs.., task: 368
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1203426
	[0000][ M::kt_pipeline] read 1203426 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525284, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 328, 509)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1051)
[0000][PE] mean and std.dev: (325.38, 182.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (160, 355, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (573.71, 481.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3440)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203442 reads in 313.463 CPU sec, 45.352 real sec
[0000] Calling mem_process_seqs.., task: 369
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524989, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 308, 839)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2123)
[0000][PE] mean and std.dev: (517.61, 394.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2765)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.88, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (337, 525, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (554.92, 333.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203426 reads in 330.227 CPU sec, 58.437 real sec
[0000] Calling mem_process_seqs.., task: 370
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1203400
	[0000][ M::kt_pipeline] read 1203400 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525427, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 321, 827)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2237)
[0000][PE] mean and std.dev: (407.06, 358.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2942)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.99, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 815, 1062)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (729.56, 589.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 309.752 CPU sec, 44.002 real sec
[0000] Calling mem_process_seqs.., task: 371
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203400
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525297, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 229, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (318.54, 232.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.84, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 296, 843)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2199)
[0000][PE] mean and std.dev: (476.92, 452.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203400 reads in 317.832 CPU sec, 41.204 real sec
[0000] Calling mem_process_seqs.., task: 372
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1203464
	[0000][ M::kt_pipeline] read 1203464 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525265, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 297, 633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1503)
[0000][PE] mean and std.dev: (368.85, 248.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1938)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.12)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 375, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (609.67, 437.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3957)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 312.683 CPU sec, 47.093 real sec
[0000] Calling mem_process_seqs.., task: 373
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1203442
	[0000][ M::kt_pipeline] read 1203442 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203464
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525073, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 201, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2601)
[0000][PE] mean and std.dev: (519.57, 655.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3409)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 514, 1383)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3595)
[0000][PE] mean and std.dev: (870.12, 800.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203464 reads in 319.256 CPU sec, 57.074 real sec
[0000] Calling mem_process_seqs.., task: 374
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1203480
	[0000][ M::kt_pipeline] read 1203480 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525017, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 247, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2736)
[0000][PE] mean and std.dev: (560.80, 654.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 267, 894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2204)
[0000][PE] mean and std.dev: (579.83, 583.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203442 reads in 318.441 CPU sec, 47.047 real sec
[0000] Calling mem_process_seqs.., task: 375
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1203248
	[0000][ M::kt_pipeline] read 1203248 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203480
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524934, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 214, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (566.83, 579.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.64, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (351, 803, 1812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4734)
[0000][PE] mean and std.dev: (955.28, 713.40)
[0000][PE] low and high boundaries for proper pairs: (1, 6195)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203480 reads in 321.711 CPU sec, 51.914 real sec
[0000] Calling mem_process_seqs.., task: 376
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203518
	[0000][ M::kt_pipeline] read 1203518 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525069, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 225, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 771)
[0000][PE] mean and std.dev: (234.88, 137.69)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 370, 1242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3298)
[0000][PE] mean and std.dev: (697.20, 708.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203248 reads in 322.845 CPU sec, 58.640 real sec
[0000] Calling mem_process_seqs.., task: 377
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000283, nseq: 1203390
	[0000][ M::kt_pipeline] read 1203390 sequences (180000283 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525136, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 257, 1051)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (506.15, 556.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3667)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.60, 63.21)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 645, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (658.31, 527.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3386)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203518 reads in 311.674 CPU sec, 46.820 real sec
[0000] Calling mem_process_seqs.., task: 378
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1203488
	[0000][ M::kt_pipeline] read 1203488 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524850, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 346, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (576.20, 612.23)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.47, 63.22)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (200, 266, 809)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2027)
[0000][PE] mean and std.dev: (455.00, 350.56)
[0000][PE] low and high boundaries for proper pairs: (1, 2636)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203390 reads in 313.768 CPU sec, 43.297 real sec
[0000] Calling mem_process_seqs.., task: 379
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203488
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525120, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 296, 696)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1736)
[0000][PE] mean and std.dev: (454.65, 452.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2266)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 389, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3491)
[0000][PE] mean and std.dev: (759.25, 603.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203488 reads in 315.671 CPU sec, 49.790 real sec
[0000] Calling mem_process_seqs.., task: 380
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1203500
	[0000][ M::kt_pipeline] read 1203500 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525059, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 280, 967)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2487)
[0000][PE] mean and std.dev: (485.70, 395.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3247)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 690, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3460)
[0000][PE] mean and std.dev: (935.94, 831.43)
[0000][PE] low and high boundaries for proper pairs: (1, 4517)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 326.126 CPU sec, 49.916 real sec
[0000] Calling mem_process_seqs.., task: 381
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1203392
	[0000][ M::kt_pipeline] read 1203392 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525232, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 220, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 514)
[0000][PE] mean and std.dev: (212.57, 79.52)
[0000][PE] low and high boundaries for proper pairs: (1, 620)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.43, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (381, 745, 1170)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2748)
[0000][PE] mean and std.dev: (663.58, 376.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3537)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203500 reads in 322.586 CPU sec, 48.499 real sec
[0000] Calling mem_process_seqs.., task: 382
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203426
	[0000][ M::kt_pipeline] read 1203426 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203392
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524785, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (97, 224, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (460.00, 458.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3449)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.31, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 325, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3554)
[0000][PE] mean and std.dev: (718.33, 761.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4673)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203392 reads in 323.073 CPU sec, 49.743 real sec
[0000] Calling mem_process_seqs.., task: 383
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203338
	[0000][ M::kt_pipeline] read 1203338 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524899, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 211, 581)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1433)
[0000][PE] mean and std.dev: (289.75, 288.51)
[0000][PE] low and high boundaries for proper pairs: (1, 1859)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 428, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3193)
[0000][PE] mean and std.dev: (660.57, 504.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4161)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203426 reads in 318.692 CPU sec, 51.612 real sec
[0000] Calling mem_process_seqs.., task: 384
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203338
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524708, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (272, 308, 1659)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4433)
[0000][PE] mean and std.dev: (677.71, 723.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.44, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 358, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (586.47, 638.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203338 reads in 321.459 CPU sec, 50.309 real sec
[0000] Calling mem_process_seqs.., task: 385
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1203312
	[0000][ M::kt_pipeline] read 1203312 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525153, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 337, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1732)
[0000][PE] mean and std.dev: (485.00, 367.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.56, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 307, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2062)
[0000][PE] mean and std.dev: (457.60, 374.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 319.089 CPU sec, 46.245 real sec
[0000] Calling mem_process_seqs.., task: 386
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1203418
	[0000][ M::kt_pipeline] read 1203418 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525529, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 489, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (512.80, 420.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 785, 1185)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (711.78, 618.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4026)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203312 reads in 326.776 CPU sec, 42.208 real sec
[0000] Calling mem_process_seqs.., task: 387
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1203238
	[0000][ M::kt_pipeline] read 1203238 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203418
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525317, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 248, 1222)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3248)
[0000][PE] mean and std.dev: (516.39, 500.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4261)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 63.18)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 787, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (847.71, 842.49)
[0000][PE] low and high boundaries for proper pairs: (1, 4919)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203418 reads in 311.784 CPU sec, 40.692 real sec
[0000] Calling mem_process_seqs.., task: 388
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1203498
	[0000][ M::kt_pipeline] read 1203498 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525104, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 373, 1447)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3967)
[0000][PE] mean and std.dev: (1049.17, 1142.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.34, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 341, 1160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (759.63, 826.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4064)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203238 reads in 315.473 CPU sec, 46.254 real sec
[0000] Calling mem_process_seqs.., task: 389
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000290, nseq: 1203378
	[0000][ M::kt_pipeline] read 1203378 sequences (180000290 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524733, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 604, 1238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3366)
[0000][PE] mean and std.dev: (758.64, 794.77)
[0000][PE] low and high boundaries for proper pairs: (1, 4430)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.19, 63.23)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 459, 1449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3739)
[0000][PE] mean and std.dev: (740.57, 559.08)
[0000][PE] low and high boundaries for proper pairs: (1, 4884)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203498 reads in 319.666 CPU sec, 41.685 real sec
[0000] Calling mem_process_seqs.., task: 390
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203378
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524996, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 236, 352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (230.77, 90.45)
[0000][PE] low and high boundaries for proper pairs: (1, 970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.24, 63.22)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 834, 1125)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2769)
[0000][PE] mean and std.dev: (734.06, 521.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3591)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203378 reads in 335.071 CPU sec, 56.395 real sec
[0000] Calling mem_process_seqs.., task: 391
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203414
	[0000][ M::kt_pipeline] read 1203414 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524920, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 260, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (370.10, 287.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2142)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.23, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 531, 1226)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3042)
[0000][PE] mean and std.dev: (777.56, 735.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3950)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 327.451 CPU sec, 44.900 real sec
[0000] Calling mem_process_seqs.., task: 392
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000212, nseq: 1203414
	[0000][ M::kt_pipeline] read 1203414 sequences (180000212 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524980, 8, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 212, 381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 805)
[0000][PE] mean and std.dev: (287.47, 188.94)
[0000][PE] low and high boundaries for proper pairs: (1, 1043)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.24, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203414 reads in 326.202 CPU sec, 43.319 real sec
[0000] Calling mem_process_seqs.., task: 393
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000097, nseq: 1203404
	[0000][ M::kt_pipeline] read 1203404 sequences (180000097 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203414
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525131, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 510, 2687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7633)
[0000][PE] mean and std.dev: (1240.67, 1445.55)
[0000][PE] low and high boundaries for proper pairs: (1, 10106)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 320, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2224)
[0000][PE] mean and std.dev: (627.76, 550.82)
[0000][PE] low and high boundaries for proper pairs: (1, 2877)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203414 reads in 330.769 CPU sec, 49.636 real sec
[0000] Calling mem_process_seqs.., task: 394
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000269, nseq: 1203426
	[0000][ M::kt_pipeline] read 1203426 sequences (180000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203404
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525417, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 189, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1557)
[0000][PE] mean and std.dev: (380.25, 359.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2030)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.14, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 839, 1324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (818.75, 732.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203404 reads in 336.352 CPU sec, 57.098 real sec
[0000] Calling mem_process_seqs.., task: 395
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1203432
	[0000][ M::kt_pipeline] read 1203432 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203426
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524857, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 778, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3428)
[0000][PE] mean and std.dev: (497.50, 375.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4507)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.05, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (673, 929, 2858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7228)
[0000][PE] mean and std.dev: (1801.38, 1891.01)
[0000][PE] low and high boundaries for proper pairs: (1, 9413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203426 reads in 325.561 CPU sec, 42.889 real sec
[0000] Calling mem_process_seqs.., task: 396
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000096, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000096 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203432
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524301, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 253, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (355.22, 343.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2953)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.07, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 399, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1877)
[0000][PE] mean and std.dev: (428.95, 380.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2433)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203432 reads in 338.509 CPU sec, 49.050 real sec
[0000] Calling mem_process_seqs.., task: 397
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1203370
	[0000][ M::kt_pipeline] read 1203370 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524828, 3, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (247, 1463, 1698)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4600)
[0000][PE] mean and std.dev: (1418.40, 1349.24)
[0000][PE] low and high boundaries for proper pairs: (1, 6815)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.21, 63.21)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 818, 2254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6190)
[0000][PE] mean and std.dev: (1523.50, 1887.59)
[0000][PE] low and high boundaries for proper pairs: (1, 9074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 325.938 CPU sec, 46.063 real sec
[0000] Calling mem_process_seqs.., task: 398
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000264, nseq: 1203502
	[0000][ M::kt_pipeline] read 1203502 sequences (180000264 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203370
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525325, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 182, 248)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 444)
[0000][PE] mean and std.dev: (173.93, 53.44)
[0000][PE] low and high boundaries for proper pairs: (1, 542)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.10, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 367, 1252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3218)
[0000][PE] mean and std.dev: (592.89, 510.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4201)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203370 reads in 322.005 CPU sec, 47.714 real sec
[0000] Calling mem_process_seqs.., task: 399
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203546
	[0000][ M::kt_pipeline] read 1203546 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203502
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524842, 4, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 264, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2221)
[0000][PE] mean and std.dev: (465.88, 359.16)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.71, 63.13)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 714, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (761.64, 622.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203502 reads in 325.923 CPU sec, 44.523 real sec
[0000] Calling mem_process_seqs.., task: 400
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1203518
	[0000][ M::kt_pipeline] read 1203518 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203546
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524632, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 306, 1374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3676)
[0000][PE] mean and std.dev: (792.38, 848.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4827)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 326, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 535)
[0000][PE] mean and std.dev: (328.46, 62.76)
[0000][PE] low and high boundaries for proper pairs: (37, 618)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 491, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4004)
[0000][PE] mean and std.dev: (929.00, 795.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5231)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203546 reads in 326.325 CPU sec, 52.111 real sec
[0000] Calling mem_process_seqs.., task: 401
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1203412
	[0000][ M::kt_pipeline] read 1203412 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203518
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524866, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 293, 492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1104)
[0000][PE] mean and std.dev: (294.33, 168.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 326, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 538)
[0000][PE] mean and std.dev: (328.73, 62.97)
[0000][PE] low and high boundaries for proper pairs: (34, 622)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 1090, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3411)
[0000][PE] mean and std.dev: (968.38, 871.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4456)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203518 reads in 328.212 CPU sec, 47.789 real sec
[0000] Calling mem_process_seqs.., task: 402
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203462
	[0000][ M::kt_pipeline] read 1203462 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203412
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524473, 4, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 223, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4766)
[0000][PE] mean and std.dev: (798.38, 779.99)
[0000][PE] low and high boundaries for proper pairs: (1, 6305)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.01, 62.87)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 793, 1550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4184)
[0000][PE] mean and std.dev: (981.97, 996.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203412 reads in 328.461 CPU sec, 48.858 real sec
[0000] Calling mem_process_seqs.., task: 403
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524607, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 242, 708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1742)
[0000][PE] mean and std.dev: (430.00, 434.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2259)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.15, 62.81)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 430, 1396)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3758)
[0000][PE] mean and std.dev: (747.87, 801.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4939)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203462 reads in 322.018 CPU sec, 40.344 real sec
[0000] Calling mem_process_seqs.., task: 404
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203484
	[0000][ M::kt_pipeline] read 1203484 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524662, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 210, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 793)
[0000][PE] mean and std.dev: (263.47, 150.57)
[0000][PE] low and high boundaries for proper pairs: (1, 993)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.09, 62.89)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 980, 1508)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3848)
[0000][PE] mean and std.dev: (974.47, 761.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 348.932 CPU sec, 54.737 real sec
[0000] Calling mem_process_seqs.., task: 405
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203458
	[0000][ M::kt_pipeline] read 1203458 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203484
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525202, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 275, 765)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1927)
[0000][PE] mean and std.dev: (387.88, 293.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2508)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.04, 62.84)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 890, 1462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3724)
[0000][PE] mean and std.dev: (958.13, 835.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4855)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203484 reads in 332.194 CPU sec, 45.596 real sec
[0000] Calling mem_process_seqs.., task: 406
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000049, nseq: 1203500
	[0000][ M::kt_pipeline] read 1203500 sequences (180000049 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203458
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524276, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 230, 611)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1521)
[0000][PE] mean and std.dev: (333.50, 237.61)
[0000][PE] low and high boundaries for proper pairs: (1, 1976)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.35, 63.05)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 695, 1210)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (893.53, 829.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203458 reads in 318.006 CPU sec, 42.801 real sec
[0000] Calling mem_process_seqs.., task: 407
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1203312
	[0000][ M::kt_pipeline] read 1203312 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 524773, 5, 21)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.26, 62.94)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 360, 2596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7254)
[0000][PE] mean and std.dev: (1375.43, 1732.66)
[0000][PE] low and high boundaries for proper pairs: (1, 9583)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203500 reads in 325.135 CPU sec, 52.257 real sec
[0000] Calling mem_process_seqs.., task: 408
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203312
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524919, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 373, 497)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1139)
[0000][PE] mean and std.dev: (393.92, 314.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.85, 63.16)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (310, 484, 1693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4459)
[0000][PE] mean and std.dev: (925.80, 807.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203312 reads in 322.877 CPU sec, 47.697 real sec
[0000] Calling mem_process_seqs.., task: 409
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000173, nseq: 1203416
	[0000][ M::kt_pipeline] read 1203416 sequences (180000173 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525054, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 798, 1043)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (605.11, 496.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3590)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.41, 62.98)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 294, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2398)
[0000][PE] mean and std.dev: (497.06, 431.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 317.075 CPU sec, 41.459 real sec
[0000] Calling mem_process_seqs.., task: 410
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1203468
	[0000][ M::kt_pipeline] read 1203468 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524618, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 192, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 745)
[0000][PE] mean and std.dev: (193.74, 72.78)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.67, 63.19)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (191, 332, 952)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2474)
[0000][PE] mean and std.dev: (495.83, 391.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3235)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203416 reads in 321.522 CPU sec, 40.381 real sec
[0000] Calling mem_process_seqs.., task: 411
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203468
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525084, 6, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 218, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (488.14, 545.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3169)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.78, 63.15)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 302, 977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2507)
[0000][PE] mean and std.dev: (505.83, 538.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3272)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203468 reads in 329.974 CPU sec, 54.486 real sec
[0000] Calling mem_process_seqs.., task: 412
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1203336
	[0000][ M::kt_pipeline] read 1203336 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525107, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 292, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (478.06, 433.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3776)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.65, 63.26)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 449, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (510.23, 318.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 321.955 CPU sec, 53.248 real sec
[0000] Calling mem_process_seqs.., task: 413
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1203592
	[0000][ M::kt_pipeline] read 1203592 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203336
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525193, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 269, 363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 655)
[0000][PE] mean and std.dev: (221.60, 80.30)
[0000][PE] low and high boundaries for proper pairs: (1, 801)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.47, 62.91)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 345, 800)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1820)
[0000][PE] mean and std.dev: (469.21, 311.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2330)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203336 reads in 308.500 CPU sec, 38.048 real sec
[0000] Calling mem_process_seqs.., task: 414
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1203428
	[0000][ M::kt_pipeline] read 1203428 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203592
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524770, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 756, 1749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4837)
[0000][PE] mean and std.dev: (836.06, 660.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.81, 63.04)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 265, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4247)
[0000][PE] mean and std.dev: (724.85, 676.27)
[0000][PE] low and high boundaries for proper pairs: (1, 5583)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203592 reads in 326.613 CPU sec, 51.225 real sec
[0000] Calling mem_process_seqs.., task: 415
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203440
	[0000][ M::kt_pipeline] read 1203440 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203428
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524569, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 206, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 611)
[0000][PE] mean and std.dev: (225.42, 125.07)
[0000][PE] low and high boundaries for proper pairs: (1, 762)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.75, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 332, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2853)
[0000][PE] mean and std.dev: (663.71, 604.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3732)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203428 reads in 328.956 CPU sec, 53.928 real sec
[0000] Calling mem_process_seqs.., task: 416
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000216, nseq: 1203482
	[0000][ M::kt_pipeline] read 1203482 sequences (180000216 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203440
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525116, 14, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 342, 1708)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4702)
[0000][PE] mean and std.dev: (934.39, 1049.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6199)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.87, 62.93)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (154, 895, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7063)
[0000][PE] mean and std.dev: (1312.93, 1276.55)
[0000][PE] low and high boundaries for proper pairs: (1, 9366)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 1058, 1458)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (1192.78, 1117.55)
[0000][PE] low and high boundaries for proper pairs: (1, 5663)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203440 reads in 322.342 CPU sec, 50.429 real sec
[0000] Calling mem_process_seqs.., task: 417
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1203350
	[0000][ M::kt_pipeline] read 1203350 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203482
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525057, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 240, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4207)
[0000][PE] mean and std.dev: (769.40, 805.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.83, 62.95)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 888, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2741)
[0000][PE] mean and std.dev: (857.05, 619.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203482 reads in 317.138 CPU sec, 44.862 real sec
[0000] Calling mem_process_seqs.., task: 418
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1203436
	[0000][ M::kt_pipeline] read 1203436 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203350
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524915, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 243, 523)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1229)
[0000][PE] mean and std.dev: (308.53, 279.76)
[0000][PE] low and high boundaries for proper pairs: (1, 1582)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.59, 63.18)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (152, 751, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4007)
[0000][PE] mean and std.dev: (726.31, 580.95)
[0000][PE] low and high boundaries for proper pairs: (1, 5292)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203350 reads in 318.103 CPU sec, 49.528 real sec
[0000] Calling mem_process_seqs.., task: 419
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1203394
	[0000][ M::kt_pipeline] read 1203394 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525133, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 271, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2654)
[0000][PE] mean and std.dev: (518.12, 479.25)
[0000][PE] low and high boundaries for proper pairs: (1, 3470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.83, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 704, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3552)
[0000][PE] mean and std.dev: (791.90, 517.22)
[0000][PE] low and high boundaries for proper pairs: (1, 4642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203436 reads in 319.110 CPU sec, 36.439 real sec
[0000] Calling mem_process_seqs.., task: 420
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524561, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 222, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1217)
[0000][PE] mean and std.dev: (336.08, 266.17)
[0000][PE] low and high boundaries for proper pairs: (1, 1562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.83, 62.95)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 275, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1743)
[0000][PE] mean and std.dev: (445.22, 352.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2257)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203394 reads in 329.583 CPU sec, 49.092 real sec
[0000] Calling mem_process_seqs.., task: 421
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1203542
	[0000][ M::kt_pipeline] read 1203542 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525104, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 273, 826)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2086)
[0000][PE] mean and std.dev: (355.35, 286.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.77, 63.16)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 755, 1393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3441)
[0000][PE] mean and std.dev: (984.50, 684.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 321.472 CPU sec, 49.343 real sec
[0000] Calling mem_process_seqs.., task: 422
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1203564
	[0000][ M::kt_pipeline] read 1203564 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203542
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525117, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 276, 903)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2357)
[0000][PE] mean and std.dev: (525.63, 442.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.00, 62.90)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 287, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (657.38, 606.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4273)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203542 reads in 324.408 CPU sec, 53.053 real sec
[0000] Calling mem_process_seqs.., task: 423
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203564
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524779, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 254, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (371.00, 292.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3001)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.97, 63.10)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 297, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (664.60, 636.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3211)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203564 reads in 328.614 CPU sec, 47.498 real sec
[0000] Calling mem_process_seqs.., task: 424
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203566
	[0000][ M::kt_pipeline] read 1203566 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524987, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 293, 402)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 814)
[0000][PE] mean and std.dev: (307.31, 165.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.93, 63.25)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 359, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2837)
[0000][PE] mean and std.dev: (646.42, 667.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3708)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 329.770 CPU sec, 58.124 real sec
[0000] Calling mem_process_seqs.., task: 425
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1203478
	[0000][ M::kt_pipeline] read 1203478 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203566
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524895, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 221, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (530.88, 724.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3478)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.80, 63.12)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (242, 338, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4274)
[0000][PE] mean and std.dev: (981.39, 969.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203566 reads in 326.926 CPU sec, 48.602 real sec
[0000] Calling mem_process_seqs.., task: 426
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1203362
	[0000][ M::kt_pipeline] read 1203362 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203478
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525329, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 381, 1174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3212)
[0000][PE] mean and std.dev: (661.05, 693.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4231)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.58, 63.13)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 262, 980)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2532)
[0000][PE] mean and std.dev: (490.67, 421.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3308)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203478 reads in 315.548 CPU sec, 48.892 real sec
[0000] Calling mem_process_seqs.., task: 427
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203384
	[0000][ M::kt_pipeline] read 1203384 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203362
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525067, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (284, 814, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3887)
[0000][PE] mean and std.dev: (917.69, 768.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5088)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.58, 62.95)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 664, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3275)
[0000][PE] mean and std.dev: (704.94, 471.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4287)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203362 reads in 318.986 CPU sec, 43.349 real sec
[0000] Calling mem_process_seqs.., task: 428
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1203438
	[0000][ M::kt_pipeline] read 1203438 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203384
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524642, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 364, 1380)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3774)
[0000][PE] mean and std.dev: (775.35, 697.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4971)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.80, 63.08)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 380, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2789)
[0000][PE] mean and std.dev: (613.29, 635.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203384 reads in 321.676 CPU sec, 44.680 real sec
[0000] Calling mem_process_seqs.., task: 429
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000239, nseq: 1203430
	[0000][ M::kt_pipeline] read 1203430 sequences (180000239 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525027, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 273, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2992)
[0000][PE] mean and std.dev: (697.15, 710.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.84, 63.16)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 305, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1232)
[0000][PE] mean and std.dev: (333.80, 239.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203438 reads in 321.147 CPU sec, 46.167 real sec
[0000] Calling mem_process_seqs.., task: 430
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203442
	[0000][ M::kt_pipeline] read 1203442 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203430
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525268, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 316, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4260)
[0000][PE] mean and std.dev: (776.80, 754.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5603)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.52, 63.05)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 571, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2359)
[0000][PE] mean and std.dev: (644.65, 612.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3094)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203430 reads in 326.420 CPU sec, 43.799 real sec
[0000] Calling mem_process_seqs.., task: 431
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203442
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524695, 7, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 249, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1892)
[0000][PE] mean and std.dev: (519.65, 454.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.61, 62.91)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203442 reads in 320.659 CPU sec, 45.264 real sec
[0000] Calling mem_process_seqs.., task: 432
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000155, nseq: 1203476
	[0000][ M::kt_pipeline] read 1203476 sequences (180000155 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525028, 2, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 318, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2770)
[0000][PE] mean and std.dev: (603.12, 573.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.68, 63.05)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 303, 1232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3274)
[0000][PE] mean and std.dev: (652.12, 633.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 320.448 CPU sec, 45.285 real sec
[0000] Calling mem_process_seqs.., task: 433
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203466
	[0000][ M::kt_pipeline] read 1203466 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203476
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524842, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (520, 534, 875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1585)
[0000][PE] mean and std.dev: (546.09, 224.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.06, 63.07)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 424, 914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (535.64, 436.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3152)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203476 reads in 321.913 CPU sec, 48.953 real sec
[0000] Calling mem_process_seqs.., task: 434
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1203460
	[0000][ M::kt_pipeline] read 1203460 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203466
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524674, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 246, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 820)
[0000][PE] mean and std.dev: (234.18, 76.66)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.00, 63.25)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 300, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2609)
[0000][PE] mean and std.dev: (565.26, 509.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203466 reads in 327.942 CPU sec, 46.021 real sec
[0000] Calling mem_process_seqs.., task: 435
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000040, nseq: 1203394
	[0000][ M::kt_pipeline] read 1203394 sequences (180000040 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525066, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 220, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3516)
[0000][PE] mean and std.dev: (408.70, 464.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4619)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.20, 63.02)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 300, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 578)
[0000][PE] mean and std.dev: (256.18, 53.11)
[0000][PE] low and high boundaries for proper pairs: (1, 700)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203460 reads in 324.323 CPU sec, 45.087 real sec
[0000] Calling mem_process_seqs.., task: 436
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1203394
	[0000][ M::kt_pipeline] read 1203394 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524676, 9, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (117, 156, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 873)
[0000][PE] mean and std.dev: (160.82, 95.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.46, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 307, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2644)
[0000][PE] mean and std.dev: (423.42, 418.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203394 reads in 318.532 CPU sec, 45.140 real sec
[0000] Calling mem_process_seqs.., task: 437
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000156, nseq: 1203514
	[0000][ M::kt_pipeline] read 1203514 sequences (180000156 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524957, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 198, 1362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3768)
[0000][PE] mean and std.dev: (822.86, 1127.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5332)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.37, 63.01)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 869, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3088)
[0000][PE] mean and std.dev: (796.83, 769.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4042)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203394 reads in 322.671 CPU sec, 48.958 real sec
[0000] Calling mem_process_seqs.., task: 438
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203366
	[0000][ M::kt_pipeline] read 1203366 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203514
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524926, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 290, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2964)
[0000][PE] mean and std.dev: (717.48, 770.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3894)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.04, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (449, 1003, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4907)
[0000][PE] mean and std.dev: (1075.89, 745.53)
[0000][PE] low and high boundaries for proper pairs: (1, 6393)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203514 reads in 321.181 CPU sec, 39.698 real sec
[0000] Calling mem_process_seqs.., task: 439
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000115, nseq: 1203364
	[0000][ M::kt_pipeline] read 1203364 sequences (180000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203366
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524622, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (276, 358, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2418)
[0000][PE] mean and std.dev: (710.65, 732.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3641)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.01, 63.11)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 365, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2790)
[0000][PE] mean and std.dev: (568.95, 594.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3652)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203366 reads in 316.685 CPU sec, 42.047 real sec
[0000] Calling mem_process_seqs.., task: 440
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525182, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 316, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1799)
[0000][PE] mean and std.dev: (469.36, 395.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.31, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 537, 1253)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3409)
[0000][PE] mean and std.dev: (727.33, 676.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203364 reads in 323.085 CPU sec, 49.033 real sec
[0000] Calling mem_process_seqs.., task: 441
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525062, 4, 7)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (248, 312, 1686)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4562)
[0000][PE] mean and std.dev: (1028.00, 1181.05)
[0000][PE] low and high boundaries for proper pairs: (1, 6000)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.13, 63.09)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 325.420 CPU sec, 45.468 real sec
[0000] Calling mem_process_seqs.., task: 442
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203364
	[0000][ M::kt_pipeline] read 1203364 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524835, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 285, 5550)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16260)
[0000][PE] mean and std.dev: (1923.09, 2487.59)
[0000][PE] low and high boundaries for proper pairs: (1, 21615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.93, 62.90)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 294, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2060)
[0000][PE] mean and std.dev: (533.00, 461.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2676)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 328.822 CPU sec, 46.438 real sec
[0000] Calling mem_process_seqs.., task: 443
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203498
	[0000][ M::kt_pipeline] read 1203498 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203364
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525044, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (234, 776, 1138)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (678.80, 426.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.29, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 337, 684)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1674)
[0000][PE] mean and std.dev: (398.00, 322.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203364 reads in 325.460 CPU sec, 49.380 real sec
[0000] Calling mem_process_seqs.., task: 444
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203498
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 525038, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 214, 261)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 525)
[0000][PE] mean and std.dev: (184.33, 95.09)
[0000][PE] low and high boundaries for proper pairs: (1, 657)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.33, 62.99)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 507, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3605)
[0000][PE] mean and std.dev: (834.50, 897.87)
[0000][PE] low and high boundaries for proper pairs: (1, 4746)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203498 reads in 330.108 CPU sec, 56.895 real sec
[0000] Calling mem_process_seqs.., task: 445
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203772
	[0000][ M::kt_pipeline] read 1203772 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524840, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (110, 150, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 503)
[0000][PE] mean and std.dev: (160.20, 84.83)
[0000][PE] low and high boundaries for proper pairs: (1, 634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.21, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 378, 1182)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3052)
[0000][PE] mean and std.dev: (538.50, 384.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 325.527 CPU sec, 53.681 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 446
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203772
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524000, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (137, 239, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 590)
[0000][PE] mean and std.dev: (180.50, 76.93)
[0000][PE] low and high boundaries for proper pairs: (1, 741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.28, 63.24)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 1801, 2906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8254)
[0000][PE] mean and std.dev: (1913.72, 1995.27)
[0000][PE] low and high boundaries for proper pairs: (1, 10928)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203772 reads in 328.047 CPU sec, 48.121 real sec
[0000] Calling mem_process_seqs.., task: 447
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203438
	[0000][ M::kt_pipeline] read 1203438 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524766, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (222, 769, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3309)
[0000][PE] mean and std.dev: (815.00, 674.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4338)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (327, 574, 931)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (614.06, 332.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 327.489 CPU sec, 48.447 real sec
[0000] Calling mem_process_seqs.., task: 448
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000253, nseq: 1203422
	[0000][ M::kt_pipeline] read 1203422 sequences (180000253 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 525025, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 238, 1666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4700)
[0000][PE] mean and std.dev: (648.25, 846.86)
[0000][PE] low and high boundaries for proper pairs: (1, 6217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.15, 63.05)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 703, 2132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5860)
[0000][PE] mean and std.dev: (1202.95, 1187.37)
[0000][PE] low and high boundaries for proper pairs: (1, 7724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203438 reads in 316.277 CPU sec, 38.389 real sec
[0000] Calling mem_process_seqs.., task: 449
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000058, nseq: 1203408
	[0000][ M::kt_pipeline] read 1203408 sequences (180000058 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203422
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525580, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 261, 896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2308)
[0000][PE] mean and std.dev: (474.09, 435.76)
[0000][PE] low and high boundaries for proper pairs: (1, 3014)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.47, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 823, 1319)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3663)
[0000][PE] mean and std.dev: (924.86, 807.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4835)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203422 reads in 312.681 CPU sec, 36.070 real sec
[0000] Calling mem_process_seqs.., task: 450
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000136, nseq: 1203460
	[0000][ M::kt_pipeline] read 1203460 sequences (180000136 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203408
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524982, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 177, 566)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1422)
[0000][PE] mean and std.dev: (263.63, 226.95)
[0000][PE] low and high boundaries for proper pairs: (1, 1850)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.24, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 804, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2478)
[0000][PE] mean and std.dev: (643.42, 484.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203408 reads in 321.955 CPU sec, 44.436 real sec
[0000] Calling mem_process_seqs.., task: 451
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000209, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000209 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203460
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524915, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 288, 923)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2391)
[0000][PE] mean and std.dev: (362.33, 315.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3125)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.18, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 356, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2128)
[0000][PE] mean and std.dev: (587.36, 388.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2731)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203460 reads in 317.303 CPU sec, 49.644 real sec
[0000] Calling mem_process_seqs.., task: 452
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000091, nseq: 1203406
	[0000][ M::kt_pipeline] read 1203406 sequences (180000091 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525180, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 361, 1586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4362)
[0000][PE] mean and std.dev: (877.27, 1114.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5750)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.16, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 560, 1085)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (611.95, 443.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 317.966 CPU sec, 45.555 real sec
[0000] Calling mem_process_seqs.., task: 453
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1203360
	[0000][ M::kt_pipeline] read 1203360 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203406
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525297, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 227, 1063)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2919)
[0000][PE] mean and std.dev: (441.95, 459.78)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.15, 63.34)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 380, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2458)
[0000][PE] mean and std.dev: (619.39, 497.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3203)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203406 reads in 315.099 CPU sec, 44.803 real sec
[0000] Calling mem_process_seqs.., task: 454
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203486
	[0000][ M::kt_pipeline] read 1203486 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525030, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 341, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2094)
[0000][PE] mean and std.dev: (440.33, 335.60)
[0000][PE] low and high boundaries for proper pairs: (1, 2721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.19, 63.11)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 288, 657)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1517)
[0000][PE] mean and std.dev: (335.79, 174.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203360 reads in 315.835 CPU sec, 44.943 real sec
[0000] Calling mem_process_seqs.., task: 455
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203328
	[0000][ M::kt_pipeline] read 1203328 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203486
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524927, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 219, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1235)
[0000][PE] mean and std.dev: (263.50, 189.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1596)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.21, 63.08)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 294, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2936)
[0000][PE] mean and std.dev: (691.29, 726.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203486 reads in 324.231 CPU sec, 45.973 real sec
[0000] Calling mem_process_seqs.., task: 456
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203368
	[0000][ M::kt_pipeline] read 1203368 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203328
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524730, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 202, 1842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5272)
[0000][PE] mean and std.dev: (720.00, 983.91)
[0000][PE] low and high boundaries for proper pairs: (1, 6987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.12, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 749, 1510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4112)
[0000][PE] mean and std.dev: (861.39, 686.25)
[0000][PE] low and high boundaries for proper pairs: (1, 5413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203328 reads in 312.253 CPU sec, 45.719 real sec
[0000] Calling mem_process_seqs.., task: 457
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1203444
	[0000][ M::kt_pipeline] read 1203444 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203368
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524959, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 225, 722)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1810)
[0000][PE] mean and std.dev: (364.88, 326.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.88, 63.27)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 669, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3239)
[0000][PE] mean and std.dev: (744.23, 505.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4242)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203368 reads in 325.111 CPU sec, 43.176 real sec
[0000] Calling mem_process_seqs.., task: 458
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000095, nseq: 1203454
	[0000][ M::kt_pipeline] read 1203454 sequences (180000095 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203444
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524831, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 282, 1350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3718)
[0000][PE] mean and std.dev: (754.22, 739.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.20, 63.22)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 286, 1434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (869.81, 1111.93)
[0000][PE] low and high boundaries for proper pairs: (1, 5318)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203444 reads in 327.925 CPU sec, 50.796 real sec
[0000] Calling mem_process_seqs.., task: 459
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000067, nseq: 1203386
	[0000][ M::kt_pipeline] read 1203386 sequences (180000067 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203454
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525520, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 282, 749)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1769)
[0000][PE] mean and std.dev: (352.79, 220.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.95, 63.11)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 312, 646)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (440.33, 295.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1903)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203454 reads in 316.228 CPU sec, 53.608 real sec
[0000] Calling mem_process_seqs.., task: 460
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000018, nseq: 1203492
	[0000][ M::kt_pipeline] read 1203492 sequences (180000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203386
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525124, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 257, 1705)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4777)
[0000][PE] mean and std.dev: (696.33, 750.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.94, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 238, 675)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1581)
[0000][PE] mean and std.dev: (464.62, 392.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2036)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203386 reads in 313.203 CPU sec, 50.823 real sec
[0000] Calling mem_process_seqs.., task: 461
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1203354
	[0000][ M::kt_pipeline] read 1203354 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203492
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524719, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 239, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2472)
[0000][PE] mean and std.dev: (494.57, 471.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3235)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.17, 63.15)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (395, 724, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2822)
[0000][PE] mean and std.dev: (740.47, 423.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203492 reads in 320.341 CPU sec, 53.788 real sec
[0000] Calling mem_process_seqs.., task: 462
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203536
	[0000][ M::kt_pipeline] read 1203536 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524489, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (90, 197, 271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (162.11, 97.58)
[0000][PE] low and high boundaries for proper pairs: (1, 814)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.91, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 252, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 702)
[0000][PE] mean and std.dev: (302.64, 107.09)
[0000][PE] low and high boundaries for proper pairs: (1, 856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203354 reads in 324.349 CPU sec, 57.420 real sec
[0000] Calling mem_process_seqs.., task: 463
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1203522
	[0000][ M::kt_pipeline] read 1203522 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203536
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524913, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (124, 198, 1688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (777.94, 1167.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6380)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.97, 63.23)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 279, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4001)
[0000][PE] mean and std.dev: (592.93, 689.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5270)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203536 reads in 325.611 CPU sec, 58.834 real sec
[0000] Calling mem_process_seqs.., task: 464
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203416
	[0000][ M::kt_pipeline] read 1203416 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203522
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524570, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 265, 591)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1403)
[0000][PE] mean and std.dev: (404.71, 334.64)
[0000][PE] low and high boundaries for proper pairs: (1, 1809)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.97, 63.12)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 308, 1075)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2891)
[0000][PE] mean and std.dev: (564.69, 478.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3799)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203522 reads in 315.836 CPU sec, 49.943 real sec
[0000] Calling mem_process_seqs.., task: 465
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1203374
	[0000][ M::kt_pipeline] read 1203374 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203416
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525206, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 296, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (446.41, 326.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2756)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.90, 63.26)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 357, 1245)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3393)
[0000][PE] mean and std.dev: (547.33, 476.84)
[0000][PE] low and high boundaries for proper pairs: (1, 4467)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203416 reads in 313.445 CPU sec, 39.654 real sec
[0000] Calling mem_process_seqs.., task: 466
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203376
	[0000][ M::kt_pipeline] read 1203376 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203374
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 525019, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 1080, 1994)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5564)
[0000][PE] mean and std.dev: (1082.40, 872.83)
[0000][PE] low and high boundaries for proper pairs: (1, 7349)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.00, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 859, 1614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4388)
[0000][PE] mean and std.dev: (699.09, 502.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203374 reads in 317.844 CPU sec, 47.597 real sec
[0000] Calling mem_process_seqs.., task: 467
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203420
	[0000][ M::kt_pipeline] read 1203420 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203376
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524970, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 427, 1265)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3457)
[0000][PE] mean and std.dev: (697.40, 666.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4553)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.97, 63.01)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 1041, 1669)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4481)
[0000][PE] mean and std.dev: (1261.58, 1230.01)
[0000][PE] low and high boundaries for proper pairs: (1, 6182)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203376 reads in 323.320 CPU sec, 54.724 real sec
[0000] Calling mem_process_seqs.., task: 468
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1203448
	[0000][ M::kt_pipeline] read 1203448 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203420
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525184, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 191, 477)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1159)
[0000][PE] mean and std.dev: (240.00, 189.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1500)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.90, 63.19)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (538, 1443, 1632)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3820)
[0000][PE] mean and std.dev: (1211.00, 825.95)
[0000][PE] low and high boundaries for proper pairs: (1, 4914)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203420 reads in 322.231 CPU sec, 48.543 real sec
[0000] Calling mem_process_seqs.., task: 469
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203448
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524304, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 274, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (462.08, 355.45)
[0000][PE] low and high boundaries for proper pairs: (1, 2389)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.00, 63.19)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 410, 1681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4585)
[0000][PE] mean and std.dev: (840.67, 819.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6037)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203448 reads in 326.809 CPU sec, 57.002 real sec
[0000] Calling mem_process_seqs.., task: 470
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203438
	[0000][ M::kt_pipeline] read 1203438 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524392, 1, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 212, 1199)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (554.23, 641.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4283)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (330.06, 63.23)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 365, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1458)
[0000][PE] mean and std.dev: (372.79, 264.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1881)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 319.790 CPU sec, 56.542 real sec
[0000] Calling mem_process_seqs.., task: 471
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1203340
	[0000][ M::kt_pipeline] read 1203340 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203438
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524512, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 170, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1317)
[0000][PE] mean and std.dev: (317.15, 310.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1712)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.03, 63.16)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203438 reads in 319.922 CPU sec, 50.487 real sec
[0000] Calling mem_process_seqs.., task: 472
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203390
	[0000][ M::kt_pipeline] read 1203390 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524587, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 268, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2055)
[0000][PE] mean and std.dev: (344.88, 296.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.97, 63.16)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 330, 1079)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (683.46, 728.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3599)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203340 reads in 319.663 CPU sec, 49.899 real sec
[0000] Calling mem_process_seqs.., task: 473
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203300
	[0000][ M::kt_pipeline] read 1203300 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203390
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524767, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 236, 1399)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3849)
[0000][PE] mean and std.dev: (620.68, 639.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5074)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.83, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 349, 1073)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2691)
[0000][PE] mean and std.dev: (638.56, 624.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3500)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203390 reads in 315.018 CPU sec, 49.765 real sec
[0000] Calling mem_process_seqs.., task: 474
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000103, nseq: 1203462
	[0000][ M::kt_pipeline] read 1203462 sequences (180000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203300
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 525067, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 205, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 806)
[0000][PE] mean and std.dev: (200.90, 108.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.82, 63.14)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 283, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2945)
[0000][PE] mean and std.dev: (601.47, 460.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3856)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203300 reads in 329.772 CPU sec, 55.806 real sec
[0000] Calling mem_process_seqs.., task: 475
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1203500
	[0000][ M::kt_pipeline] read 1203500 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203462
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524697, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 303, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2341)
[0000][PE] mean and std.dev: (447.00, 471.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.66, 63.22)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203462 reads in 327.880 CPU sec, 57.505 real sec
[0000] Calling mem_process_seqs.., task: 476
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203436
	[0000][ M::kt_pipeline] read 1203436 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203500
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524805, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 201, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 706)
[0000][PE] mean and std.dev: (190.75, 85.62)
[0000][PE] low and high boundaries for proper pairs: (1, 895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.76, 63.22)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 230, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 778)
[0000][PE] mean and std.dev: (274.53, 123.38)
[0000][PE] low and high boundaries for proper pairs: (1, 965)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203500 reads in 318.350 CPU sec, 46.566 real sec
[0000] Calling mem_process_seqs.., task: 477
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203360
	[0000][ M::kt_pipeline] read 1203360 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525108, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 424, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (659.91, 601.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3881)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.68, 63.19)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 405, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3385)
[0000][PE] mean and std.dev: (772.00, 669.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4426)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203436 reads in 335.675 CPU sec, 58.063 real sec
[0000] Calling mem_process_seqs.., task: 478
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203360
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525007, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 334, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3388)
[0000][PE] mean and std.dev: (772.17, 827.09)
[0000][PE] low and high boundaries for proper pairs: (1, 4447)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.79, 63.22)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 299, 1260)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (794.00, 761.68)
[0000][PE] low and high boundaries for proper pairs: (1, 4290)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203360 reads in 328.765 CPU sec, 62.055 real sec
[0000] Calling mem_process_seqs.., task: 479
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203096
	[0000][ M::kt_pipeline] read 1203096 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 523609, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 250, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 889)
[0000][PE] mean and std.dev: (286.00, 164.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1123)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.12, 62.74)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 236, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3110)
[0000][PE] mean and std.dev: (644.33, 659.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4075)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 372.918 CPU sec, 65.923 real sec
[0000] Calling mem_process_seqs.., task: 480
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1203072
	[0000][ M::kt_pipeline] read 1203072 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203096
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 523399, 0, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 256, 747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1919)
[0000][PE] mean and std.dev: (481.00, 470.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2505)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.09, 62.71)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 424, 871)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2119)
[0000][PE] mean and std.dev: (538.22, 419.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2743)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203096 reads in 361.323 CPU sec, 61.268 real sec
[0000] Calling mem_process_seqs.., task: 481
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 523477, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 240, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3232)
[0000][PE] mean and std.dev: (677.20, 660.94)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.49, 62.85)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 186, 869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2321)
[0000][PE] mean and std.dev: (396.92, 367.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3047)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203072 reads in 360.371 CPU sec, 54.761 real sec
[0000] Calling mem_process_seqs.., task: 482
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 523570, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 1041, 2604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7432)
[0000][PE] mean and std.dev: (1250.79, 1337.14)
[0000][PE] low and high boundaries for proper pairs: (1, 9846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.57, 62.85)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 695, 1500)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3946)
[0000][PE] mean and std.dev: (958.86, 817.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5169)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 358.934 CPU sec, 64.089 real sec
[0000] Calling mem_process_seqs.., task: 483
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1203010
	[0000][ M::kt_pipeline] read 1203010 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524290, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 203, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 822)
[0000][PE] mean and std.dev: (237.36, 166.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1048)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.82, 62.87)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 464, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2078)
[0000][PE] mean and std.dev: (552.32, 372.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2711)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 348.287 CPU sec, 45.612 real sec
[0000] Calling mem_process_seqs.., task: 484
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203010
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524104, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 336, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2417)
[0000][PE] mean and std.dev: (559.00, 469.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3156)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.90, 62.86)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 556, 769)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1845)
[0000][PE] mean and std.dev: (575.81, 412.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203010 reads in 341.321 CPU sec, 41.538 real sec
[0000] Calling mem_process_seqs.., task: 485
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524527, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (246, 548, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3546)
[0000][PE] mean and std.dev: (789.40, 565.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4646)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.89, 62.89)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (169, 221, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1879)
[0000][PE] mean and std.dev: (322.20, 253.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 340.630 CPU sec, 33.104 real sec
[0000] Calling mem_process_seqs.., task: 486
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000004, nseq: 1202992
	[0000][ M::kt_pipeline] read 1202992 sequences (180000004 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524617, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 214, 311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 607)
[0000][PE] mean and std.dev: (206.82, 66.77)
[0000][PE] low and high boundaries for proper pairs: (1, 755)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.04, 62.95)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 357, 741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1733)
[0000][PE] mean and std.dev: (429.88, 273.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2229)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 345.270 CPU sec, 41.796 real sec
[0000] Calling mem_process_seqs.., task: 487
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203210
	[0000][ M::kt_pipeline] read 1203210 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524364, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 217, 677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1695)
[0000][PE] mean and std.dev: (332.05, 318.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2204)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.07, 62.95)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 364, 1036)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2670)
[0000][PE] mean and std.dev: (600.00, 442.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3487)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202992 reads in 333.146 CPU sec, 42.552 real sec
[0000] Calling mem_process_seqs.., task: 488
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203148
	[0000][ M::kt_pipeline] read 1203148 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 524162, 5, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.23, 62.97)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 258, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 800)
[0000][PE] mean and std.dev: (252.71, 66.24)
[0000][PE] low and high boundaries for proper pairs: (1, 995)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203210 reads in 331.645 CPU sec, 50.772 real sec
[0000] Calling mem_process_seqs.., task: 489
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524202, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (138, 872, 1132)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3120)
[0000][PE] mean and std.dev: (748.89, 578.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.09, 62.72)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 399, 1082)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2746)
[0000][PE] mean and std.dev: (665.70, 476.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3578)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203148 reads in 347.703 CPU sec, 54.079 real sec
[0000] Calling mem_process_seqs.., task: 490
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 523439, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 285, 682)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1622)
[0000][PE] mean and std.dev: (376.75, 332.10)
[0000][PE] low and high boundaries for proper pairs: (1, 2092)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.14, 63.01)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 385, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3858)
[0000][PE] mean and std.dev: (644.12, 610.60)
[0000][PE] low and high boundaries for proper pairs: (1, 5084)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 341.874 CPU sec, 47.303 real sec
[0000] Calling mem_process_seqs.., task: 491
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1203040
	[0000][ M::kt_pipeline] read 1203040 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524230, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 348, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1962)
[0000][PE] mean and std.dev: (462.00, 356.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.00, 62.85)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 862, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4146)
[0000][PE] mean and std.dev: (968.95, 825.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5425)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 344.710 CPU sec, 45.512 real sec
[0000] Calling mem_process_seqs.., task: 492
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000267, nseq: 1203064
	[0000][ M::kt_pipeline] read 1203064 sequences (180000267 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524657, 6, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 242, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2318)
[0000][PE] mean and std.dev: (562.74, 572.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.18, 62.94)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 277, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2821)
[0000][PE] mean and std.dev: (636.36, 584.47)
[0000][PE] low and high boundaries for proper pairs: (1, 3674)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203040 reads in 339.682 CPU sec, 48.106 real sec
[0000] Calling mem_process_seqs.., task: 493
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524027, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 331, 707)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1695)
[0000][PE] mean and std.dev: (369.36, 301.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.33, 62.88)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 792, 1372)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3532)
[0000][PE] mean and std.dev: (668.00, 435.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4612)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203064 reads in 347.092 CPU sec, 44.202 real sec
[0000] Calling mem_process_seqs.., task: 494
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000251, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000251 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524138, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 249, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1018)
[0000][PE] mean and std.dev: (232.29, 116.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1307)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.34, 62.88)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 267, 801)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1985)
[0000][PE] mean and std.dev: (465.19, 421.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 337.842 CPU sec, 42.614 real sec
[0000] Calling mem_process_seqs.., task: 495
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203146
	[0000][ M::kt_pipeline] read 1203146 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524643, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 179, 1221)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3377)
[0000][PE] mean and std.dev: (530.12, 596.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.37, 62.90)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 422, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3075)
[0000][PE] mean and std.dev: (651.11, 556.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4034)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 344.284 CPU sec, 46.201 real sec
[0000] Calling mem_process_seqs.., task: 496
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524246, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 516, 1137)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3087)
[0000][PE] mean and std.dev: (593.25, 487.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4062)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.93, 62.84)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 645, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (830.39, 644.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203146 reads in 346.592 CPU sec, 45.489 real sec
[0000] Calling mem_process_seqs.., task: 497
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 523317, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 495, 1316)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3586)
[0000][PE] mean and std.dev: (742.29, 769.24)
[0000][PE] low and high boundaries for proper pairs: (1, 4721)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.96, 62.76)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 456, 1250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3280)
[0000][PE] mean and std.dev: (765.87, 628.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 348.372 CPU sec, 42.863 real sec
[0000] Calling mem_process_seqs.., task: 498
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 523150, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 224, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 515)
[0000][PE] mean and std.dev: (211.00, 69.63)
[0000][PE] low and high boundaries for proper pairs: (1, 626)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.16, 62.88)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 925, 2323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6509)
[0000][PE] mean and std.dev: (999.00, 934.53)
[0000][PE] low and high boundaries for proper pairs: (1, 8602)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 367.269 CPU sec, 46.272 real sec
[0000] Calling mem_process_seqs.., task: 499
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203120
	[0000][ M::kt_pipeline] read 1203120 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 523349, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 179, 303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 663)
[0000][PE] mean and std.dev: (181.53, 94.84)
[0000][PE] low and high boundaries for proper pairs: (1, 843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 534)
[0000][PE] mean and std.dev: (329.94, 62.55)
[0000][PE] low and high boundaries for proper pairs: (42, 616)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (248, 695, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3041)
[0000][PE] mean and std.dev: (948.71, 904.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 362.840 CPU sec, 44.260 real sec
[0000] Calling mem_process_seqs.., task: 500
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000141, nseq: 1203144
	[0000][ M::kt_pipeline] read 1203144 sequences (180000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 523138, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 262, 868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2260)
[0000][PE] mean and std.dev: (352.82, 341.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (124, 534)
[0000][PE] mean and std.dev: (329.71, 62.49)
[0000][PE] low and high boundaries for proper pairs: (42, 616)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 255, 1940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5332)
[0000][PE] mean and std.dev: (1008.53, 1098.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7028)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203120 reads in 372.529 CPU sec, 51.064 real sec
[0000] Calling mem_process_seqs.., task: 501
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1203244
	[0000][ M::kt_pipeline] read 1203244 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 522222, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 283, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2911)
[0000][PE] mean and std.dev: (622.76, 718.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3812)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.54, 62.56)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (196, 386, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1561)
[0000][PE] mean and std.dev: (451.82, 355.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203144 reads in 368.962 CPU sec, 40.982 real sec
[0000] Calling mem_process_seqs.., task: 502
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 521746, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 276, 888)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2268)
[0000][PE] mean and std.dev: (505.60, 477.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2958)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.27, 62.50)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 429, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3072)
[0000][PE] mean and std.dev: (780.82, 757.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4000)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203244 reads in 385.543 CPU sec, 46.704 real sec
[0000] Calling mem_process_seqs.., task: 503
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1203166
	[0000][ M::kt_pipeline] read 1203166 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 522292, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 228, 285)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 511)
[0000][PE] mean and std.dev: (195.69, 65.82)
[0000][PE] low and high boundaries for proper pairs: (1, 624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.18, 62.53)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 395, 1201)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3159)
[0000][PE] mean and std.dev: (789.23, 819.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4138)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 393.023 CPU sec, 51.675 real sec
[0000] Calling mem_process_seqs.., task: 504
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000260, nseq: 1203214
	[0000][ M::kt_pipeline] read 1203214 sequences (180000260 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 522360, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 217, 334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 668)
[0000][PE] mean and std.dev: (232.17, 103.30)
[0000][PE] low and high boundaries for proper pairs: (1, 835)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.73, 62.71)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 320, 1491)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4103)
[0000][PE] mean and std.dev: (580.30, 697.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5409)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203166 reads in 386.325 CPU sec, 61.281 real sec
[0000] Calling mem_process_seqs.., task: 505
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203230
	[0000][ M::kt_pipeline] read 1203230 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 521892, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (132, 186, 1463)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4125)
[0000][PE] mean and std.dev: (715.08, 888.29)
[0000][PE] low and high boundaries for proper pairs: (1, 5456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.51, 62.65)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (336, 642, 1910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5058)
[0000][PE] mean and std.dev: (1173.59, 1141.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6632)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203214 reads in 382.980 CPU sec, 45.201 real sec
[0000] Calling mem_process_seqs.., task: 506
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203194
	[0000][ M::kt_pipeline] read 1203194 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 523074, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 207, 721)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1813)
[0000][PE] mean and std.dev: (265.93, 215.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2359)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.06, 62.75)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 405, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1956)
[0000][PE] mean and std.dev: (524.00, 399.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203230 reads in 357.022 CPU sec, 50.218 real sec
[0000] Calling mem_process_seqs.., task: 507
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203248
	[0000][ M::kt_pipeline] read 1203248 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524236, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 223, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1864)
[0000][PE] mean and std.dev: (468.58, 491.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2434)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.99, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 405, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2409)
[0000][PE] mean and std.dev: (570.00, 396.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3135)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203194 reads in 334.804 CPU sec, 48.595 real sec
[0000] Calling mem_process_seqs.., task: 508
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203248
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524666, 12, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 255, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1176)
[0000][PE] mean and std.dev: (276.60, 211.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1517)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.03, 63.05)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (87, 461, 1336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3834)
[0000][PE] mean and std.dev: (556.58, 551.01)
[0000][PE] low and high boundaries for proper pairs: (1, 5083)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (266, 910, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3719)
[0000][PE] mean and std.dev: (823.46, 521.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203248 reads in 329.944 CPU sec, 48.751 real sec
[0000] Calling mem_process_seqs.., task: 509
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524338, 10, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 233, 573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1335)
[0000][PE] mean and std.dev: (368.81, 331.29)
[0000][PE] low and high boundaries for proper pairs: (1, 1716)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.13, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (187, 2930, 5758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 16900)
[0000][PE] mean and std.dev: (3069.70, 2583.73)
[0000][PE] low and high boundaries for proper pairs: (1, 22471)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 295, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2303)
[0000][PE] mean and std.dev: (518.06, 496.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2984)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 325.818 CPU sec, 46.221 real sec
[0000] Calling mem_process_seqs.., task: 510
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524842, 1, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 209, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2519)
[0000][PE] mean and std.dev: (414.10, 492.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3309)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.29, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 666, 1276)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3386)
[0000][PE] mean and std.dev: (831.00, 772.06)
[0000][PE] low and high boundaries for proper pairs: (1, 4441)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 328.324 CPU sec, 50.074 real sec
[0000] Calling mem_process_seqs.., task: 511
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524844, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 479, 831)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2061)
[0000][PE] mean and std.dev: (564.65, 449.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2676)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 538, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3365)
[0000][PE] mean and std.dev: (722.14, 593.20)
[0000][PE] low and high boundaries for proper pairs: (1, 4424)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 328.321 CPU sec, 52.478 real sec
[0000] Calling mem_process_seqs.., task: 512
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000237, nseq: 1203142
	[0000][ M::kt_pipeline] read 1203142 sequences (180000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524266, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (241, 351, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (730.71, 789.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (323, 879, 1333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (823.94, 655.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4363)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 320.151 CPU sec, 42.325 real sec
[0000] Calling mem_process_seqs.., task: 513
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000249, nseq: 1203184
	[0000][ M::kt_pipeline] read 1203184 sequences (180000249 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525480, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 426, 1395)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3685)
[0000][PE] mean and std.dev: (760.58, 623.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4830)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.33, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (171, 247, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3012)
[0000][PE] mean and std.dev: (503.26, 518.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203142 reads in 323.894 CPU sec, 52.937 real sec
[0000] Calling mem_process_seqs.., task: 514
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000088, nseq: 1203180
	[0000][ M::kt_pipeline] read 1203180 sequences (180000088 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524790, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 278, 1225)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3251)
[0000][PE] mean and std.dev: (639.88, 592.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.39, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (283, 844, 1972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5350)
[0000][PE] mean and std.dev: (1330.46, 1243.13)
[0000][PE] low and high boundaries for proper pairs: (1, 7039)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203184 reads in 312.312 CPU sec, 33.108 real sec
[0000] Calling mem_process_seqs.., task: 515
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525208, 2, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 336, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2327)
[0000][PE] mean and std.dev: (487.79, 391.61)
[0000][PE] low and high boundaries for proper pairs: (1, 3046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.72, 63.29)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 389, 781)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1667)
[0000][PE] mean and std.dev: (507.29, 310.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2110)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203180 reads in 324.192 CPU sec, 40.160 real sec
[0000] Calling mem_process_seqs.., task: 516
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524452, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 294, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3351)
[0000][PE] mean and std.dev: (788.59, 935.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.83, 63.51)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 519, 1757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4825)
[0000][PE] mean and std.dev: (780.26, 784.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6359)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 331.350 CPU sec, 41.844 real sec
[0000] Calling mem_process_seqs.., task: 517
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1203190
	[0000][ M::kt_pipeline] read 1203190 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524590, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 205, 293)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 585)
[0000][PE] mean and std.dev: (220.14, 115.57)
[0000][PE] low and high boundaries for proper pairs: (1, 731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.58, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 383, 1093)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2699)
[0000][PE] mean and std.dev: (534.25, 318.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 325.523 CPU sec, 42.740 real sec
[0000] Calling mem_process_seqs.., task: 518
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525156, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 248, 911)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2425)
[0000][PE] mean and std.dev: (444.92, 492.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3182)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.40, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 317, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (469.53, 409.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203190 reads in 328.671 CPU sec, 44.883 real sec
[0000] Calling mem_process_seqs.., task: 519
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000240, nseq: 1203290
	[0000][ M::kt_pipeline] read 1203290 sequences (180000240 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525000, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 239, 275)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 539)
[0000][PE] mean and std.dev: (210.06, 84.52)
[0000][PE] low and high boundaries for proper pairs: (1, 671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.51, 63.26)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (427, 1319, 2665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7141)
[0000][PE] mean and std.dev: (1436.19, 1072.16)
[0000][PE] low and high boundaries for proper pairs: (1, 9379)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 322.205 CPU sec, 47.467 real sec
[0000] Calling mem_process_seqs.., task: 520
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1203216
	[0000][ M::kt_pipeline] read 1203216 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524529, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (257, 350, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (640.46, 641.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3405)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (177, 325, 1308)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (749.20, 936.64)
[0000][PE] low and high boundaries for proper pairs: (1, 4701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203290 reads in 326.552 CPU sec, 50.860 real sec
[0000] Calling mem_process_seqs.., task: 521
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203244
	[0000][ M::kt_pipeline] read 1203244 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524782, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 269, 525)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (246.70, 115.71)
[0000][PE] low and high boundaries for proper pairs: (1, 1488)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.70, 63.47)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 247, 1415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3885)
[0000][PE] mean and std.dev: (753.74, 928.33)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203216 reads in 315.899 CPU sec, 34.516 real sec
[0000] Calling mem_process_seqs.., task: 522
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000073, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000073 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524587, 10, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (331, 775, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3940)
[0000][PE] mean and std.dev: (897.67, 803.61)
[0000][PE] low and high boundaries for proper pairs: (1, 5143)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.41, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (210, 1567, 2069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5787)
[0000][PE] mean and std.dev: (1743.60, 1602.01)
[0000][PE] low and high boundaries for proper pairs: (1, 8152)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 225, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 544)
[0000][PE] mean and std.dev: (232.62, 54.25)
[0000][PE] low and high boundaries for proper pairs: (1, 654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203244 reads in 319.865 CPU sec, 33.527 real sec
[0000] Calling mem_process_seqs.., task: 523
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000180, nseq: 1203256
	[0000][ M::kt_pipeline] read 1203256 sequences (180000180 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524854, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 474, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1828)
[0000][PE] mean and std.dev: (476.25, 299.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.26)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 252, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3374)
[0000][PE] mean and std.dev: (674.65, 710.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 321.011 CPU sec, 46.857 real sec
[0000] Calling mem_process_seqs.., task: 524
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1203250
	[0000][ M::kt_pipeline] read 1203250 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524657, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 225, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3065)
[0000][PE] mean and std.dev: (568.89, 528.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4025)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.40, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 349, 898)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (419.75, 289.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2890)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203256 reads in 334.409 CPU sec, 56.418 real sec
[0000] Calling mem_process_seqs.., task: 525
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203206
	[0000][ M::kt_pipeline] read 1203206 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203250
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524429, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 209, 235)
[0000][PE] low and high boundaries for computing mean and std.dev: (85, 335)
[0000][PE] mean and std.dev: (199.91, 37.23)
[0000][PE] low and high boundaries for proper pairs: (35, 385)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 333, 715)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1691)
[0000][PE] mean and std.dev: (516.00, 426.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203250 reads in 328.687 CPU sec, 54.417 real sec
[0000] Calling mem_process_seqs.., task: 526
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 525006, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 225, 955)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (416.54, 359.09)
[0000][PE] low and high boundaries for proper pairs: (1, 3262)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.10, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 789, 1286)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3436)
[0000][PE] mean and std.dev: (698.15, 510.93)
[0000][PE] low and high boundaries for proper pairs: (1, 4511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203206 reads in 331.365 CPU sec, 52.842 real sec
[0000] Calling mem_process_seqs.., task: 527
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1203240
	[0000][ M::kt_pipeline] read 1203240 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524603, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 259, 412)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 790)
[0000][PE] mean and std.dev: (236.58, 81.31)
[0000][PE] low and high boundaries for proper pairs: (1, 979)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.24, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 266, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 856)
[0000][PE] mean and std.dev: (290.06, 157.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1071)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 317.340 CPU sec, 45.477 real sec
[0000] Calling mem_process_seqs.., task: 528
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000204, nseq: 1203266
	[0000][ M::kt_pipeline] read 1203266 sequences (180000204 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524758, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 286, 1021)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2795)
[0000][PE] mean and std.dev: (564.86, 591.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3682)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.19, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 531, 1443)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3749)
[0000][PE] mean and std.dev: (869.16, 866.74)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203240 reads in 312.304 CPU sec, 47.292 real sec
[0000] Calling mem_process_seqs.., task: 529
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203070
	[0000][ M::kt_pipeline] read 1203070 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525261, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 415, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5842)
[0000][PE] mean and std.dev: (928.92, 1089.86)
[0000][PE] low and high boundaries for proper pairs: (1, 7739)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 345, 953)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2325)
[0000][PE] mean and std.dev: (555.71, 579.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203266 reads in 319.638 CPU sec, 40.447 real sec
[0000] Calling mem_process_seqs.., task: 530
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000186, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000186 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203070
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524484, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 635, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2848)
[0000][PE] mean and std.dev: (718.32, 668.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.39, 63.52)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 352, 1230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3192)
[0000][PE] mean and std.dev: (662.65, 584.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203070 reads in 326.089 CPU sec, 47.206 real sec
[0000] Calling mem_process_seqs.., task: 531
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524932, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 278, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (269.70, 118.70)
[0000][PE] low and high boundaries for proper pairs: (1, 890)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.30)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 281, 986)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2546)
[0000][PE] mean and std.dev: (534.29, 546.26)
[0000][PE] low and high boundaries for proper pairs: (1, 3326)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 314.498 CPU sec, 48.681 real sec
[0000] Calling mem_process_seqs.., task: 532
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1203228
	[0000][ M::kt_pipeline] read 1203228 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524598, 0, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 224, 315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (194.78, 71.50)
[0000][PE] low and high boundaries for proper pairs: (1, 834)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 377, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2356)
[0000][PE] mean and std.dev: (515.55, 464.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 320.017 CPU sec, 47.007 real sec
[0000] Calling mem_process_seqs.., task: 533
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524646, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 242, 614)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1560)
[0000][PE] mean and std.dev: (239.27, 151.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2033)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.20, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (383, 420, 803)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1643)
[0000][PE] mean and std.dev: (470.33, 216.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2063)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203228 reads in 313.363 CPU sec, 34.100 real sec
[0000] Calling mem_process_seqs.., task: 534
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000072, nseq: 1203122
	[0000][ M::kt_pipeline] read 1203122 sequences (180000072 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524514, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 266, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 646)
[0000][PE] mean and std.dev: (229.67, 74.40)
[0000][PE] low and high boundaries for proper pairs: (1, 799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.13, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (325, 1257, 1858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4924)
[0000][PE] mean and std.dev: (1023.00, 774.78)
[0000][PE] low and high boundaries for proper pairs: (1, 6457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 332.072 CPU sec, 44.270 real sec
[0000] Calling mem_process_seqs.., task: 535
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000280, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000280 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524244, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 241, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2697)
[0000][PE] mean and std.dev: (445.47, 416.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3538)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (812, 1270, 3031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7469)
[0000][PE] mean and std.dev: (1986.69, 2054.50)
[0000][PE] low and high boundaries for proper pairs: (1, 10205)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203122 reads in 334.070 CPU sec, 52.252 real sec
[0000] Calling mem_process_seqs.., task: 536
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1203074
	[0000][ M::kt_pipeline] read 1203074 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524912, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 229, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1625)
[0000][PE] mean and std.dev: (356.91, 290.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (118, 543)
[0000][PE] mean and std.dev: (331.37, 63.57)
[0000][PE] low and high boundaries for proper pairs: (33, 628)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 702, 1687)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4609)
[0000][PE] mean and std.dev: (989.00, 862.15)
[0000][PE] low and high boundaries for proper pairs: (1, 6070)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 310.982 CPU sec, 38.018 real sec
[0000] Calling mem_process_seqs.., task: 537
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000036, nseq: 1203196
	[0000][ M::kt_pipeline] read 1203196 sequences (180000036 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203074
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524868, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 209, 851)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2239)
[0000][PE] mean and std.dev: (378.47, 366.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 319, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3001)
[0000][PE] mean and std.dev: (714.86, 746.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203074 reads in 312.632 CPU sec, 36.295 real sec
[0000] Calling mem_process_seqs.., task: 538
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203148
	[0000][ M::kt_pipeline] read 1203148 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524985, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 353, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1841)
[0000][PE] mean and std.dev: (464.19, 409.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2383)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 376, 1737)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1035.38, 1252.80)
[0000][PE] low and high boundaries for proper pairs: (1, 6300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203196 reads in 334.972 CPU sec, 58.724 real sec
[0000] Calling mem_process_seqs.., task: 539
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524517, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 236, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 803)
[0000][PE] mean and std.dev: (206.69, 75.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1020)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.99, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (143, 227, 504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (251.38, 178.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1587)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203148 reads in 326.365 CPU sec, 43.356 real sec
[0000] Calling mem_process_seqs.., task: 540
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203206
	[0000][ M::kt_pipeline] read 1203206 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524806, 3, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 232, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2407)
[0000][PE] mean and std.dev: (464.40, 415.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3157)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 355, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (624.64, 614.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3118)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 334.386 CPU sec, 48.380 real sec
[0000] Calling mem_process_seqs.., task: 541
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1203120
	[0000][ M::kt_pipeline] read 1203120 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525147, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (269, 291, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (459.82, 369.24)
[0000][PE] low and high boundaries for proper pairs: (1, 2865)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 455, 1134)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2806)
[0000][PE] mean and std.dev: (705.50, 585.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203206 reads in 323.338 CPU sec, 37.311 real sec
[0000] Calling mem_process_seqs.., task: 542
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525042, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 310, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2143)
[0000][PE] mean and std.dev: (518.71, 402.68)
[0000][PE] low and high boundaries for proper pairs: (1, 2803)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 863, 1710)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4684)
[0000][PE] mean and std.dev: (1029.41, 984.51)
[0000][PE] low and high boundaries for proper pairs: (1, 6171)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203120 reads in 318.179 CPU sec, 38.595 real sec
[0000] Calling mem_process_seqs.., task: 543
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524294, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (149, 253, 658)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1676)
[0000][PE] mean and std.dev: (429.65, 439.14)
[0000][PE] low and high boundaries for proper pairs: (1, 2186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.35)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 316, 1089)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2843)
[0000][PE] mean and std.dev: (475.54, 439.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3720)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 327.472 CPU sec, 47.809 real sec
[0000] Calling mem_process_seqs.., task: 544
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000066, nseq: 1203166
	[0000][ M::kt_pipeline] read 1203166 sequences (180000066 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524836, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (139, 201, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (325.18, 268.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2551)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 819, 1376)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3580)
[0000][PE] mean and std.dev: (802.12, 558.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4682)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 327.802 CPU sec, 53.020 real sec
[0000] Calling mem_process_seqs.., task: 545
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000228, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524992, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 247, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3857)
[0000][PE] mean and std.dev: (698.43, 699.19)
[0000][PE] low and high boundaries for proper pairs: (1, 5085)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 500, 1084)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (604.56, 416.75)
[0000][PE] low and high boundaries for proper pairs: (1, 3451)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203166 reads in 317.526 CPU sec, 41.800 real sec
[0000] Calling mem_process_seqs.., task: 546
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203324
	[0000][ M::kt_pipeline] read 1203324 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524531, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 249, 564)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1348)
[0000][PE] mean and std.dev: (274.67, 199.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1740)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.47)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 995, 1861)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5103)
[0000][PE] mean and std.dev: (1105.11, 866.84)
[0000][PE] low and high boundaries for proper pairs: (1, 6724)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 312.681 CPU sec, 35.384 real sec
[0000] Calling mem_process_seqs.., task: 547
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524445, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 312, 683)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1723)
[0000][PE] mean and std.dev: (341.22, 258.48)
[0000][PE] low and high boundaries for proper pairs: (1, 2243)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 1029, 2101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5599)
[0000][PE] mean and std.dev: (1126.68, 838.07)
[0000][PE] low and high boundaries for proper pairs: (1, 7348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203324 reads in 329.950 CPU sec, 45.865 real sec
[0000] Calling mem_process_seqs.., task: 548
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203232
	[0000][ M::kt_pipeline] read 1203232 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524379, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 233, 519)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1215)
[0000][PE] mean and std.dev: (280.50, 178.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1563)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.95, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 968, 1606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4330)
[0000][PE] mean and std.dev: (1095.67, 1034.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 329.788 CPU sec, 45.562 real sec
[0000] Calling mem_process_seqs.., task: 549
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1203228
	[0000][ M::kt_pipeline] read 1203228 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524598, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 202, 688)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1838)
[0000][PE] mean and std.dev: (408.92, 452.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2413)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 709, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3331)
[0000][PE] mean and std.dev: (773.93, 617.02)
[0000][PE] low and high boundaries for proper pairs: (1, 4371)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203232 reads in 331.941 CPU sec, 44.082 real sec
[0000] Calling mem_process_seqs.., task: 550
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524574, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 270, 822)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2124)
[0000][PE] mean and std.dev: (478.75, 467.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2775)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.86, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 993, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3150)
[0000][PE] mean and std.dev: (778.24, 476.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203228 reads in 337.181 CPU sec, 54.319 real sec
[0000] Calling mem_process_seqs.., task: 551
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203200
	[0000][ M::kt_pipeline] read 1203200 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524380, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 291, 1032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2754)
[0000][PE] mean and std.dev: (458.89, 440.67)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.82, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 340, 1228)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3122)
[0000][PE] mean and std.dev: (678.43, 647.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4069)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 331.668 CPU sec, 41.432 real sec
[0000] Calling mem_process_seqs.., task: 552
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000077, nseq: 1203170
	[0000][ M::kt_pipeline] read 1203170 sequences (180000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524141, 1, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 294, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1227)
[0000][PE] mean and std.dev: (361.27, 260.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1572)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.14)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 578, 1330)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3328)
[0000][PE] mean and std.dev: (880.42, 815.05)
[0000][PE] low and high boundaries for proper pairs: (1, 4327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203200 reads in 335.095 CPU sec, 53.675 real sec
[0000] Calling mem_process_seqs.., task: 553
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203240
	[0000][ M::kt_pipeline] read 1203240 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524426, 6, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 225, 569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1327)
[0000][PE] mean and std.dev: (210.33, 134.46)
[0000][PE] low and high boundaries for proper pairs: (1, 1706)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 607, 1216)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3148)
[0000][PE] mean and std.dev: (730.04, 526.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203170 reads in 340.053 CPU sec, 40.384 real sec
[0000] Calling mem_process_seqs.., task: 554
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1203072
	[0000][ M::kt_pipeline] read 1203072 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524356, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 651, 1257)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3437)
[0000][PE] mean and std.dev: (809.62, 733.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.40, 62.93)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 638, 1475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4021)
[0000][PE] mean and std.dev: (831.69, 706.73)
[0000][PE] low and high boundaries for proper pairs: (1, 5294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203240 reads in 345.392 CPU sec, 58.672 real sec
[0000] Calling mem_process_seqs.., task: 555
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000146, nseq: 1203024
	[0000][ M::kt_pipeline] read 1203024 sequences (180000146 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524432, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (233, 298, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4259)
[0000][PE] mean and std.dev: (787.33, 901.17)
[0000][PE] low and high boundaries for proper pairs: (1, 5601)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.87, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 330, 1438)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3980)
[0000][PE] mean and std.dev: (688.37, 720.69)
[0000][PE] low and high boundaries for proper pairs: (1, 5251)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203072 reads in 344.546 CPU sec, 44.263 real sec
[0000] Calling mem_process_seqs.., task: 556
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203022
	[0000][ M::kt_pipeline] read 1203022 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203024
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524485, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 384, 960)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2300)
[0000][PE] mean and std.dev: (544.41, 365.89)
[0000][PE] low and high boundaries for proper pairs: (1, 2970)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.09)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (202, 257, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2587)
[0000][PE] mean and std.dev: (428.18, 433.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3382)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203024 reads in 335.957 CPU sec, 57.809 real sec
[0000] Calling mem_process_seqs.., task: 557
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000070, nseq: 1203094
	[0000][ M::kt_pipeline] read 1203094 sequences (180000070 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203022
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524390, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 241, 513)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1189)
[0000][PE] mean and std.dev: (235.62, 116.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1527)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 1293, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4136)
[0000][PE] mean and std.dev: (1223.83, 1152.11)
[0000][PE] low and high boundaries for proper pairs: (1, 5832)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203022 reads in 336.254 CPU sec, 63.384 real sec
[0000] Calling mem_process_seqs.., task: 558
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524395, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 276, 690)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (410.69, 357.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2244)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.07, 63.07)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 314, 1047)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2617)
[0000][PE] mean and std.dev: (733.63, 647.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3402)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203094 reads in 335.536 CPU sec, 42.678 real sec
[0000] Calling mem_process_seqs.., task: 559
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524492, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 224, 887)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (233.82, 214.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.01, 63.00)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 620, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4107)
[0000][PE] mean and std.dev: (993.39, 1068.50)
[0000][PE] low and high boundaries for proper pairs: (1, 5391)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 330.439 CPU sec, 45.572 real sec
[0000] Calling mem_process_seqs.., task: 560
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000225, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000225 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524337, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 255, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (425.94, 353.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3410)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.95, 63.02)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (319, 1461, 2401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6565)
[0000][PE] mean and std.dev: (1395.50, 1308.02)
[0000][PE] low and high boundaries for proper pairs: (1, 8647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 339.187 CPU sec, 57.339 real sec
[0000] Calling mem_process_seqs.., task: 561
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 523755, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (173, 268, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1349)
[0000][PE] mean and std.dev: (287.16, 167.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1741)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.07)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 373, 778)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1818)
[0000][PE] mean and std.dev: (507.70, 395.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2338)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 339.908 CPU sec, 55.098 real sec
[0000] Calling mem_process_seqs.., task: 562
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203268
	[0000][ M::kt_pipeline] read 1203268 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524065, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (249, 900, 1588)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4266)
[0000][PE] mean and std.dev: (1140.59, 1161.92)
[0000][PE] low and high boundaries for proper pairs: (1, 5788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.95, 63.08)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 950, 1577)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4131)
[0000][PE] mean and std.dev: (1030.38, 786.05)
[0000][PE] low and high boundaries for proper pairs: (1, 5408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 331.039 CPU sec, 39.960 real sec
[0000] Calling mem_process_seqs.., task: 563
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000000, nseq: 1203072
	[0000][ M::kt_pipeline] read 1203072 sequences (180000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524336, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 289, 482)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1032)
[0000][PE] mean and std.dev: (331.60, 253.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1347)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.01)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 365, 877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2281)
[0000][PE] mean and std.dev: (574.86, 454.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2983)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203268 reads in 343.800 CPU sec, 55.860 real sec
[0000] Calling mem_process_seqs.., task: 564
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524333, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 321, 742)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1894)
[0000][PE] mean and std.dev: (384.62, 313.74)
[0000][PE] low and high boundaries for proper pairs: (1, 2470)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.12, 63.10)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 667, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2054)
[0000][PE] mean and std.dev: (637.05, 433.18)
[0000][PE] low and high boundaries for proper pairs: (1, 2642)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203072 reads in 342.695 CPU sec, 51.212 real sec
[0000] Calling mem_process_seqs.., task: 565
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203244
	[0000][ M::kt_pipeline] read 1203244 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524034, 8, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 730, 1971)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5591)
[0000][PE] mean and std.dev: (1024.60, 947.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7401)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.07, 63.01)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 233, 295)
[0000][PE] low and high boundaries for computing mean and std.dev: (46, 461)
[0000][PE] mean and std.dev: (211.33, 59.44)
[0000][PE] low and high boundaries for proper pairs: (1, 544)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 339.153 CPU sec, 46.103 real sec
[0000] Calling mem_process_seqs.., task: 566
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000242, nseq: 1203256
	[0000][ M::kt_pipeline] read 1203256 sequences (180000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524822, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 319, 901)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2343)
[0000][PE] mean and std.dev: (622.57, 614.27)
[0000][PE] low and high boundaries for proper pairs: (1, 3080)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.04, 63.12)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 760, 2097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5701)
[0000][PE] mean and std.dev: (1267.11, 1251.04)
[0000][PE] low and high boundaries for proper pairs: (1, 7503)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203244 reads in 337.208 CPU sec, 45.633 real sec
[0000] Calling mem_process_seqs.., task: 567
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000200, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000200 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524216, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 326, 1437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3877)
[0000][PE] mean and std.dev: (686.04, 623.53)
[0000][PE] low and high boundaries for proper pairs: (1, 5097)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 359, 1042)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2682)
[0000][PE] mean and std.dev: (652.62, 621.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203256 reads in 334.589 CPU sec, 48.693 real sec
[0000] Calling mem_process_seqs.., task: 568
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524486, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 369, 1565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4219)
[0000][PE] mean and std.dev: (750.78, 851.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5546)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.95, 63.08)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 601, 1325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3657)
[0000][PE] mean and std.dev: (769.18, 815.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4823)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 349.368 CPU sec, 51.778 real sec
[0000] Calling mem_process_seqs.., task: 569
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000060, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000060 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524395, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 218, 357)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 737)
[0000][PE] mean and std.dev: (261.25, 169.71)
[0000][PE] low and high boundaries for proper pairs: (1, 940)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 316, 892)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2278)
[0000][PE] mean and std.dev: (479.52, 363.90)
[0000][PE] low and high boundaries for proper pairs: (1, 2971)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 338.000 CPU sec, 47.889 real sec
[0000] Calling mem_process_seqs.., task: 570
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1203302
	[0000][ M::kt_pipeline] read 1203302 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524722, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (120, 234, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 981)
[0000][PE] mean and std.dev: (250.86, 210.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1268)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.10, 63.14)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 329.461 CPU sec, 45.523 real sec
[0000] Calling mem_process_seqs.., task: 571
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524284, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (93, 203, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 864)
[0000][PE] mean and std.dev: (191.08, 103.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1121)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 263, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3134)
[0000][PE] mean and std.dev: (806.33, 918.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4478)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203302 reads in 339.530 CPU sec, 52.579 real sec
[0000] Calling mem_process_seqs.., task: 572
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203210
	[0000][ M::kt_pipeline] read 1203210 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 523542, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 225, 440)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 924)
[0000][PE] mean and std.dev: (317.87, 213.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1174)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.18)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 455, 895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2229)
[0000][PE] mean and std.dev: (592.95, 431.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 348.806 CPU sec, 55.429 real sec
[0000] Calling mem_process_seqs.., task: 573
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1203308
	[0000][ M::kt_pipeline] read 1203308 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 523663, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 259, 544)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1282)
[0000][PE] mean and std.dev: (315.95, 248.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1651)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.03)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 321, 1030)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2728)
[0000][PE] mean and std.dev: (660.14, 686.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203210 reads in 349.932 CPU sec, 48.573 real sec
[0000] Calling mem_process_seqs.., task: 574
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000229, nseq: 1203206
	[0000][ M::kt_pipeline] read 1203206 sequences (180000229 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203308
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 523896, 9, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 268, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2436)
[0000][PE] mean and std.dev: (555.15, 511.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3188)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.41, 62.79)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 825, 2048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5718)
[0000][PE] mean and std.dev: (938.44, 907.92)
[0000][PE] low and high boundaries for proper pairs: (1, 7553)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203308 reads in 366.065 CPU sec, 52.298 real sec
[0000] Calling mem_process_seqs.., task: 575
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000032, nseq: 1203264
	[0000][ M::kt_pipeline] read 1203264 sequences (180000032 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 522844, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 278, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2202)
[0000][PE] mean and std.dev: (407.28, 406.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2864)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.19, 62.92)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 450, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3085)
[0000][PE] mean and std.dev: (593.86, 540.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4043)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203206 reads in 376.758 CPU sec, 61.818 real sec
[0000] Calling mem_process_seqs.., task: 576
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000169, nseq: 1203268
	[0000][ M::kt_pipeline] read 1203268 sequences (180000169 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203264
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 523281, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (113, 269, 812)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2210)
[0000][PE] mean and std.dev: (470.64, 444.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 62.73)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203264 reads in 369.182 CPU sec, 54.011 real sec
[0000] Calling mem_process_seqs.., task: 577
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203148
	[0000][ M::kt_pipeline] read 1203148 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 523699, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 207, 488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1098)
[0000][PE] mean and std.dev: (257.53, 142.54)
[0000][PE] low and high boundaries for proper pairs: (1, 1403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.54, 62.95)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 974, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3254)
[0000][PE] mean and std.dev: (853.09, 667.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4244)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203268 reads in 358.010 CPU sec, 50.324 real sec
[0000] Calling mem_process_seqs.., task: 578
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000245, nseq: 1203268
	[0000][ M::kt_pipeline] read 1203268 sequences (180000245 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203148
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 523786, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (260, 294, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (22, 617)
[0000][PE] mean and std.dev: (262.67, 79.15)
[0000][PE] low and high boundaries for proper pairs: (1, 736)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 396, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (492.87, 316.77)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203148 reads in 359.222 CPU sec, 49.540 real sec
[0000] Calling mem_process_seqs.., task: 579
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524522, 6, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 208, 216)
[0000][PE] low and high boundaries for computing mean and std.dev: (78, 308)
[0000][PE] mean and std.dev: (192.54, 43.67)
[0000][PE] low and high boundaries for proper pairs: (18, 367)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.09)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (183, 238, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1278)
[0000][PE] mean and std.dev: (307.58, 249.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203268 reads in 343.038 CPU sec, 54.439 real sec
[0000] Calling mem_process_seqs.., task: 580
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000293, nseq: 1203282
	[0000][ M::kt_pipeline] read 1203282 sequences (180000293 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524961, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 244, 394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 780)
[0000][PE] mean and std.dev: (242.33, 101.19)
[0000][PE] low and high boundaries for proper pairs: (1, 973)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.44)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (299, 594, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2819)
[0000][PE] mean and std.dev: (705.19, 512.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3659)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 334.906 CPU sec, 56.519 real sec
[0000] Calling mem_process_seqs.., task: 581
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000094, nseq: 1203256
	[0000][ M::kt_pipeline] read 1203256 sequences (180000094 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525143, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 269, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1726)
[0000][PE] mean and std.dev: (415.83, 319.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2236)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.77, 63.32)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (379, 783, 1573)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (879.64, 536.06)
[0000][PE] low and high boundaries for proper pairs: (1, 5155)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203282 reads in 324.053 CPU sec, 46.396 real sec
[0000] Calling mem_process_seqs.., task: 582
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525116, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 259, 661)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1691)
[0000][PE] mean and std.dev: (332.20, 267.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2206)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (163, 361, 853)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2233)
[0000][PE] mean and std.dev: (463.31, 360.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2923)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203256 reads in 318.780 CPU sec, 43.284 real sec
[0000] Calling mem_process_seqs.., task: 583
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000145, nseq: 1203142
	[0000][ M::kt_pipeline] read 1203142 sequences (180000145 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525263, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 179, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 670)
[0000][PE] mean and std.dev: (189.17, 75.04)
[0000][PE] low and high boundaries for proper pairs: (1, 843)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (227, 885, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2993)
[0000][PE] mean and std.dev: (751.77, 491.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 319.780 CPU sec, 44.448 real sec
[0000] Calling mem_process_seqs.., task: 584
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000196, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000196 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525391, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 261, 956)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (555.42, 525.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.85, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 572, 1095)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2817)
[0000][PE] mean and std.dev: (610.50, 482.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203142 reads in 318.923 CPU sec, 37.663 real sec
[0000] Calling mem_process_seqs.., task: 585
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203222
	[0000][ M::kt_pipeline] read 1203222 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524679, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (107, 368, 944)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2618)
[0000][PE] mean and std.dev: (411.23, 392.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.95, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 331, 1214)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3166)
[0000][PE] mean and std.dev: (555.72, 537.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4142)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 322.281 CPU sec, 41.386 real sec
[0000] Calling mem_process_seqs.., task: 586
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1203240
	[0000][ M::kt_pipeline] read 1203240 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525310, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 387, 1112)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2858)
[0000][PE] mean and std.dev: (687.04, 585.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.76, 63.30)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 387, 1464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3918)
[0000][PE] mean and std.dev: (761.17, 775.42)
[0000][PE] low and high boundaries for proper pairs: (1, 5145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203222 reads in 315.561 CPU sec, 49.539 real sec
[0000] Calling mem_process_seqs.., task: 587
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525008, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 267, 932)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2402)
[0000][PE] mean and std.dev: (463.38, 439.85)
[0000][PE] low and high boundaries for proper pairs: (1, 3137)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 686, 1181)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3157)
[0000][PE] mean and std.dev: (792.06, 768.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4145)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203240 reads in 324.078 CPU sec, 50.635 real sec
[0000] Calling mem_process_seqs.., task: 588
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525190, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 223, 958)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2486)
[0000][PE] mean and std.dev: (494.36, 498.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.67, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 912, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3379)
[0000][PE] mean and std.dev: (882.00, 749.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4427)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 311.554 CPU sec, 43.845 real sec
[0000] Calling mem_process_seqs.., task: 589
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524821, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 240, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2813)
[0000][PE] mean and std.dev: (431.75, 407.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.88, 63.33)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 909, 1215)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3035)
[0000][PE] mean and std.dev: (728.89, 470.28)
[0000][PE] low and high boundaries for proper pairs: (1, 3945)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 317.696 CPU sec, 35.541 real sec
[0000] Calling mem_process_seqs.., task: 590
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524769, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 289, 1155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (509.08, 459.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3996)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.83, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (132, 334, 389)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 903)
[0000][PE] mean and std.dev: (238.25, 103.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1160)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 321.993 CPU sec, 36.667 real sec
[0000] Calling mem_process_seqs.., task: 591
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000013, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000013 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524270, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 272, 1204)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3194)
[0000][PE] mean and std.dev: (449.39, 467.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4189)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.32)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 327, 882)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2248)
[0000][PE] mean and std.dev: (519.65, 404.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2931)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 329.448 CPU sec, 47.649 real sec
[0000] Calling mem_process_seqs.., task: 592
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000238, nseq: 1203246
	[0000][ M::kt_pipeline] read 1203246 sequences (180000238 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524581, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 261, 936)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (646.16, 561.13)
[0000][PE] low and high boundaries for proper pairs: (1, 3165)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.80, 63.46)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (226, 267, 324)
[0000][PE] low and high boundaries for computing mean and std.dev: (30, 520)
[0000][PE] mean and std.dev: (244.47, 73.18)
[0000][PE] low and high boundaries for proper pairs: (1, 618)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 332.023 CPU sec, 45.903 real sec
[0000] Calling mem_process_seqs.., task: 593
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1203166
	[0000][ M::kt_pipeline] read 1203166 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525310, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 414, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3011)
[0000][PE] mean and std.dev: (673.64, 632.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3959)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.61, 63.31)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (144, 447, 666)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1710)
[0000][PE] mean and std.dev: (482.53, 428.07)
[0000][PE] low and high boundaries for proper pairs: (1, 2232)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203246 reads in 326.230 CPU sec, 38.163 real sec
[0000] Calling mem_process_seqs.., task: 594
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000276, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000276 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524657, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 265, 1123)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3037)
[0000][PE] mean and std.dev: (590.32, 645.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3994)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.84, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 841, 1020)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2556)
[0000][PE] mean and std.dev: (738.47, 550.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203166 reads in 311.979 CPU sec, 36.805 real sec
[0000] Calling mem_process_seqs.., task: 595
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1202930
	[0000][ M::kt_pipeline] read 1202930 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525094, 7, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 261, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1799)
[0000][PE] mean and std.dev: (455.27, 344.15)
[0000][PE] low and high boundaries for proper pairs: (1, 2322)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.93, 63.34)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 249, 471)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 985)
[0000][PE] mean and std.dev: (301.95, 244.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1279)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 321.599 CPU sec, 49.154 real sec
[0000] Calling mem_process_seqs.., task: 596
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203222
	[0000][ M::kt_pipeline] read 1203222 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202930
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 520922, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 222, 326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 634)
[0000][PE] mean and std.dev: (201.20, 64.22)
[0000][PE] low and high boundaries for proper pairs: (1, 788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (117, 542)
[0000][PE] mean and std.dev: (330.31, 63.93)
[0000][PE] low and high boundaries for proper pairs: (32, 627)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (170, 262, 327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 641)
[0000][PE] mean and std.dev: (244.15, 117.75)
[0000][PE] low and high boundaries for proper pairs: (1, 798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202930 reads in 356.347 CPU sec, 49.826 real sec
[0000] Calling mem_process_seqs.., task: 597
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000109, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203222
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524698, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 493, 1470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4048)
[0000][PE] mean and std.dev: (852.26, 803.57)
[0000][PE] low and high boundaries for proper pairs: (1, 5337)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 472, 921)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2205)
[0000][PE] mean and std.dev: (597.24, 456.49)
[0000][PE] low and high boundaries for proper pairs: (1, 2847)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203222 reads in 321.843 CPU sec, 44.944 real sec
[0000] Calling mem_process_seqs.., task: 598
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000215, nseq: 1203280
	[0000][ M::kt_pipeline] read 1203280 sequences (180000215 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524818, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 226, 776)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (382.77, 377.59)
[0000][PE] low and high boundaries for proper pairs: (1, 2630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.68, 63.46)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 578, 1520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4128)
[0000][PE] mean and std.dev: (934.76, 972.62)
[0000][PE] low and high boundaries for proper pairs: (1, 5432)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 323.014 CPU sec, 47.115 real sec
[0000] Calling mem_process_seqs.., task: 599
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203280
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524393, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 704, 1292)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3490)
[0000][PE] mean and std.dev: (725.24, 686.55)
[0000][PE] low and high boundaries for proper pairs: (1, 4589)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.64, 63.31)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 256, 804)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1972)
[0000][PE] mean and std.dev: (410.43, 441.52)
[0000][PE] low and high boundaries for proper pairs: (1, 2556)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203280 reads in 339.476 CPU sec, 49.396 real sec
[0000] Calling mem_process_seqs.., task: 600
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525011, 5, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 358, 1386)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3706)
[0000][PE] mean and std.dev: (679.29, 682.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4866)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.53, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 314, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2988)
[0000][PE] mean and std.dev: (625.50, 624.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3910)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 314.187 CPU sec, 39.687 real sec
[0000] Calling mem_process_seqs.., task: 601
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203238
	[0000][ M::kt_pipeline] read 1203238 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524845, 2, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 293, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2628)
[0000][PE] mean and std.dev: (399.31, 348.93)
[0000][PE] low and high boundaries for proper pairs: (1, 3453)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.72, 63.48)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 334.960 CPU sec, 52.453 real sec
[0000] Calling mem_process_seqs.., task: 602
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1203156
	[0000][ M::kt_pipeline] read 1203156 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524971, 1, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 291, 596)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1484)
[0000][PE] mean and std.dev: (406.30, 370.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 527, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (670.89, 666.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3550)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203238 reads in 318.892 CPU sec, 47.494 real sec
[0000] Calling mem_process_seqs.., task: 603
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203180
	[0000][ M::kt_pipeline] read 1203180 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524769, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 156, 368)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 872)
[0000][PE] mean and std.dev: (180.78, 112.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1124)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (178, 296, 1145)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3079)
[0000][PE] mean and std.dev: (617.35, 617.73)
[0000][PE] low and high boundaries for proper pairs: (1, 4046)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203156 reads in 323.179 CPU sec, 43.816 real sec
[0000] Calling mem_process_seqs.., task: 604
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525070, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 259, 1107)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2937)
[0000][PE] mean and std.dev: (523.47, 486.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3852)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.54, 63.38)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 226, 672)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (437.80, 472.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2328)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203180 reads in 320.800 CPU sec, 37.567 real sec
[0000] Calling mem_process_seqs.., task: 605
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203162
	[0000][ M::kt_pipeline] read 1203162 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524548, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 213, 378)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 892)
[0000][PE] mean and std.dev: (198.27, 99.10)
[0000][PE] low and high boundaries for proper pairs: (1, 1149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.85, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (305, 694, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (710.69, 547.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4661)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 355.581 CPU sec, 53.323 real sec
[0000] Calling mem_process_seqs.., task: 606
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524995, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 220, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (622.43, 701.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3429)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.76, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 298, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2913)
[0000][PE] mean and std.dev: (696.80, 690.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203162 reads in 331.327 CPU sec, 56.048 real sec
[0000] Calling mem_process_seqs.., task: 607
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000041, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000041 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525218, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 217, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2639)
[0000][PE] mean and std.dev: (571.13, 587.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 463, 2074)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5784)
[0000][PE] mean and std.dev: (1010.40, 1116.75)
[0000][PE] low and high boundaries for proper pairs: (1, 7639)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 333.609 CPU sec, 52.378 real sec
[0000] Calling mem_process_seqs.., task: 608
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000132, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000132 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524826, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (181, 296, 619)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1495)
[0000][PE] mean and std.dev: (324.96, 271.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1933)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.65, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 331, 1161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3027)
[0000][PE] mean and std.dev: (514.29, 403.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3960)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 327.642 CPU sec, 33.306 real sec
[0000] Calling mem_process_seqs.., task: 609
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525026, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 322, 609)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1427)
[0000][PE] mean and std.dev: (342.53, 227.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.39, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 604, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1905)
[0000][PE] mean and std.dev: (581.71, 423.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2460)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 335.802 CPU sec, 45.699 real sec
[0000] Calling mem_process_seqs.., task: 610
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203168
	[0000][ M::kt_pipeline] read 1203168 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524768, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 212, 685)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1715)
[0000][PE] mean and std.dev: (376.06, 354.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.44, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 427, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3299)
[0000][PE] mean and std.dev: (733.00, 735.13)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 330.118 CPU sec, 47.723 real sec
[0000] Calling mem_process_seqs.., task: 611
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525186, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 262, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 988)
[0000][PE] mean and std.dev: (250.53, 155.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1270)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 695, 1361)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3589)
[0000][PE] mean and std.dev: (726.43, 755.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203168 reads in 336.290 CPU sec, 49.546 real sec
[0000] Calling mem_process_seqs.., task: 612
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 525049, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 268, 996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2586)
[0000][PE] mean and std.dev: (373.75, 311.43)
[0000][PE] low and high boundaries for proper pairs: (1, 3381)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 295, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (391.18, 278.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2565)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 326.160 CPU sec, 41.572 real sec
[0000] Calling mem_process_seqs.., task: 613
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524726, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 203, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 441)
[0000][PE] mean and std.dev: (164.53, 51.87)
[0000][PE] low and high boundaries for proper pairs: (1, 545)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.21, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 272, 1561)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4295)
[0000][PE] mean and std.dev: (721.47, 725.86)
[0000][PE] low and high boundaries for proper pairs: (1, 5662)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 322.562 CPU sec, 40.917 real sec
[0000] Calling mem_process_seqs.., task: 614
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000174, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000174 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 525337, 1, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.40, 63.48)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (167, 254, 1118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3020)
[0000][PE] mean and std.dev: (562.71, 711.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3971)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 334.592 CPU sec, 48.664 real sec
[0000] Calling mem_process_seqs.., task: 615
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524676, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (129, 249, 1420)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4002)
[0000][PE] mean and std.dev: (691.33, 725.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5293)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.19, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 391, 1106)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2820)
[0000][PE] mean and std.dev: (568.41, 458.05)
[0000][PE] low and high boundaries for proper pairs: (1, 3677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 323.651 CPU sec, 46.373 real sec
[0000] Calling mem_process_seqs.., task: 616
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1203112
	[0000][ M::kt_pipeline] read 1203112 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525129, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 316, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1310)
[0000][PE] mean and std.dev: (335.82, 156.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1654)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 360, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2364)
[0000][PE] mean and std.dev: (558.81, 477.45)
[0000][PE] low and high boundaries for proper pairs: (1, 3073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 335.065 CPU sec, 52.205 real sec
[0000] Calling mem_process_seqs.., task: 617
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203180
	[0000][ M::kt_pipeline] read 1203180 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524539, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 194, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 752)
[0000][PE] mean and std.dev: (209.41, 83.43)
[0000][PE] low and high boundaries for proper pairs: (1, 948)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (228, 356, 1139)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2961)
[0000][PE] mean and std.dev: (661.00, 606.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203112 reads in 327.913 CPU sec, 52.395 real sec
[0000] Calling mem_process_seqs.., task: 618
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1203240
	[0000][ M::kt_pipeline] read 1203240 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524616, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 195, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 535)
[0000][PE] mean and std.dev: (216.62, 101.44)
[0000][PE] low and high boundaries for proper pairs: (1, 659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.24, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (328, 823, 1108)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (679.53, 469.16)
[0000][PE] low and high boundaries for proper pairs: (1, 3448)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203180 reads in 323.630 CPU sec, 36.027 real sec
[0000] Calling mem_process_seqs.., task: 619
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525039, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 256, 584)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1394)
[0000][PE] mean and std.dev: (313.42, 254.01)
[0000][PE] low and high boundaries for proper pairs: (1, 1799)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.33, 63.36)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 805, 1317)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (808.15, 603.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4341)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203240 reads in 330.803 CPU sec, 44.864 real sec
[0000] Calling mem_process_seqs.., task: 620
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203190
	[0000][ M::kt_pipeline] read 1203190 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524802, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 215, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 520)
[0000][PE] mean and std.dev: (184.39, 66.90)
[0000][PE] low and high boundaries for proper pairs: (1, 643)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.39, 63.50)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 283, 495)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1077)
[0000][PE] mean and std.dev: (285.81, 157.83)
[0000][PE] low and high boundaries for proper pairs: (1, 1368)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 326.449 CPU sec, 44.866 real sec
[0000] Calling mem_process_seqs.., task: 621
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524690, 4, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 344, 1009)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2577)
[0000][PE] mean and std.dev: (455.72, 360.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3361)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (229, 373, 1194)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3124)
[0000][PE] mean and std.dev: (666.48, 623.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4089)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203190 reads in 326.104 CPU sec, 37.633 real sec
[0000] Calling mem_process_seqs.., task: 622
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1203078
	[0000][ M::kt_pipeline] read 1203078 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524605, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (135, 217, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 705)
[0000][PE] mean and std.dev: (212.53, 137.14)
[0000][PE] low and high boundaries for proper pairs: (1, 895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.15, 63.33)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 780, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2620)
[0000][PE] mean and std.dev: (731.69, 598.07)
[0000][PE] low and high boundaries for proper pairs: (1, 3404)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 313.444 CPU sec, 32.613 real sec
[0000] Calling mem_process_seqs.., task: 623
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203094
	[0000][ M::kt_pipeline] read 1203094 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203078
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524426, 0, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 237, 1179)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3123)
[0000][PE] mean and std.dev: (609.47, 638.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.31, 63.40)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 247, 1018)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2668)
[0000][PE] mean and std.dev: (553.31, 452.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3493)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203078 reads in 335.038 CPU sec, 51.106 real sec
[0000] Calling mem_process_seqs.., task: 624
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000236, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000236 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524860, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 257, 795)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2019)
[0000][PE] mean and std.dev: (359.44, 309.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.01, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (296, 856, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3317)
[0000][PE] mean and std.dev: (785.58, 628.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4324)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203094 reads in 329.041 CPU sec, 42.461 real sec
[0000] Calling mem_process_seqs.., task: 625
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000063, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000063 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524194, 6, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 185, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 655)
[0000][PE] mean and std.dev: (215.85, 120.10)
[0000][PE] low and high boundaries for proper pairs: (1, 829)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (338, 785, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3368)
[0000][PE] mean and std.dev: (954.00, 857.57)
[0000][PE] low and high boundaries for proper pairs: (1, 4384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 328.630 CPU sec, 38.149 real sec
[0000] Calling mem_process_seqs.., task: 626
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1202994
	[0000][ M::kt_pipeline] read 1202994 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524599, 3, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 228, 506)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1112)
[0000][PE] mean and std.dev: (283.33, 153.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.01, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (277, 331, 1016)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2494)
[0000][PE] mean and std.dev: (540.11, 586.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3233)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 334.907 CPU sec, 38.603 real sec
[0000] Calling mem_process_seqs.., task: 627
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202994
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524643, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 250, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 726)
[0000][PE] mean and std.dev: (282.79, 120.96)
[0000][PE] low and high boundaries for proper pairs: (1, 893)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202994 reads in 328.530 CPU sec, 37.527 real sec
[0000] Calling mem_process_seqs.., task: 628
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524758, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (252, 313, 1647)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4437)
[0000][PE] mean and std.dev: (1021.13, 1144.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5832)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (405, 681, 1231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2883)
[0000][PE] mean and std.dev: (681.29, 411.62)
[0000][PE] low and high boundaries for proper pairs: (1, 3709)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 333.879 CPU sec, 41.514 real sec
[0000] Calling mem_process_seqs.., task: 629
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524285, 6, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 229, 374)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 682)
[0000][PE] mean and std.dev: (229.00, 94.97)
[0000][PE] low and high boundaries for proper pairs: (1, 836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.24, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 328, 1560)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4118)
[0000][PE] mean and std.dev: (872.08, 950.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 324.870 CPU sec, 39.359 real sec
[0000] Calling mem_process_seqs.., task: 630
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000116, nseq: 1203190
	[0000][ M::kt_pipeline] read 1203190 sequences (180000116 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524931, 1, 33)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 343, 854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1986)
[0000][PE] mean and std.dev: (508.38, 400.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2552)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (267, 364, 920)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2226)
[0000][PE] mean and std.dev: (568.84, 429.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2879)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 331.117 CPU sec, 46.609 real sec
[0000] Calling mem_process_seqs.., task: 631
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524794, 5, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 290, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2765)
[0000][PE] mean and std.dev: (474.06, 562.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3627)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203190 reads in 325.691 CPU sec, 37.766 real sec
[0000] Calling mem_process_seqs.., task: 632
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1202988
	[0000][ M::kt_pipeline] read 1202988 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524461, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 213, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1382)
[0000][PE] mean and std.dev: (333.40, 279.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.16, 62.99)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (375, 1142, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (963.07, 674.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6327)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 332.839 CPU sec, 44.169 real sec
[0000] Calling mem_process_seqs.., task: 633
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 523914, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (220, 266, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2464)
[0000][PE] mean and std.dev: (572.05, 576.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3212)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.20, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 856, 1593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4249)
[0000][PE] mean and std.dev: (983.33, 896.87)
[0000][PE] low and high boundaries for proper pairs: (1, 5577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202988 reads in 339.660 CPU sec, 51.336 real sec
[0000] Calling mem_process_seqs.., task: 634
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000219, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524540, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 677, 1328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (730.75, 594.90)
[0000][PE] low and high boundaries for proper pairs: (1, 4562)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 325, 377)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 631)
[0000][PE] mean and std.dev: (281.60, 83.98)
[0000][PE] low and high boundaries for proper pairs: (1, 758)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 329.806 CPU sec, 43.255 real sec
[0000] Calling mem_process_seqs.., task: 635
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203068
	[0000][ M::kt_pipeline] read 1203068 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524320, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (104, 155, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2498)
[0000][PE] mean and std.dev: (373.73, 538.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3296)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.21, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (269, 491, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2354)
[0000][PE] mean and std.dev: (662.16, 598.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 328.757 CPU sec, 37.834 real sec
[0000] Calling mem_process_seqs.., task: 636
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203068
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524605, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 291, 604)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1462)
[0000][PE] mean and std.dev: (368.37, 299.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1891)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.22, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 841, 1590)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4186)
[0000][PE] mean and std.dev: (980.87, 805.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203068 reads in 322.672 CPU sec, 29.782 real sec
[0000] Calling mem_process_seqs.., task: 637
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1203196
	[0000][ M::kt_pipeline] read 1203196 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524772, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 264, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 900)
[0000][PE] mean and std.dev: (266.79, 105.56)
[0000][PE] low and high boundaries for proper pairs: (1, 1120)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.15, 63.14)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 288, 768)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1860)
[0000][PE] mean and std.dev: (500.77, 388.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2406)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 327.060 CPU sec, 42.138 real sec
[0000] Calling mem_process_seqs.., task: 638
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1202982
	[0000][ M::kt_pipeline] read 1202982 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524303, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (265, 322, 1782)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4816)
[0000][PE] mean and std.dev: (820.87, 852.20)
[0000][PE] low and high boundaries for proper pairs: (1, 6333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (324, 377, 1429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3639)
[0000][PE] mean and std.dev: (724.81, 546.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4744)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203196 reads in 323.359 CPU sec, 36.250 real sec
[0000] Calling mem_process_seqs.., task: 639
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000027, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000027 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202982
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 524208, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 281, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2906)
[0000][PE] mean and std.dev: (482.35, 568.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3824)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.34, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 836, 1224)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3082)
[0000][PE] mean and std.dev: (695.18, 468.15)
[0000][PE] low and high boundaries for proper pairs: (1, 4011)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202982 reads in 337.448 CPU sec, 43.753 real sec
[0000] Calling mem_process_seqs.., task: 640
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524523, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 309, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (795.75, 781.39)
[0000][PE] low and high boundaries for proper pairs: (1, 5249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.07, 63.05)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 250, 355)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 647)
[0000][PE] mean and std.dev: (260.67, 111.26)
[0000][PE] low and high boundaries for proper pairs: (1, 793)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 331.803 CPU sec, 43.537 real sec
[0000] Calling mem_process_seqs.., task: 641
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000281, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000281 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 523898, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 263, 730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1782)
[0000][PE] mean and std.dev: (424.55, 353.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2308)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.07)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 407, 906)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2096)
[0000][PE] mean and std.dev: (608.14, 468.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 341.973 CPU sec, 44.022 real sec
[0000] Calling mem_process_seqs.., task: 642
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203134
	[0000][ M::kt_pipeline] read 1203134 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524492, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (146, 229, 724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1880)
[0000][PE] mean and std.dev: (315.00, 257.19)
[0000][PE] low and high boundaries for proper pairs: (1, 2458)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.72, 63.22)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 855, 1274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3238)
[0000][PE] mean and std.dev: (855.20, 607.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4220)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 342.055 CPU sec, 44.036 real sec
[0000] Calling mem_process_seqs.., task: 643
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000181, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000181 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524706, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (362, 982, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3311)
[0000][PE] mean and std.dev: (855.65, 796.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4294)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.36, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 390, 1115)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2973)
[0000][PE] mean and std.dev: (636.75, 594.30)
[0000][PE] low and high boundaries for proper pairs: (1, 3902)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203134 reads in 341.248 CPU sec, 32.203 real sec
[0000] Calling mem_process_seqs.., task: 644
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525176, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 315, 972)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2426)
[0000][PE] mean and std.dev: (491.50, 355.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3153)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.47, 63.31)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (189, 323, 1599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4419)
[0000][PE] mean and std.dev: (670.53, 605.82)
[0000][PE] low and high boundaries for proper pairs: (1, 5829)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 385.455 CPU sec, 54.281 real sec
[0000] Calling mem_process_seqs.., task: 645
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000131, nseq: 1203212
	[0000][ M::kt_pipeline] read 1203212 sequences (180000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524385, 10, 15)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.54, 63.31)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (416, 2878, 3155)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8633)
[0000][PE] mean and std.dev: (1734.44, 1250.08)
[0000][PE] low and high boundaries for proper pairs: (1, 11372)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 332, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (608.64, 667.65)
[0000][PE] low and high boundaries for proper pairs: (1, 4213)
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 333.198 CPU sec, 40.624 real sec
[0000] Calling mem_process_seqs.., task: 646
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203246
	[0000][ M::kt_pipeline] read 1203246 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524111, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 274, 1315)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3551)
[0000][PE] mean and std.dev: (767.20, 832.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4669)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.02, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 703, 1141)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2833)
[0000][PE] mean and std.dev: (729.18, 486.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203212 reads in 347.426 CPU sec, 60.096 real sec
[0000] Calling mem_process_seqs.., task: 647
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203310
	[0000][ M::kt_pipeline] read 1203310 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524025, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (128, 154, 494)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1226)
[0000][PE] mean and std.dev: (294.63, 259.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1592)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.99, 63.03)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 269, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2078)
[0000][PE] mean and std.dev: (498.84, 488.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2691)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203246 reads in 350.918 CPU sec, 61.014 real sec
[0000] Calling mem_process_seqs.., task: 648
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000069, nseq: 1203290
	[0000][ M::kt_pipeline] read 1203290 sequences (180000069 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 523827, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 282, 1019)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2611)
[0000][PE] mean and std.dev: (556.65, 534.74)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.92, 63.03)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 676, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3043)
[0000][PE] mean and std.dev: (769.08, 587.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3979)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203310 reads in 354.572 CPU sec, 50.716 real sec
[0000] Calling mem_process_seqs.., task: 649
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000020, nseq: 1203436
	[0000][ M::kt_pipeline] read 1203436 sequences (180000020 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 523904, 1, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 209, 905)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (403.92, 402.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3128)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.13)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 326, 1116)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2842)
[0000][PE] mean and std.dev: (812.56, 776.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3917)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203290 reads in 362.349 CPU sec, 43.654 real sec
[0000] Calling mem_process_seqs.., task: 650
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000157, nseq: 1203334
	[0000][ M::kt_pipeline] read 1203334 sequences (180000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203436
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 523269, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 245, 1002)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (560.41, 720.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.55, 62.82)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 266, 1633)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4509)
[0000][PE] mean and std.dev: (613.94, 741.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5947)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203436 reads in 373.342 CPU sec, 41.980 real sec
[0000] Calling mem_process_seqs.., task: 651
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203334
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 523846, 0, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 263, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3178)
[0000][PE] mean and std.dev: (426.71, 568.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4173)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.10)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 346, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2212)
[0000][PE] mean and std.dev: (516.93, 360.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203334 reads in 354.748 CPU sec, 42.835 real sec
[0000] Calling mem_process_seqs.., task: 652
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1203208
	[0000][ M::kt_pipeline] read 1203208 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524385, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 267, 846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2222)
[0000][PE] mean and std.dev: (490.27, 534.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2910)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 364, 1091)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (593.80, 447.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3629)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 340.746 CPU sec, 32.583 real sec
[0000] Calling mem_process_seqs.., task: 653
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000262, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000262 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524977, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 317, 918)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2336)
[0000][PE] mean and std.dev: (537.33, 494.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3045)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.60, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (185, 295, 1251)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3383)
[0000][PE] mean and std.dev: (605.00, 542.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203208 reads in 335.589 CPU sec, 38.540 real sec
[0000] Calling mem_process_seqs.., task: 654
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1203230
	[0000][ M::kt_pipeline] read 1203230 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524762, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 235, 323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 683)
[0000][PE] mean and std.dev: (207.91, 81.67)
[0000][PE] low and high boundaries for proper pairs: (1, 863)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.63, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 297, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2909)
[0000][PE] mean and std.dev: (586.08, 574.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3805)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 311.319 CPU sec, 24.032 real sec
[0000] Calling mem_process_seqs.., task: 655
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203044
	[0000][ M::kt_pipeline] read 1203044 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525050, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 264, 957)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2441)
[0000][PE] mean and std.dev: (501.88, 486.86)
[0000][PE] low and high boundaries for proper pairs: (1, 3183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.56)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 652, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (812.95, 663.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4529)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203230 reads in 327.177 CPU sec, 33.847 real sec
[0000] Calling mem_process_seqs.., task: 656
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203182
	[0000][ M::kt_pipeline] read 1203182 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203044
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524669, 4, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 314, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1948)
[0000][PE] mean and std.dev: (508.24, 392.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.63, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 1007, 1485)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3709)
[0000][PE] mean and std.dev: (953.09, 619.17)
[0000][PE] low and high boundaries for proper pairs: (1, 4821)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203044 reads in 319.582 CPU sec, 32.122 real sec
[0000] Calling mem_process_seqs.., task: 657
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1203116
	[0000][ M::kt_pipeline] read 1203116 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524702, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 314, 1289)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3515)
[0000][PE] mean and std.dev: (642.36, 704.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4628)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.62, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 1060, 1334)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3406)
[0000][PE] mean and std.dev: (1061.50, 814.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4442)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203182 reads in 317.964 CPU sec, 33.746 real sec
[0000] Calling mem_process_seqs.., task: 658
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000144, nseq: 1203332
	[0000][ M::kt_pipeline] read 1203332 sequences (180000144 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524942, 2, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 251, 340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 660)
[0000][PE] mean and std.dev: (236.50, 97.78)
[0000][PE] low and high boundaries for proper pairs: (1, 820)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 455, 1013)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2541)
[0000][PE] mean and std.dev: (726.45, 696.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3511)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203116 reads in 323.791 CPU sec, 33.770 real sec
[0000] Calling mem_process_seqs.., task: 659
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203356
	[0000][ M::kt_pipeline] read 1203356 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524897, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 236, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2164)
[0000][PE] mean and std.dev: (419.85, 390.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2818)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.84, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (412, 630, 840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1696)
[0000][PE] mean and std.dev: (592.42, 266.39)
[0000][PE] low and high boundaries for proper pairs: (1, 2124)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203332 reads in 320.783 CPU sec, 24.094 real sec
[0000] Calling mem_process_seqs.., task: 660
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000121, nseq: 1203076
	[0000][ M::kt_pipeline] read 1203076 sequences (180000121 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203356
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524737, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (136, 310, 2234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6430)
[0000][PE] mean and std.dev: (1039.81, 1476.55)
[0000][PE] low and high boundaries for proper pairs: (1, 8528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.91, 63.52)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (346, 681, 1148)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2752)
[0000][PE] mean and std.dev: (763.56, 529.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3554)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203356 reads in 317.102 CPU sec, 29.598 real sec
[0000] Calling mem_process_seqs.., task: 661
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000222, nseq: 1203206
	[0000][ M::kt_pipeline] read 1203206 sequences (180000222 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203076
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524584, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 203, 468)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (309.64, 278.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (326, 688, 1240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3068)
[0000][PE] mean and std.dev: (738.47, 523.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3982)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203076 reads in 332.752 CPU sec, 35.143 real sec
[0000] Calling mem_process_seqs.., task: 662
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1203120
	[0000][ M::kt_pipeline] read 1203120 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525430, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (223, 662, 1977)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5485)
[0000][PE] mean and std.dev: (1028.95, 964.44)
[0000][PE] low and high boundaries for proper pairs: (1, 7239)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.70, 63.34)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (340, 1488, 2046)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5458)
[0000][PE] mean and std.dev: (1354.25, 1173.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7164)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203206 reads in 321.997 CPU sec, 38.417 real sec
[0000] Calling mem_process_seqs.., task: 663
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000093, nseq: 1203112
	[0000][ M::kt_pipeline] read 1203112 sequences (180000093 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203120
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525121, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (185, 467, 2114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5972)
[0000][PE] mean and std.dev: (759.36, 779.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7901)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.83, 63.47)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 330, 601)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1255)
[0000][PE] mean and std.dev: (325.09, 111.97)
[0000][PE] low and high boundaries for proper pairs: (1, 1582)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203120 reads in 314.565 CPU sec, 26.891 real sec
[0000] Calling mem_process_seqs.., task: 664
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525149, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 685, 1076)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (760.25, 707.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.34)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (199, 788, 1405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3817)
[0000][PE] mean and std.dev: (853.77, 715.74)
[0000][PE] low and high boundaries for proper pairs: (1, 5023)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203112 reads in 316.501 CPU sec, 28.001 real sec
[0000] Calling mem_process_seqs.., task: 665
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1203210
	[0000][ M::kt_pipeline] read 1203210 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525111, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 232, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 940)
[0000][PE] mean and std.dev: (275.90, 175.41)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.83, 63.38)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 301, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2686)
[0000][PE] mean and std.dev: (574.60, 545.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 310.250 CPU sec, 27.732 real sec
[0000] Calling mem_process_seqs.., task: 666
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203210
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524887, 9, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (98, 166, 580)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1544)
[0000][PE] mean and std.dev: (313.25, 299.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2026)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.38)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 845, 1869)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5107)
[0000][PE] mean and std.dev: (1095.95, 1004.32)
[0000][PE] low and high boundaries for proper pairs: (1, 6726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203210 reads in 320.129 CPU sec, 28.228 real sec
[0000] Calling mem_process_seqs.., task: 667
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000086, nseq: 1203262
	[0000][ M::kt_pipeline] read 1203262 sequences (180000086 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524600, 1, 13)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.74, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (304, 614, 1914)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5134)
[0000][PE] mean and std.dev: (1073.54, 1009.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6744)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 314.889 CPU sec, 31.356 real sec
[0000] Calling mem_process_seqs.., task: 668
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524525, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 257, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (393.15, 433.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2635)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.73, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (329, 983, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4049)
[0000][PE] mean and std.dev: (1015.14, 737.88)
[0000][PE] low and high boundaries for proper pairs: (1, 5289)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203262 reads in 328.052 CPU sec, 31.417 real sec
[0000] Calling mem_process_seqs.., task: 669
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1203244
	[0000][ M::kt_pipeline] read 1203244 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524787, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 391, 941)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (671.55, 647.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3260)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.75, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 285, 1069)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2783)
[0000][PE] mean and std.dev: (669.14, 692.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 320.370 CPU sec, 26.217 real sec
[0000] Calling mem_process_seqs.., task: 670
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203270
	[0000][ M::kt_pipeline] read 1203270 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203244
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524922, 8, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 217, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 845)
[0000][PE] mean and std.dev: (270.00, 188.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1063)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.34)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 608, 1149)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2901)
[0000][PE] mean and std.dev: (661.75, 493.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3777)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203244 reads in 321.190 CPU sec, 39.008 real sec
[0000] Calling mem_process_seqs.., task: 671
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524760, 3, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 453, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2012)
[0000][PE] mean and std.dev: (476.60, 393.62)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.58, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (154, 270, 1171)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3205)
[0000][PE] mean and std.dev: (529.00, 477.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4222)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203270 reads in 307.841 CPU sec, 27.747 real sec
[0000] Calling mem_process_seqs.., task: 672
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203196
	[0000][ M::kt_pipeline] read 1203196 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524483, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 260, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2623)
[0000][PE] mean and std.dev: (406.62, 484.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3444)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.65, 63.28)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (164, 497, 1268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3476)
[0000][PE] mean and std.dev: (766.39, 750.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4580)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 312.059 CPU sec, 28.706 real sec
[0000] Calling mem_process_seqs.., task: 673
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000297, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000297 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524471, 5, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (121, 236, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1288)
[0000][PE] mean and std.dev: (260.58, 183.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 331, 1120)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2934)
[0000][PE] mean and std.dev: (552.92, 540.03)
[0000][PE] low and high boundaries for proper pairs: (1, 3841)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203196 reads in 328.824 CPU sec, 37.051 real sec
[0000] Calling mem_process_seqs.., task: 674
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203310
	[0000][ M::kt_pipeline] read 1203310 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525294, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 258, 367)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 741)
[0000][PE] mean and std.dev: (233.71, 100.74)
[0000][PE] low and high boundaries for proper pairs: (1, 928)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.55, 63.32)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 300, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3467)
[0000][PE] mean and std.dev: (580.14, 520.82)
[0000][PE] low and high boundaries for proper pairs: (1, 4551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 321.626 CPU sec, 30.672 real sec
[0000] Calling mem_process_seqs.., task: 675
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203208
	[0000][ M::kt_pipeline] read 1203208 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203310
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524699, 11, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 278, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2780)
[0000][PE] mean and std.dev: (556.50, 473.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3653)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.22, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (739, 1039, 3764)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9814)
[0000][PE] mean and std.dev: (2449.55, 2324.42)
[0000][PE] low and high boundaries for proper pairs: (1, 12839)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (174, 376, 2283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6501)
[0000][PE] mean and std.dev: (1110.54, 1367.41)
[0000][PE] low and high boundaries for proper pairs: (1, 8610)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203310 reads in 324.755 CPU sec, 34.607 real sec
[0000] Calling mem_process_seqs.., task: 676
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000134, nseq: 1202986
	[0000][ M::kt_pipeline] read 1202986 sequences (180000134 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 525025, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 603, 1081)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2781)
[0000][PE] mean and std.dev: (675.92, 618.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3631)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 320, 1110)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2838)
[0000][PE] mean and std.dev: (564.31, 465.06)
[0000][PE] low and high boundaries for proper pairs: (1, 3702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203208 reads in 311.083 CPU sec, 33.464 real sec
[0000] Calling mem_process_seqs.., task: 677
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000235, nseq: 1203358
	[0000][ M::kt_pipeline] read 1203358 sequences (180000235 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524956, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 256, 855)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2133)
[0000][PE] mean and std.dev: (478.12, 375.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.39, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 630, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2431)
[0000][PE] mean and std.dev: (702.68, 488.40)
[0000][PE] low and high boundaries for proper pairs: (1, 3139)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202986 reads in 326.341 CPU sec, 37.172 real sec
[0000] Calling mem_process_seqs.., task: 678
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000210, nseq: 1203294
	[0000][ M::kt_pipeline] read 1203294 sequences (180000210 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203358
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524570, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 274, 836)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2132)
[0000][PE] mean and std.dev: (340.50, 296.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.62, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 340, 1147)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2905)
[0000][PE] mean and std.dev: (636.60, 545.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3784)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203358 reads in 321.572 CPU sec, 36.471 real sec
[0000] Calling mem_process_seqs.., task: 679
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000084, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000084 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524515, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (238, 318, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2707)
[0000][PE] mean and std.dev: (479.29, 521.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.58, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (268, 648, 946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2302)
[0000][PE] mean and std.dev: (623.75, 400.51)
[0000][PE] low and high boundaries for proper pairs: (1, 2980)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203294 reads in 309.959 CPU sec, 25.432 real sec
[0000] Calling mem_process_seqs.., task: 680
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000118, nseq: 1203294
	[0000][ M::kt_pipeline] read 1203294 sequences (180000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 524794, 2, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 270, 1097)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2947)
[0000][PE] mean and std.dev: (450.03, 407.52)
[0000][PE] low and high boundaries for proper pairs: (1, 3872)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.37)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 453, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3886)
[0000][PE] mean and std.dev: (818.43, 821.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5121)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 323.406 CPU sec, 37.941 real sec
[0000] Calling mem_process_seqs.., task: 681
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203294
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524764, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 238, 517)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1159)
[0000][PE] mean and std.dev: (221.86, 101.28)
[0000][PE] low and high boundaries for proper pairs: (1, 1480)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.42, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 1061, 3161)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8899)
[0000][PE] mean and std.dev: (2103.24, 2316.93)
[0000][PE] low and high boundaries for proper pairs: (1, 11768)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203294 reads in 310.193 CPU sec, 22.688 real sec
[0000] Calling mem_process_seqs.., task: 682
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203198
	[0000][ M::kt_pipeline] read 1203198 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524934, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 374, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3084)
[0000][PE] mean and std.dev: (656.12, 568.35)
[0000][PE] low and high boundaries for proper pairs: (1, 4032)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.49, 63.46)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 335, 1811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4933)
[0000][PE] mean and std.dev: (946.39, 949.74)
[0000][PE] low and high boundaries for proper pairs: (1, 6494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 321.891 CPU sec, 37.236 real sec
[0000] Calling mem_process_seqs.., task: 683
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524826, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 284, 858)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2250)
[0000][PE] mean and std.dev: (506.29, 508.97)
[0000][PE] low and high boundaries for proper pairs: (1, 2946)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.49)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 315, 437)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 825)
[0000][PE] mean and std.dev: (333.46, 96.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1019)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203198 reads in 315.905 CPU sec, 31.125 real sec
[0000] Calling mem_process_seqs.., task: 684
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524969, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 249, 681)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1667)
[0000][PE] mean and std.dev: (443.89, 377.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2160)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 318, 1111)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2835)
[0000][PE] mean and std.dev: (508.80, 410.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3697)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 319.327 CPU sec, 35.243 real sec
[0000] Calling mem_process_seqs.., task: 685
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000110, nseq: 1203188
	[0000][ M::kt_pipeline] read 1203188 sequences (180000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524684, 7, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 266, 665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1655)
[0000][PE] mean and std.dev: (468.00, 449.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2264)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.47, 63.53)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 606, 1345)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (733.31, 650.79)
[0000][PE] low and high boundaries for proper pairs: (1, 4597)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 323.295 CPU sec, 31.458 real sec
[0000] Calling mem_process_seqs.., task: 686
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524942, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (261, 297, 1233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3177)
[0000][PE] mean and std.dev: (595.73, 513.46)
[0000][PE] low and high boundaries for proper pairs: (1, 4149)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.56, 63.51)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (401, 597, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3083)
[0000][PE] mean and std.dev: (772.13, 513.55)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203188 reads in 328.724 CPU sec, 34.673 real sec
[0000] Calling mem_process_seqs.., task: 687
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000008, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000008 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524861, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 554, 1213)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (718.35, 740.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4423)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.27)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (217, 331, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (793.20, 707.42)
[0000][PE] low and high boundaries for proper pairs: (1, 4049)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 317.941 CPU sec, 31.460 real sec
[0000] Calling mem_process_seqs.., task: 688
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000241, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000241 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524627, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 342, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2349)
[0000][PE] mean and std.dev: (519.69, 327.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3055)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.29, 63.43)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 298, 975)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2493)
[0000][PE] mean and std.dev: (507.05, 427.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 314.038 CPU sec, 31.853 real sec
[0000] Calling mem_process_seqs.., task: 689
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000107, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000107 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524923, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 294, 997)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2571)
[0000][PE] mean and std.dev: (581.87, 580.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3358)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (434, 873, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2693)
[0000][PE] mean and std.dev: (851.73, 493.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3446)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 319.542 CPU sec, 29.790 real sec
[0000] Calling mem_process_seqs.., task: 690
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203156
	[0000][ M::kt_pipeline] read 1203156 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524630, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 451, 738)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1756)
[0000][PE] mean and std.dev: (445.62, 318.30)
[0000][PE] low and high boundaries for proper pairs: (1, 2265)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.41, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (159, 201, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 801)
[0000][PE] mean and std.dev: (251.06, 143.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 312.402 CPU sec, 25.719 real sec
[0000] Calling mem_process_seqs.., task: 691
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203152
	[0000][ M::kt_pipeline] read 1203152 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524803, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 302, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3604)
[0000][PE] mean and std.dev: (645.73, 620.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.28, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (147, 353, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4317)
[0000][PE] mean and std.dev: (652.31, 610.72)
[0000][PE] low and high boundaries for proper pairs: (1, 5707)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203156 reads in 323.633 CPU sec, 36.392 real sec
[0000] Calling mem_process_seqs.., task: 692
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000147, nseq: 1203232
	[0000][ M::kt_pipeline] read 1203232 sequences (180000147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524789, 1, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (227, 314, 1157)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3017)
[0000][PE] mean and std.dev: (677.48, 765.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3947)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.19, 63.49)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (349, 575, 1397)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (885.85, 696.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4541)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203152 reads in 327.387 CPU sec, 35.079 real sec
[0000] Calling mem_process_seqs.., task: 693
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1203226
	[0000][ M::kt_pipeline] read 1203226 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524630, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 272, 720)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1854)
[0000][PE] mean and std.dev: (339.00, 302.93)
[0000][PE] low and high boundaries for proper pairs: (1, 2421)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.52, 63.46)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (172, 233, 429)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 943)
[0000][PE] mean and std.dev: (247.20, 106.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1200)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203232 reads in 325.346 CPU sec, 34.640 real sec
[0000] Calling mem_process_seqs.., task: 694
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524676, 0, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 256, 1169)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3225)
[0000][PE] mean and std.dev: (776.57, 864.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4253)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 241, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (55, 425)
[0000][PE] mean and std.dev: (216.13, 47.37)
[0000][PE] low and high boundaries for proper pairs: (1, 499)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203226 reads in 313.431 CPU sec, 26.917 real sec
[0000] Calling mem_process_seqs.., task: 695
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000208, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000208 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524822, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 330, 856)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2088)
[0000][PE] mean and std.dev: (565.84, 430.36)
[0000][PE] low and high boundaries for proper pairs: (1, 2704)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.44, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 419, 1886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5196)
[0000][PE] mean and std.dev: (547.93, 490.25)
[0000][PE] low and high boundaries for proper pairs: (1, 6851)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 332.504 CPU sec, 37.510 real sec
[0000] Calling mem_process_seqs.., task: 696
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203226
	[0000][ M::kt_pipeline] read 1203226 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525157, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 283, 2160)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6144)
[0000][PE] mean and std.dev: (1170.57, 1499.94)
[0000][PE] low and high boundaries for proper pairs: (1, 8136)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.29, 63.55)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 407, 1303)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3435)
[0000][PE] mean and std.dev: (687.64, 677.41)
[0000][PE] low and high boundaries for proper pairs: (1, 4501)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 318.521 CPU sec, 26.046 real sec
[0000] Calling mem_process_seqs.., task: 697
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524738, 2, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 261, 1064)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (478.75, 481.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.08, 63.49)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (642, 794, 1349)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2763)
[0000][PE] mean and std.dev: (772.90, 398.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3470)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203226 reads in 315.772 CPU sec, 34.020 real sec
[0000] Calling mem_process_seqs.., task: 698
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1203152
	[0000][ M::kt_pipeline] read 1203152 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524977, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 260, 347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 715)
[0000][PE] mean and std.dev: (228.47, 126.24)
[0000][PE] low and high boundaries for proper pairs: (1, 899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (246, 306, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2160)
[0000][PE] mean and std.dev: (548.47, 511.02)
[0000][PE] low and high boundaries for proper pairs: (1, 2798)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 306.829 CPU sec, 28.534 real sec
[0000] Calling mem_process_seqs.., task: 699
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1203072
	[0000][ M::kt_pipeline] read 1203072 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524656, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 264, 3118)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8930)
[0000][PE] mean and std.dev: (1241.11, 1645.25)
[0000][PE] low and high boundaries for proper pairs: (1, 11836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.97, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 405, 1872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5060)
[0000][PE] mean and std.dev: (725.47, 677.06)
[0000][PE] low and high boundaries for proper pairs: (1, 6654)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203152 reads in 316.402 CPU sec, 25.720 real sec
[0000] Calling mem_process_seqs.., task: 700
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203144
	[0000][ M::kt_pipeline] read 1203144 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524480, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 245, 706)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1722)
[0000][PE] mean and std.dev: (392.09, 408.87)
[0000][PE] low and high boundaries for proper pairs: (1, 2230)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.85, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 418, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2151)
[0000][PE] mean and std.dev: (567.50, 452.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2782)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203072 reads in 326.199 CPU sec, 34.176 real sec
[0000] Calling mem_process_seqs.., task: 701
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524520, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 424, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2145)
[0000][PE] mean and std.dev: (386.07, 221.70)
[0000][PE] low and high boundaries for proper pairs: (1, 2789)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.77, 63.16)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 414, 1044)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2580)
[0000][PE] mean and std.dev: (639.54, 408.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203144 reads in 316.222 CPU sec, 25.798 real sec
[0000] Calling mem_process_seqs.., task: 702
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525149, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 284, 757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1939)
[0000][PE] mean and std.dev: (372.86, 302.44)
[0000][PE] low and high boundaries for proper pairs: (1, 2530)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 250, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (375.00, 366.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2885)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 324.410 CPU sec, 33.060 real sec
[0000] Calling mem_process_seqs.., task: 703
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203064
	[0000][ M::kt_pipeline] read 1203064 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525018, 5, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (140, 230, 912)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2456)
[0000][PE] mean and std.dev: (471.75, 527.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3228)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.21, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 326.851 CPU sec, 34.266 real sec
[0000] Calling mem_process_seqs.., task: 704
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000154, nseq: 1203156
	[0000][ M::kt_pipeline] read 1203156 sequences (180000154 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524398, 2, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 664, 1741)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4763)
[0000][PE] mean and std.dev: (808.64, 703.69)
[0000][PE] low and high boundaries for proper pairs: (1, 6274)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.06, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 1520, 2344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6522)
[0000][PE] mean and std.dev: (1397.47, 1164.77)
[0000][PE] low and high boundaries for proper pairs: (1, 8611)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203064 reads in 324.897 CPU sec, 33.887 real sec
[0000] Calling mem_process_seqs.., task: 705
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524343, 7, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 277, 382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 756)
[0000][PE] mean and std.dev: (286.62, 133.17)
[0000][PE] low and high boundaries for proper pairs: (1, 943)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.10)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 320, 1183)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3071)
[0000][PE] mean and std.dev: (636.21, 572.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4015)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203156 reads in 320.590 CPU sec, 28.803 real sec
[0000] Calling mem_process_seqs.., task: 706
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000294, nseq: 1203212
	[0000][ M::kt_pipeline] read 1203212 sequences (180000294 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524649, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 299, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2348)
[0000][PE] mean and std.dev: (462.75, 496.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3071)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.05, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (279, 365, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3333)
[0000][PE] mean and std.dev: (667.58, 501.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4351)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 333.706 CPU sec, 31.295 real sec
[0000] Calling mem_process_seqs.., task: 707
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1203064
	[0000][ M::kt_pipeline] read 1203064 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524876, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 942, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4067)
[0000][PE] mean and std.dev: (894.79, 772.03)
[0000][PE] low and high boundaries for proper pairs: (1, 5357)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.29, 63.05)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (234, 269, 1823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5001)
[0000][PE] mean and std.dev: (1006.23, 1131.07)
[0000][PE] low and high boundaries for proper pairs: (1, 6590)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203212 reads in 323.652 CPU sec, 33.702 real sec
[0000] Calling mem_process_seqs.., task: 708
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524857, 6, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.15)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (232, 332, 693)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1615)
[0000][PE] mean and std.dev: (370.50, 319.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2076)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203064 reads in 326.794 CPU sec, 29.435 real sec
[0000] Calling mem_process_seqs.., task: 709
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (35, 524772, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (206, 234, 392)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 764)
[0000][PE] mean and std.dev: (231.14, 96.28)
[0000][PE] low and high boundaries for proper pairs: (1, 950)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 292, 916)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2316)
[0000][PE] mean and std.dev: (503.20, 504.36)
[0000][PE] low and high boundaries for proper pairs: (1, 3016)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 325.032 CPU sec, 28.686 real sec
[0000] Calling mem_process_seqs.., task: 710
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 523949, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 344, 811)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2029)
[0000][PE] mean and std.dev: (479.59, 404.95)
[0000][PE] low and high boundaries for proper pairs: (1, 2638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 429, 1840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4936)
[0000][PE] mean and std.dev: (1091.56, 1216.62)
[0000][PE] low and high boundaries for proper pairs: (1, 6484)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 327.891 CPU sec, 31.630 real sec
[0000] Calling mem_process_seqs.., task: 711
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524481, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 240, 739)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1861)
[0000][PE] mean and std.dev: (439.96, 410.21)
[0000][PE] low and high boundaries for proper pairs: (1, 2422)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.12, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 365, 1190)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3224)
[0000][PE] mean and std.dev: (687.75, 730.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4241)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 334.776 CPU sec, 35.821 real sec
[0000] Calling mem_process_seqs.., task: 712
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000005, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000005 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524215, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 324, 1195)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3189)
[0000][PE] mean and std.dev: (594.61, 573.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4186)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.19, 63.13)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 324.478 CPU sec, 37.142 real sec
[0000] Calling mem_process_seqs.., task: 713
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000024, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000024 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524740, 4, 4)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 239, 1067)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2875)
[0000][PE] mean and std.dev: (496.08, 489.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.41, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 316.293 CPU sec, 37.774 real sec
[0000] Calling mem_process_seqs.., task: 714
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203030
	[0000][ M::kt_pipeline] read 1203030 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524878, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 249, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 846)
[0000][PE] mean and std.dev: (302.70, 175.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1067)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.09, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 314, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3155)
[0000][PE] mean and std.dev: (564.74, 525.29)
[0000][PE] low and high boundaries for proper pairs: (1, 4136)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 327.403 CPU sec, 33.880 real sec
[0000] Calling mem_process_seqs.., task: 715
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000247, nseq: 1203134
	[0000][ M::kt_pipeline] read 1203134 sequences (180000247 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524372, 2, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 261, 907)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2345)
[0000][PE] mean and std.dev: (471.90, 424.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3064)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 327, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3570)
[0000][PE] mean and std.dev: (853.53, 840.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203030 reads in 327.977 CPU sec, 39.411 real sec
[0000] Calling mem_process_seqs.., task: 716
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000177, nseq: 1203162
	[0000][ M::kt_pipeline] read 1203162 sequences (180000177 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524570, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 277, 1220)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (740.07, 752.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.22, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 374, 1087)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2747)
[0000][PE] mean and std.dev: (698.84, 582.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3577)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203134 reads in 333.714 CPU sec, 39.365 real sec
[0000] Calling mem_process_seqs.., task: 717
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1203060
	[0000][ M::kt_pipeline] read 1203060 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (31, 523385, 4, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 267, 935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2451)
[0000][PE] mean and std.dev: (498.03, 488.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3209)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.61, 63.10)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (282, 699, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4191)
[0000][PE] mean and std.dev: (885.67, 805.45)
[0000][PE] low and high boundaries for proper pairs: (1, 5494)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203162 reads in 359.484 CPU sec, 37.885 real sec
[0000] Calling mem_process_seqs.., task: 718
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203060
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524448, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 689, 1995)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5635)
[0000][PE] mean and std.dev: (1063.15, 1204.95)
[0000][PE] low and high boundaries for proper pairs: (1, 7455)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.02, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 697, 1031)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2619)
[0000][PE] mean and std.dev: (613.86, 423.14)
[0000][PE] low and high boundaries for proper pairs: (1, 3413)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203060 reads in 337.907 CPU sec, 30.273 real sec
[0000] Calling mem_process_seqs.., task: 719
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000001, nseq: 1203266
	[0000][ M::kt_pipeline] read 1203266 sequences (180000001 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524489, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 317, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 894)
[0000][PE] mean and std.dev: (284.87, 161.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1129)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.44, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 683, 1354)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3572)
[0000][PE] mean and std.dev: (914.81, 923.56)
[0000][PE] low and high boundaries for proper pairs: (1, 4681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 330.838 CPU sec, 33.710 real sec
[0000] Calling mem_process_seqs.., task: 720
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000187, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000187 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203266
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524779, 2, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 224, 865)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2313)
[0000][PE] mean and std.dev: (563.08, 680.42)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.53, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 264, 1049)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2711)
[0000][PE] mean and std.dev: (583.75, 586.70)
[0000][PE] low and high boundaries for proper pairs: (1, 3542)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203266 reads in 329.174 CPU sec, 34.579 real sec
[0000] Calling mem_process_seqs.., task: 721
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000138, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000138 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524750, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 303, 1003)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2605)
[0000][PE] mean and std.dev: (568.33, 461.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3406)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.38, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (398, 889, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4394)
[0000][PE] mean and std.dev: (1050.61, 815.66)
[0000][PE] low and high boundaries for proper pairs: (1, 5726)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 315.377 CPU sec, 25.401 real sec
[0000] Calling mem_process_seqs.., task: 722
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000122, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000122 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524461, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 233, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 542)
[0000][PE] mean and std.dev: (205.41, 53.96)
[0000][PE] low and high boundaries for proper pairs: (1, 666)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (168, 697, 1406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3882)
[0000][PE] mean and std.dev: (725.41, 747.98)
[0000][PE] low and high boundaries for proper pairs: (1, 5120)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 329.636 CPU sec, 31.933 real sec
[0000] Calling mem_process_seqs.., task: 723
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1203198
	[0000][ M::kt_pipeline] read 1203198 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524463, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 268, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1674)
[0000][PE] mean and std.dev: (487.58, 440.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2249)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (274, 322, 886)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2110)
[0000][PE] mean and std.dev: (557.08, 552.42)
[0000][PE] low and high boundaries for proper pairs: (1, 2767)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 332.645 CPU sec, 31.875 real sec
[0000] Calling mem_process_seqs.., task: 724
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203198
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524920, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (213, 306, 1875)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5199)
[0000][PE] mean and std.dev: (683.94, 721.58)
[0000][PE] low and high boundaries for proper pairs: (1, 6861)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.51, 63.28)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 1089, 1976)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5446)
[0000][PE] mean and std.dev: (1086.82, 846.15)
[0000][PE] low and high boundaries for proper pairs: (1, 7181)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203198 reads in 325.614 CPU sec, 35.934 real sec
[0000] Calling mem_process_seqs.., task: 725
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000129, nseq: 1203234
	[0000][ M::kt_pipeline] read 1203234 sequences (180000129 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524219, 2, 36)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (169, 267, 333)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (231.75, 89.52)
[0000][PE] low and high boundaries for proper pairs: (1, 825)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 484, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2922)
[0000][PE] mean and std.dev: (630.97, 475.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3811)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 318.539 CPU sec, 25.895 real sec
[0000] Calling mem_process_seqs.., task: 726
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000248, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000248 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524599, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (290, 587, 943)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2249)
[0000][PE] mean and std.dev: (660.93, 523.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.50, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 527, 1005)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2373)
[0000][PE] mean and std.dev: (628.94, 455.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203234 reads in 331.045 CPU sec, 35.234 real sec
[0000] Calling mem_process_seqs.., task: 727
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000048, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524646, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 260, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (329.09, 206.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1961)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.58, 63.30)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 437, 1379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3665)
[0000][PE] mean and std.dev: (730.00, 606.11)
[0000][PE] low and high boundaries for proper pairs: (1, 4808)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 330.332 CPU sec, 35.332 real sec
[0000] Calling mem_process_seqs.., task: 728
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000275, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000275 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525037, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 280, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2131)
[0000][PE] mean and std.dev: (312.00, 229.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2788)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.31, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 397, 964)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2422)
[0000][PE] mean and std.dev: (628.85, 493.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 313.010 CPU sec, 29.077 real sec
[0000] Calling mem_process_seqs.., task: 729
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1203276
	[0000][ M::kt_pipeline] read 1203276 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525057, 7, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (232, 273, 364)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 628)
[0000][PE] mean and std.dev: (248.38, 85.68)
[0000][PE] low and high boundaries for proper pairs: (1, 760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.60, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (235, 266, 828)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2014)
[0000][PE] mean and std.dev: (453.75, 351.32)
[0000][PE] low and high boundaries for proper pairs: (1, 2607)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 317.337 CPU sec, 26.885 real sec
[0000] Calling mem_process_seqs.., task: 730
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000158, nseq: 1203184
	[0000][ M::kt_pipeline] read 1203184 sequences (180000158 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524772, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 566, 1295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3483)
[0000][PE] mean and std.dev: (803.83, 838.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4577)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.24, 63.06)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (295, 355, 1196)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2998)
[0000][PE] mean and std.dev: (682.38, 507.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3899)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203276 reads in 320.653 CPU sec, 32.334 real sec
[0000] Calling mem_process_seqs.., task: 731
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524534, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 348, 954)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2488)
[0000][PE] mean and std.dev: (528.08, 506.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3255)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.79, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (298, 764, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (766.61, 553.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203184 reads in 318.373 CPU sec, 29.339 real sec
[0000] Calling mem_process_seqs.., task: 732
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000221, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000221 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524503, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (230, 270, 1109)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2867)
[0000][PE] mean and std.dev: (684.62, 762.51)
[0000][PE] low and high boundaries for proper pairs: (1, 3746)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (453, 612, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1710)
[0000][PE] mean and std.dev: (583.30, 325.37)
[0000][PE] low and high boundaries for proper pairs: (1, 2129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 324.240 CPU sec, 34.990 real sec
[0000] Calling mem_process_seqs.., task: 733
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000258, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000258 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524866, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 215, 309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 661)
[0000][PE] mean and std.dev: (210.81, 103.69)
[0000][PE] low and high boundaries for proper pairs: (1, 837)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.47, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 297, 1549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4217)
[0000][PE] mean and std.dev: (752.33, 879.34)
[0000][PE] low and high boundaries for proper pairs: (1, 5551)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 320.279 CPU sec, 35.609 real sec
[0000] Calling mem_process_seqs.., task: 734
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000016, nseq: 1203156
	[0000][ M::kt_pipeline] read 1203156 sequences (180000016 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524656, 4, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 222, 649)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1561)
[0000][PE] mean and std.dev: (396.50, 382.86)
[0000][PE] low and high boundaries for proper pairs: (1, 2017)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.37, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (150, 290, 428)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 984)
[0000][PE] mean and std.dev: (241.75, 119.43)
[0000][PE] low and high boundaries for proper pairs: (1, 1262)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 318.681 CPU sec, 27.467 real sec
[0000] Calling mem_process_seqs.., task: 735
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000149, nseq: 1203188
	[0000][ M::kt_pipeline] read 1203188 sequences (180000149 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203156
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525091, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 267, 648)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1580)
[0000][PE] mean and std.dev: (369.75, 244.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2046)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.67, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (311, 435, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2333)
[0000][PE] mean and std.dev: (549.47, 343.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203156 reads in 319.868 CPU sec, 38.517 real sec
[0000] Calling mem_process_seqs.., task: 736
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203100
	[0000][ M::kt_pipeline] read 1203100 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524560, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 249, 859)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2139)
[0000][PE] mean and std.dev: (483.85, 451.25)
[0000][PE] low and high boundaries for proper pairs: (1, 2779)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.60, 63.32)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 703, 1381)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3621)
[0000][PE] mean and std.dev: (878.11, 901.37)
[0000][PE] low and high boundaries for proper pairs: (1, 4741)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203188 reads in 320.617 CPU sec, 32.143 real sec
[0000] Calling mem_process_seqs.., task: 737
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000254, nseq: 1203302
	[0000][ M::kt_pipeline] read 1203302 sequences (180000254 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203100
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525155, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 212, 256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 450)
[0000][PE] mean and std.dev: (186.00, 43.14)
[0000][PE] low and high boundaries for proper pairs: (1, 547)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.69, 63.33)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (303, 821, 1451)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3747)
[0000][PE] mean and std.dev: (823.19, 594.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4895)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203100 reads in 308.710 CPU sec, 27.590 real sec
[0000] Calling mem_process_seqs.., task: 738
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203302
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524593, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 240, 1053)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2805)
[0000][PE] mean and std.dev: (555.31, 549.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3681)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.61, 63.38)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 256, 1083)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2831)
[0000][PE] mean and std.dev: (708.15, 706.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3705)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203302 reads in 328.417 CPU sec, 39.048 real sec
[0000] Calling mem_process_seqs.., task: 739
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000223, nseq: 1203398
	[0000][ M::kt_pipeline] read 1203398 sequences (180000223 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524767, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 271, 555)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1271)
[0000][PE] mean and std.dev: (334.73, 247.84)
[0000][PE] low and high boundaries for proper pairs: (1, 1629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (284, 606, 2059)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5609)
[0000][PE] mean and std.dev: (1263.38, 1343.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 318.014 CPU sec, 34.513 real sec
[0000] Calling mem_process_seqs.., task: 740
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000061, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203398
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524811, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 313, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (608.88, 509.18)
[0000][PE] low and high boundaries for proper pairs: (1, 4132)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.58, 63.39)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 364, 879)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2201)
[0000][PE] mean and std.dev: (556.38, 438.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2862)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203398 reads in 322.002 CPU sec, 35.402 real sec
[0000] Calling mem_process_seqs.., task: 741
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203110
	[0000][ M::kt_pipeline] read 1203110 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524477, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 275, 2295)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6555)
[0000][PE] mean and std.dev: (892.29, 1178.47)
[0000][PE] low and high boundaries for proper pairs: (1, 8685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.39, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (257, 379, 1025)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2561)
[0000][PE] mean and std.dev: (491.00, 380.08)
[0000][PE] low and high boundaries for proper pairs: (1, 3329)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 313.568 CPU sec, 28.216 real sec
[0000] Calling mem_process_seqs.., task: 742
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000166, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000166 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203110
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525269, 6, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 308, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3129)
[0000][PE] mean and std.dev: (553.56, 691.10)
[0000][PE] low and high boundaries for proper pairs: (1, 4114)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.80, 63.40)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (247, 759, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2704)
[0000][PE] mean and std.dev: (728.11, 616.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3523)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203110 reads in 322.762 CPU sec, 34.549 real sec
[0000] Calling mem_process_seqs.., task: 743
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000282, nseq: 1203270
	[0000][ M::kt_pipeline] read 1203270 sequences (180000282 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524673, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 937, 1724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4638)
[0000][PE] mean and std.dev: (939.58, 846.19)
[0000][PE] low and high boundaries for proper pairs: (1, 6095)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.61, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 250, 655)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1575)
[0000][PE] mean and std.dev: (326.42, 226.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2035)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 316.196 CPU sec, 30.371 real sec
[0000] Calling mem_process_seqs.., task: 744
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000234, nseq: 1203202
	[0000][ M::kt_pipeline] read 1203202 sequences (180000234 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203270
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524960, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 296, 756)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1886)
[0000][PE] mean and std.dev: (460.00, 383.47)
[0000][PE] low and high boundaries for proper pairs: (1, 2451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.69, 63.38)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 506, 1348)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3538)
[0000][PE] mean and std.dev: (725.75, 811.53)
[0000][PE] low and high boundaries for proper pairs: (1, 4633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203270 reads in 326.246 CPU sec, 35.087 real sec
[0000] Calling mem_process_seqs.., task: 745
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524907, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 383, 1985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5443)
[0000][PE] mean and std.dev: (974.00, 946.08)
[0000][PE] low and high boundaries for proper pairs: (1, 7172)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.71, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 600, 1946)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5442)
[0000][PE] mean and std.dev: (996.30, 970.71)
[0000][PE] low and high boundaries for proper pairs: (1, 7190)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203202 reads in 315.889 CPU sec, 32.483 real sec
[0000] Calling mem_process_seqs.., task: 746
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203226
	[0000][ M::kt_pipeline] read 1203226 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525010, 1, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 229, 281)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 557)
[0000][PE] mean and std.dev: (212.06, 92.37)
[0000][PE] low and high boundaries for proper pairs: (1, 695)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.66, 63.30)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 325.681 CPU sec, 35.209 real sec
[0000] Calling mem_process_seqs.., task: 747
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203182
	[0000][ M::kt_pipeline] read 1203182 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524510, 7, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (153, 231, 872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2310)
[0000][PE] mean and std.dev: (368.85, 433.18)
[0000][PE] low and high boundaries for proper pairs: (1, 3029)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.64, 63.44)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 281, 565)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1319)
[0000][PE] mean and std.dev: (354.11, 247.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1696)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203226 reads in 329.245 CPU sec, 38.370 real sec
[0000] Calling mem_process_seqs.., task: 748
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000184, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000184 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524608, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 240, 298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 594)
[0000][PE] mean and std.dev: (207.73, 70.62)
[0000][PE] low and high boundaries for proper pairs: (1, 742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.69, 63.52)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 843, 1117)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2801)
[0000][PE] mean and std.dev: (666.05, 590.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3643)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203182 reads in 330.893 CPU sec, 38.456 real sec
[0000] Calling mem_process_seqs.., task: 749
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203252
	[0000][ M::kt_pipeline] read 1203252 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524555, 2, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 675, 1585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4351)
[0000][PE] mean and std.dev: (773.93, 656.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5734)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.51)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (289, 878, 1114)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2764)
[0000][PE] mean and std.dev: (735.63, 444.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3589)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 323.462 CPU sec, 38.604 real sec
[0000] Calling mem_process_seqs.., task: 750
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000183, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000183 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524740, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (196, 329, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2563)
[0000][PE] mean and std.dev: (618.11, 592.04)
[0000][PE] low and high boundaries for proper pairs: (1, 3352)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.64, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 954, 2113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5823)
[0000][PE] mean and std.dev: (1131.17, 1005.60)
[0000][PE] low and high boundaries for proper pairs: (1, 7678)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203252 reads in 322.479 CPU sec, 35.243 real sec
[0000] Calling mem_process_seqs.., task: 751
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524781, 5, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 389, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2772)
[0000][PE] mean and std.dev: (664.00, 674.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3623)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.54, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 561, 1691)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4625)
[0000][PE] mean and std.dev: (1009.36, 1013.79)
[0000][PE] low and high boundaries for proper pairs: (1, 6092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 317.964 CPU sec, 33.053 real sec
[0000] Calling mem_process_seqs.., task: 752
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000108, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524758, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 285, 466)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 968)
[0000][PE] mean and std.dev: (256.33, 111.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.59, 63.53)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (152, 430, 897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2387)
[0000][PE] mean and std.dev: (467.00, 401.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 318.003 CPU sec, 29.322 real sec
[0000] Calling mem_process_seqs.., task: 753
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203340
	[0000][ M::kt_pipeline] read 1203340 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (25, 524939, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 339, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2810)
[0000][PE] mean and std.dev: (573.87, 607.59)
[0000][PE] low and high boundaries for proper pairs: (1, 3679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.59)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 370, 789)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1811)
[0000][PE] mean and std.dev: (557.79, 400.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2322)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 313.511 CPU sec, 34.115 real sec
[0000] Calling mem_process_seqs.., task: 754
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1203038
	[0000][ M::kt_pipeline] read 1203038 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203340
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524837, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 217, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4015)
[0000][PE] mean and std.dev: (826.25, 1131.22)
[0000][PE] low and high boundaries for proper pairs: (1, 5351)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.49, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (190, 378, 951)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2473)
[0000][PE] mean and std.dev: (629.89, 520.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3234)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203340 reads in 327.055 CPU sec, 36.537 real sec
[0000] Calling mem_process_seqs.., task: 755
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203038
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (30, 524326, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 247, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 934)
[0000][PE] mean and std.dev: (271.00, 166.99)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.34, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 341, 1000)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2534)
[0000][PE] mean and std.dev: (671.17, 551.50)
[0000][PE] low and high boundaries for proper pairs: (1, 3301)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203038 reads in 320.540 CPU sec, 36.437 real sec
[0000] Calling mem_process_seqs.., task: 756
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000014, nseq: 1203246
	[0000][ M::kt_pipeline] read 1203246 sequences (180000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524896, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (256, 478, 1504)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4000)
[0000][PE] mean and std.dev: (883.00, 1019.26)
[0000][PE] low and high boundaries for proper pairs: (1, 5248)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 329, 1219)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3111)
[0000][PE] mean and std.dev: (733.33, 645.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 309.530 CPU sec, 32.028 real sec
[0000] Calling mem_process_seqs.., task: 757
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203246
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525283, 8, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (156, 217, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1167)
[0000][PE] mean and std.dev: (300.88, 240.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1504)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.24, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (182, 266, 460)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1016)
[0000][PE] mean and std.dev: (276.50, 136.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1294)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203246 reads in 324.314 CPU sec, 37.597 real sec
[0000] Calling mem_process_seqs.., task: 758
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524721, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 196, 537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1311)
[0000][PE] mean and std.dev: (297.55, 223.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1698)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 360, 1400)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3784)
[0000][PE] mean and std.dev: (793.12, 724.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4976)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 326.911 CPU sec, 41.006 real sec
[0000] Calling mem_process_seqs.., task: 759
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1203252
	[0000][ M::kt_pipeline] read 1203252 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524700, 6, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (123, 177, 269)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 561)
[0000][PE] mean and std.dev: (158.40, 64.40)
[0000][PE] low and high boundaries for proper pairs: (1, 707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.47, 63.44)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 418, 860)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2020)
[0000][PE] mean and std.dev: (444.27, 285.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2600)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 320.035 CPU sec, 35.118 real sec
[0000] Calling mem_process_seqs.., task: 760
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203252
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524453, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 244, 1007)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2615)
[0000][PE] mean and std.dev: (538.29, 453.00)
[0000][PE] low and high boundaries for proper pairs: (1, 3419)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.43, 63.34)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 374, 1254)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3322)
[0000][PE] mean and std.dev: (740.32, 622.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203252 reads in 316.457 CPU sec, 34.868 real sec
[0000] Calling mem_process_seqs.., task: 761
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000111, nseq: 1203132
	[0000][ M::kt_pipeline] read 1203132 sequences (180000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524844, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (298, 833, 1935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5209)
[0000][PE] mean and std.dev: (1252.43, 1372.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6846)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (222, 573, 1692)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4632)
[0000][PE] mean and std.dev: (1117.53, 1352.35)
[0000][PE] low and high boundaries for proper pairs: (1, 6527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 317.257 CPU sec, 29.742 real sec
[0000] Calling mem_process_seqs.., task: 762
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000286, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000286 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524923, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 258, 385)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 791)
[0000][PE] mean and std.dev: (286.71, 180.40)
[0000][PE] low and high boundaries for proper pairs: (1, 1008)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.31, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (270, 300, 1719)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4617)
[0000][PE] mean and std.dev: (751.71, 802.50)
[0000][PE] low and high boundaries for proper pairs: (1, 6066)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203132 reads in 310.078 CPU sec, 25.136 real sec
[0000] Calling mem_process_seqs.., task: 763
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000083, nseq: 1203194
	[0000][ M::kt_pipeline] read 1203194 sequences (180000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524989, 3, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 254, 268)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 536)
[0000][PE] mean and std.dev: (191.56, 70.58)
[0000][PE] low and high boundaries for proper pairs: (1, 670)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.19, 63.38)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (157, 295, 784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2038)
[0000][PE] mean and std.dev: (516.31, 404.65)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 324.076 CPU sec, 30.388 real sec
[0000] Calling mem_process_seqs.., task: 764
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203194
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524765, 7, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (118, 274, 510)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1294)
[0000][PE] mean and std.dev: (227.73, 131.96)
[0000][PE] low and high boundaries for proper pairs: (1, 1686)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.12, 63.43)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (197, 353, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2756)
[0000][PE] mean and std.dev: (489.08, 346.53)
[0000][PE] low and high boundaries for proper pairs: (1, 3609)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203194 reads in 314.691 CPU sec, 22.842 real sec
[0000] Calling mem_process_seqs.., task: 765
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203240
	[0000][ M::kt_pipeline] read 1203240 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (10, 524808, 4, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 250, 639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1533)
[0000][PE] mean and std.dev: (450.00, 369.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1980)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.39)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (244, 358, 1140)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2932)
[0000][PE] mean and std.dev: (626.55, 587.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3828)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 322.533 CPU sec, 31.748 real sec
[0000] Calling mem_process_seqs.., task: 766
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000226, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000226 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203240
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524569, 10, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 248, 735)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1847)
[0000][PE] mean and std.dev: (408.06, 431.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2403)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (323, 850, 850)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1904)
[0000][PE] mean and std.dev: (531.75, 304.40)
[0000][PE] low and high boundaries for proper pairs: (1, 2431)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 907, 2569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7231)
[0000][PE] mean and std.dev: (1501.14, 1432.90)
[0000][PE] low and high boundaries for proper pairs: (1, 9562)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203240 reads in 325.908 CPU sec, 28.311 real sec
[0000] Calling mem_process_seqs.., task: 767
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000120, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000120 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 525001, 4, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 256, 794)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1952)
[0000][PE] mean and std.dev: (486.67, 381.20)
[0000][PE] low and high boundaries for proper pairs: (1, 2531)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.37)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 326, 1189)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3101)
[0000][PE] mean and std.dev: (656.14, 603.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4057)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 317.356 CPU sec, 24.227 real sec
[0000] Calling mem_process_seqs.., task: 768
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000244, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000244 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524974, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (177, 305, 767)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1947)
[0000][PE] mean and std.dev: (401.74, 338.69)
[0000][PE] low and high boundaries for proper pairs: (1, 2537)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.17, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (318, 817, 1825)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4839)
[0000][PE] mean and std.dev: (1256.95, 1312.52)
[0000][PE] low and high boundaries for proper pairs: (1, 6507)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 308.115 CPU sec, 20.541 real sec
[0000] Calling mem_process_seqs.., task: 769
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203286
	[0000][ M::kt_pipeline] read 1203286 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524926, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 253, 484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1072)
[0000][PE] mean and std.dev: (237.94, 127.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1366)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.30)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (262, 295, 989)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2443)
[0000][PE] mean and std.dev: (607.71, 567.44)
[0000][PE] low and high boundaries for proper pairs: (1, 3170)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 317.868 CPU sec, 23.471 real sec
[0000] Calling mem_process_seqs.., task: 770
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000224, nseq: 1203208
	[0000][ M::kt_pipeline] read 1203208 sequences (180000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203286
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524917, 0, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 343, 1321)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3585)
[0000][PE] mean and std.dev: (866.55, 929.25)
[0000][PE] low and high boundaries for proper pairs: (1, 4717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.27, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (215, 757, 1239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3287)
[0000][PE] mean and std.dev: (681.89, 496.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4311)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203286 reads in 328.092 CPU sec, 27.028 real sec
[0000] Calling mem_process_seqs.., task: 771
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000090, nseq: 1203238
	[0000][ M::kt_pipeline] read 1203238 sequences (180000090 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 525046, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (95, 163, 339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 827)
[0000][PE] mean and std.dev: (244.87, 210.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1087)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.16, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 254, 878)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2198)
[0000][PE] mean and std.dev: (419.47, 364.50)
[0000][PE] low and high boundaries for proper pairs: (1, 2858)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203208 reads in 326.958 CPU sec, 27.640 real sec
[0000] Calling mem_process_seqs.., task: 772
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000082, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524679, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 336, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3141)
[0000][PE] mean and std.dev: (656.13, 723.69)
[0000][PE] low and high boundaries for proper pairs: (1, 4115)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 213, 651)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1621)
[0000][PE] mean and std.dev: (376.88, 358.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2106)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203238 reads in 325.402 CPU sec, 24.254 real sec
[0000] Calling mem_process_seqs.., task: 773
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000025, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000025 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524506, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 332, 1323)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3541)
[0000][PE] mean and std.dev: (732.00, 683.70)
[0000][PE] low and high boundaries for proper pairs: (1, 4650)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (176, 283, 336)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 656)
[0000][PE] mean and std.dev: (241.05, 77.96)
[0000][PE] low and high boundaries for proper pairs: (1, 816)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 327.176 CPU sec, 27.153 real sec
[0000] Calling mem_process_seqs.., task: 774
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000170, nseq: 1203134
	[0000][ M::kt_pipeline] read 1203134 sequences (180000170 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524476, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 266, 1365)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3723)
[0000][PE] mean and std.dev: (575.00, 675.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4902)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.09, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (287, 387, 1488)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3890)
[0000][PE] mean and std.dev: (832.20, 817.13)
[0000][PE] low and high boundaries for proper pairs: (1, 5091)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 314.365 CPU sec, 21.905 real sec
[0000] Calling mem_process_seqs.., task: 775
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000265, nseq: 1203146
	[0000][ M::kt_pipeline] read 1203146 sequences (180000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524651, 7, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (225, 276, 623)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1419)
[0000][PE] mean and std.dev: (373.21, 263.30)
[0000][PE] low and high boundaries for proper pairs: (1, 1817)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.38)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203134 reads in 328.824 CPU sec, 28.903 real sec
[0000] Calling mem_process_seqs.., task: 776
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000007, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000007 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203146
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524538, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (219, 258, 818)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2016)
[0000][PE] mean and std.dev: (433.20, 423.12)
[0000][PE] low and high boundaries for proper pairs: (1, 2615)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.15)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (252, 793, 1857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5067)
[0000][PE] mean and std.dev: (790.14, 664.92)
[0000][PE] low and high boundaries for proper pairs: (1, 6672)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203146 reads in 336.395 CPU sec, 24.906 real sec
[0000] Calling mem_process_seqs.., task: 777
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000003, nseq: 1203094
	[0000][ M::kt_pipeline] read 1203094 sequences (180000003 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 524122, 2, 19)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.38, 63.03)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (334, 847, 1543)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3961)
[0000][PE] mean and std.dev: (910.29, 841.21)
[0000][PE] low and high boundaries for proper pairs: (1, 5170)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 347.304 CPU sec, 29.987 real sec
[0000] Calling mem_process_seqs.., task: 778
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000021, nseq: 1203144
	[0000][ M::kt_pipeline] read 1203144 sequences (180000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203094
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524029, 6, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 320, 925)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2355)
[0000][PE] mean and std.dev: (543.74, 525.11)
[0000][PE] low and high boundaries for proper pairs: (1, 3070)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.16, 62.97)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (158, 225, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 566)
[0000][PE] mean and std.dev: (212.25, 66.92)
[0000][PE] low and high boundaries for proper pairs: (1, 702)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203094 reads in 351.977 CPU sec, 30.600 real sec
[0000] Calling mem_process_seqs.., task: 779
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000203, nseq: 1203138
	[0000][ M::kt_pipeline] read 1203138 sequences (180000203 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203144
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 523888, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 240, 668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1610)
[0000][PE] mean and std.dev: (373.58, 232.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2081)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.21)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (198, 353, 820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2064)
[0000][PE] mean and std.dev: (475.39, 365.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2686)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203144 reads in 340.398 CPU sec, 23.599 real sec
[0000] Calling mem_process_seqs.., task: 780
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000259, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000259 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203138
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524731, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 682, 1048)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2860)
[0000][PE] mean and std.dev: (662.07, 634.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.39, 62.99)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 251, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1850)
[0000][PE] mean and std.dev: (458.41, 402.46)
[0000][PE] low and high boundaries for proper pairs: (1, 2394)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203138 reads in 333.691 CPU sec, 29.817 real sec
[0000] Calling mem_process_seqs.., task: 781
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000270, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000270 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 524439, 1, 16)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.09)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 368, 1177)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3091)
[0000][PE] mean and std.dev: (580.60, 541.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4048)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 331.849 CPU sec, 25.299 real sec
[0000] Calling mem_process_seqs.., task: 782
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000232, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524281, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (189, 234, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2406)
[0000][PE] mean and std.dev: (446.56, 496.48)
[0000][PE] low and high boundaries for proper pairs: (1, 3145)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.02, 63.10)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (213, 377, 1024)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2646)
[0000][PE] mean and std.dev: (635.43, 668.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3457)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 329.358 CPU sec, 27.411 real sec
[0000] Calling mem_process_seqs.., task: 783
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000102, nseq: 1203200
	[0000][ M::kt_pipeline] read 1203200 sequences (180000102 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524603, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (159, 288, 1071)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2895)
[0000][PE] mean and std.dev: (519.07, 503.91)
[0000][PE] low and high boundaries for proper pairs: (1, 3807)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.09, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 380, 1014)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2570)
[0000][PE] mean and std.dev: (628.65, 566.97)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 322.307 CPU sec, 21.970 real sec
[0000] Calling mem_process_seqs.., task: 784
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524948, 5, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 407, 962)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (579.67, 666.54)
[0000][PE] low and high boundaries for proper pairs: (1, 3362)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.10, 63.02)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 488, 1837)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5039)
[0000][PE] mean and std.dev: (934.21, 1030.87)
[0000][PE] low and high boundaries for proper pairs: (1, 6640)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203200 reads in 325.384 CPU sec, 27.640 real sec
[0000] Calling mem_process_seqs.., task: 785
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000010, nseq: 1203256
	[0000][ M::kt_pipeline] read 1203256 sequences (180000010 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524838, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 259, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1480)
[0000][PE] mean and std.dev: (349.35, 287.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1909)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.04, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 334, 1006)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2594)
[0000][PE] mean and std.dev: (545.35, 405.98)
[0000][PE] low and high boundaries for proper pairs: (1, 3388)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 325.733 CPU sec, 24.753 real sec
[0000] Calling mem_process_seqs.., task: 786
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000029, nseq: 1203188
	[0000][ M::kt_pipeline] read 1203188 sequences (180000029 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524515, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (106, 215, 252)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 544)
[0000][PE] mean and std.dev: (167.69, 82.11)
[0000][PE] low and high boundaries for proper pairs: (1, 690)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.22, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 270, 924)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2382)
[0000][PE] mean and std.dev: (469.27, 403.90)
[0000][PE] low and high boundaries for proper pairs: (1, 3111)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203256 reads in 322.888 CPU sec, 23.411 real sec
[0000] Calling mem_process_seqs.., task: 787
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203188
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524579, 4, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 190, 752)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1990)
[0000][PE] mean and std.dev: (223.50, 167.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2609)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.33, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203188 reads in 326.033 CPU sec, 30.595 real sec
[0000] Calling mem_process_seqs.., task: 788
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000161, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000161 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524680, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (145, 222, 288)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 574)
[0000][PE] mean and std.dev: (199.67, 78.84)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.06, 63.11)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (204, 355, 709)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1719)
[0000][PE] mean and std.dev: (423.84, 334.88)
[0000][PE] low and high boundaries for proper pairs: (1, 2224)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 318.738 CPU sec, 21.875 real sec
[0000] Calling mem_process_seqs.., task: 789
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000243, nseq: 1203104
	[0000][ M::kt_pipeline] read 1203104 sequences (180000243 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524378, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (244, 245, 542)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1138)
[0000][PE] mean and std.dev: (274.00, 114.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1436)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.18)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (358, 914, 1668)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4288)
[0000][PE] mean and std.dev: (1057.29, 737.94)
[0000][PE] low and high boundaries for proper pairs: (1, 5598)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 331.695 CPU sec, 27.297 real sec
[0000] Calling mem_process_seqs.., task: 790
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000278, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203104
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525056, 7, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 304, 985)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2629)
[0000][PE] mean and std.dev: (507.00, 551.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3451)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.11, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 373, 1026)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (621.00, 639.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3540)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203104 reads in 328.448 CPU sec, 23.006 real sec
[0000] Calling mem_process_seqs.., task: 791
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203092
	[0000][ M::kt_pipeline] read 1203092 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524707, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 260, 937)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2413)
[0000][PE] mean and std.dev: (473.85, 475.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3151)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.22)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (273, 785, 1113)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2793)
[0000][PE] mean and std.dev: (802.92, 686.41)
[0000][PE] low and high boundaries for proper pairs: (1, 3633)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 322.604 CPU sec, 26.142 real sec
[0000] Calling mem_process_seqs.., task: 792
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000062, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203092
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524934, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 364, 1061)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2759)
[0000][PE] mean and std.dev: (748.32, 708.87)
[0000][PE] low and high boundaries for proper pairs: (1, 3608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.25)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (388, 921, 1356)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (675.64, 359.67)
[0000][PE] low and high boundaries for proper pairs: (1, 4260)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203092 reads in 320.690 CPU sec, 22.246 real sec
[0000] Calling mem_process_seqs.., task: 793
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000190, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000190 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524878, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 286, 362)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 682)
[0000][PE] mean and std.dev: (264.56, 118.62)
[0000][PE] low and high boundaries for proper pairs: (1, 842)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.18, 63.12)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (263, 682, 1101)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (646.95, 459.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3615)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 318.860 CPU sec, 25.710 real sec
[0000] Calling mem_process_seqs.., task: 794
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524725, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (205, 409, 1208)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3214)
[0000][PE] mean and std.dev: (585.27, 589.99)
[0000][PE] low and high boundaries for proper pairs: (1, 4217)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.33, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 728, 2411)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6721)
[0000][PE] mean and std.dev: (1075.76, 981.58)
[0000][PE] low and high boundaries for proper pairs: (1, 8876)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 320.061 CPU sec, 21.334 real sec
[0000] Calling mem_process_seqs.., task: 795
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524291, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 238, 549)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1249)
[0000][PE] mean and std.dev: (293.92, 177.31)
[0000][PE] low and high boundaries for proper pairs: (1, 1599)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.10)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 298, 1193)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3049)
[0000][PE] mean and std.dev: (482.50, 476.49)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 321.870 CPU sec, 22.980 real sec
[0000] Calling mem_process_seqs.., task: 796
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1203128
	[0000][ M::kt_pipeline] read 1203128 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524607, 2, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (239, 431, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2063)
[0000][PE] mean and std.dev: (548.29, 349.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2671)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 364, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2127)
[0000][PE] mean and std.dev: (578.17, 487.03)
[0000][PE] low and high boundaries for proper pairs: (1, 2736)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 313.135 CPU sec, 21.732 real sec
[0000] Calling mem_process_seqs.., task: 797
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000068, nseq: 1203290
	[0000][ M::kt_pipeline] read 1203290 sequences (180000068 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203128
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524560, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 320, 969)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2513)
[0000][PE] mean and std.dev: (594.24, 539.58)
[0000][PE] low and high boundaries for proper pairs: (1, 3285)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.26, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 220, 1122)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (646.27, 625.72)
[0000][PE] low and high boundaries for proper pairs: (1, 3870)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203128 reads in 320.198 CPU sec, 25.095 real sec
[0000] Calling mem_process_seqs.., task: 798
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203050
	[0000][ M::kt_pipeline] read 1203050 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524427, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (201, 253, 992)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2574)
[0000][PE] mean and std.dev: (439.71, 375.37)
[0000][PE] low and high boundaries for proper pairs: (1, 3365)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.31, 63.16)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (275, 1072, 1416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3698)
[0000][PE] mean and std.dev: (911.14, 742.26)
[0000][PE] low and high boundaries for proper pairs: (1, 4839)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203290 reads in 322.602 CPU sec, 25.304 real sec
[0000] Calling mem_process_seqs.., task: 799
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000257, nseq: 1203058
	[0000][ M::kt_pipeline] read 1203058 sequences (180000257 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203050
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524292, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 293, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2379)
[0000][PE] mean and std.dev: (485.41, 423.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3122)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.17, 63.13)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (387, 414, 961)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2109)
[0000][PE] mean and std.dev: (722.82, 492.57)
[0000][PE] low and high boundaries for proper pairs: (1, 2693)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203050 reads in 313.508 CPU sec, 22.477 real sec
[0000] Calling mem_process_seqs.., task: 800
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000050, nseq: 1203232
	[0000][ M::kt_pipeline] read 1203232 sequences (180000050 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203058
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525013, 4, 8)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 303, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1899)
[0000][PE] mean and std.dev: (390.50, 313.38)
[0000][PE] low and high boundaries for proper pairs: (1, 2472)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.05, 63.14)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203058 reads in 327.963 CPU sec, 29.322 real sec
[0000] Calling mem_process_seqs.., task: 801
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000256, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000256 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203232
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524580, 7, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 209, 615)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1515)
[0000][PE] mean and std.dev: (334.70, 283.50)
[0000][PE] low and high boundaries for proper pairs: (1, 1965)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (162, 355, 5935)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 17481)
[0000][PE] mean and std.dev: (2388.90, 2956.64)
[0000][PE] low and high boundaries for proper pairs: (1, 23254)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203232 reads in 325.422 CPU sec, 25.808 real sec
[0000] Calling mem_process_seqs.., task: 802
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000246, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000246 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524433, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (245, 286, 1492)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3986)
[0000][PE] mean and std.dev: (759.08, 726.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5233)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.17, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (364, 1039, 1747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4513)
[0000][PE] mean and std.dev: (1217.09, 960.67)
[0000][PE] low and high boundaries for proper pairs: (1, 5896)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 328.494 CPU sec, 27.396 real sec
[0000] Calling mem_process_seqs.., task: 803
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524017, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 257, 1022)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2812)
[0000][PE] mean and std.dev: (366.37, 376.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3707)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.35, 63.21)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 291, 1537)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4111)
[0000][PE] mean and std.dev: (599.00, 621.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5398)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 339.790 CPU sec, 29.625 real sec
[0000] Calling mem_process_seqs.., task: 804
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000126, nseq: 1203122
	[0000][ M::kt_pipeline] read 1203122 sequences (180000126 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524671, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 420, 913)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2317)
[0000][PE] mean and std.dev: (525.93, 454.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3019)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.45, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (278, 366, 1227)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3125)
[0000][PE] mean and std.dev: (703.21, 697.60)
[0000][PE] low and high boundaries for proper pairs: (1, 4074)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 332.426 CPU sec, 32.231 real sec
[0000] Calling mem_process_seqs.., task: 805
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000123, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524483, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 217, 449)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1093)
[0000][PE] mean and std.dev: (302.93, 245.05)
[0000][PE] low and high boundaries for proper pairs: (1, 1415)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.29, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 500, 1163)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2871)
[0000][PE] mean and std.dev: (678.14, 479.22)
[0000][PE] low and high boundaries for proper pairs: (1, 3725)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203122 reads in 323.922 CPU sec, 28.181 real sec
[0000] Calling mem_process_seqs.., task: 806
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000100, nseq: 1203168
	[0000][ M::kt_pipeline] read 1203168 sequences (180000100 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524623, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 240, 499)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1145)
[0000][PE] mean and std.dev: (276.60, 221.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1468)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.09)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 296, 599)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1287)
[0000][PE] mean and std.dev: (413.43, 238.67)
[0000][PE] low and high boundaries for proper pairs: (1, 1631)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 327.252 CPU sec, 26.215 real sec
[0000] Calling mem_process_seqs.., task: 807
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1203230
	[0000][ M::kt_pipeline] read 1203230 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203168
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524611, 1, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 256, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1010)
[0000][PE] mean and std.dev: (298.00, 219.75)
[0000][PE] low and high boundaries for proper pairs: (1, 1284)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.19, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 341, 1487)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4085)
[0000][PE] mean and std.dev: (752.15, 735.79)
[0000][PE] low and high boundaries for proper pairs: (1, 5384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203168 reads in 329.709 CPU sec, 28.574 real sec
[0000] Calling mem_process_seqs.., task: 808
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000194, nseq: 1203134
	[0000][ M::kt_pipeline] read 1203134 sequences (180000194 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524858, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (208, 938, 2462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6970)
[0000][PE] mean and std.dev: (1123.00, 1061.81)
[0000][PE] low and high boundaries for proper pairs: (1, 9224)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.42)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (253, 345, 3200)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9094)
[0000][PE] mean and std.dev: (1273.38, 1520.83)
[0000][PE] low and high boundaries for proper pairs: (1, 12041)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203230 reads in 314.979 CPU sec, 23.255 real sec
[0000] Calling mem_process_seqs.., task: 809
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000106, nseq: 1203262
	[0000][ M::kt_pipeline] read 1203262 sequences (180000106 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203134
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524644, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (183, 232, 1207)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3255)
[0000][PE] mean and std.dev: (574.69, 604.00)
[0000][PE] low and high boundaries for proper pairs: (1, 4279)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.65, 63.44)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 306, 1070)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2824)
[0000][PE] mean and std.dev: (635.32, 572.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3701)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203134 reads in 322.664 CPU sec, 24.206 real sec
[0000] Calling mem_process_seqs.., task: 810
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000148, nseq: 1203182
	[0000][ M::kt_pipeline] read 1203182 sequences (180000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203262
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524946, 10, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (186, 299, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2562)
[0000][PE] mean and std.dev: (513.33, 530.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3354)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.46, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (175, 1191, 2416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6898)
[0000][PE] mean and std.dev: (1538.80, 1787.86)
[0000][PE] low and high boundaries for proper pairs: (1, 9139)
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (309, 1349, 2103)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5691)
[0000][PE] mean and std.dev: (1136.69, 898.85)
[0000][PE] low and high boundaries for proper pairs: (1, 7485)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203262 reads in 312.429 CPU sec, 25.295 real sec
[0000] Calling mem_process_seqs.., task: 811
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000202, nseq: 1203218
	[0000][ M::kt_pipeline] read 1203218 sequences (180000202 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203182
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524592, 1, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 287, 740)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1932)
[0000][PE] mean and std.dev: (456.69, 409.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2528)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.64, 63.47)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 704, 1246)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3292)
[0000][PE] mean and std.dev: (801.19, 729.92)
[0000][PE] low and high boundaries for proper pairs: (1, 4315)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203182 reads in 312.969 CPU sec, 22.195 real sec
[0000] Calling mem_process_seqs.., task: 812
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000112, nseq: 1203316
	[0000][ M::kt_pipeline] read 1203316 sequences (180000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203218
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524320, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (147, 222, 2156)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6174)
[0000][PE] mean and std.dev: (780.87, 1010.17)
[0000][PE] low and high boundaries for proper pairs: (1, 8183)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.53, 63.10)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (300, 471, 1538)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4014)
[0000][PE] mean and std.dev: (874.29, 829.96)
[0000][PE] low and high boundaries for proper pairs: (1, 5252)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203218 reads in 315.665 CPU sec, 23.298 real sec
[0000] Calling mem_process_seqs.., task: 813
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000002, nseq: 1203170
	[0000][ M::kt_pipeline] read 1203170 sequences (180000002 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524419, 3, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 320, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2722)
[0000][PE] mean and std.dev: (542.90, 451.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3558)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.78, 63.36)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (203, 249, 950)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2444)
[0000][PE] mean and std.dev: (589.28, 607.60)
[0000][PE] low and high boundaries for proper pairs: (1, 3191)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203316 reads in 329.793 CPU sec, 26.586 real sec
[0000] Calling mem_process_seqs.., task: 814
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1203170
	[0000][ M::kt_pipeline] read 1203170 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524762, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (267, 1068, 2457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6837)
[0000][PE] mean and std.dev: (1346.68, 1589.78)
[0000][PE] low and high boundaries for proper pairs: (1, 9027)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 330, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.73, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (241, 256, 360)
[0000][PE] low and high boundaries for computing mean and std.dev: (3, 598)
[0000][PE] mean and std.dev: (259.31, 67.28)
[0000][PE] low and high boundaries for proper pairs: (1, 717)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203170 reads in 330.588 CPU sec, 33.985 real sec
[0000] Calling mem_process_seqs.., task: 815
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000285, nseq: 1203202
	[0000][ M::kt_pipeline] read 1203202 sequences (180000285 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524643, 4, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 269, 1301)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3543)
[0000][PE] mean and std.dev: (627.38, 572.85)
[0000][PE] low and high boundaries for proper pairs: (1, 4664)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.57, 63.45)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (205, 290, 766)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1888)
[0000][PE] mean and std.dev: (487.57, 454.01)
[0000][PE] low and high boundaries for proper pairs: (1, 2449)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203170 reads in 325.823 CPU sec, 28.337 real sec
[0000] Calling mem_process_seqs.., task: 816
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000092, nseq: 1203178
	[0000][ M::kt_pipeline] read 1203178 sequences (180000092 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203202
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525085, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 199, 847)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2219)
[0000][PE] mean and std.dev: (457.95, 420.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.27, 63.24)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (255, 299, 793)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1869)
[0000][PE] mean and std.dev: (493.33, 431.98)
[0000][PE] low and high boundaries for proper pairs: (1, 2407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203202 reads in 325.515 CPU sec, 27.894 real sec
[0000] Calling mem_process_seqs.., task: 817
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000182, nseq: 1203234
	[0000][ M::kt_pipeline] read 1203234 sequences (180000182 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203178
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525013, 8, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (255, 313, 1188)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3054)
[0000][PE] mean and std.dev: (552.27, 548.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3987)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.53, 63.35)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (331, 923, 2250)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6088)
[0000][PE] mean and std.dev: (1258.43, 1173.00)
[0000][PE] low and high boundaries for proper pairs: (1, 8007)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203178 reads in 325.330 CPU sec, 29.602 real sec
[0000] Calling mem_process_seqs.., task: 818
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000287, nseq: 1203102
	[0000][ M::kt_pipeline] read 1203102 sequences (180000287 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203234
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 525034, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (175, 262, 462)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1036)
[0000][PE] mean and std.dev: (279.89, 192.55)
[0000][PE] low and high boundaries for proper pairs: (1, 1323)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.45, 63.37)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (223, 338, 1829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5041)
[0000][PE] mean and std.dev: (708.15, 811.11)
[0000][PE] low and high boundaries for proper pairs: (1, 6647)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203234 reads in 319.643 CPU sec, 23.276 real sec
[0000] Calling mem_process_seqs.., task: 819
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000026, nseq: 1203212
	[0000][ M::kt_pipeline] read 1203212 sequences (180000026 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203102
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524741, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 235, 963)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2553)
[0000][PE] mean and std.dev: (484.18, 516.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3348)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.33, 63.13)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (569, 1096, 2347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5903)
[0000][PE] mean and std.dev: (1546.85, 1414.34)
[0000][PE] low and high boundaries for proper pairs: (1, 7681)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203102 reads in 326.556 CPU sec, 27.137 real sec
[0000] Calling mem_process_seqs.., task: 820
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000098, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524650, 2, 27)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 989, 4572)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 13364)
[0000][PE] mean and std.dev: (2029.71, 2380.65)
[0000][PE] low and high boundaries for proper pairs: (1, 17760)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.28, 63.15)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 376, 1358)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3588)
[0000][PE] mean and std.dev: (761.88, 828.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4703)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203212 reads in 322.474 CPU sec, 27.220 real sec
[0000] Calling mem_process_seqs.., task: 821
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524732, 0, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (193, 297, 728)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1798)
[0000][PE] mean and std.dev: (410.28, 367.29)
[0000][PE] low and high boundaries for proper pairs: (1, 2333)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.70, 63.55)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (285, 350, 1172)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2946)
[0000][PE] mean and std.dev: (627.70, 516.80)
[0000][PE] low and high boundaries for proper pairs: (1, 3833)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 317.799 CPU sec, 27.030 real sec
[0000] Calling mem_process_seqs.., task: 822
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000130, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000130 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525075, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (162, 281, 1570)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4386)
[0000][PE] mean and std.dev: (701.62, 697.38)
[0000][PE] low and high boundaries for proper pairs: (1, 5794)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.53, 63.41)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (261, 331, 939)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2295)
[0000][PE] mean and std.dev: (446.14, 300.34)
[0000][PE] low and high boundaries for proper pairs: (1, 2973)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 323.490 CPU sec, 25.760 real sec
[0000] Calling mem_process_seqs.., task: 823
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000127, nseq: 1203086
	[0000][ M::kt_pipeline] read 1203086 sequences (180000127 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524661, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 596, 1124)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2954)
[0000][PE] mean and std.dev: (759.86, 633.77)
[0000][PE] low and high boundaries for proper pairs: (1, 3869)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.73, 63.53)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (294, 504, 1346)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3450)
[0000][PE] mean and std.dev: (646.00, 469.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4502)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 319.925 CPU sec, 24.824 real sec
[0000] Calling mem_process_seqs.., task: 824
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000279, nseq: 1203220
	[0000][ M::kt_pipeline] read 1203220 sequences (180000279 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524849, 3, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 321, 2475)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6869)
[0000][PE] mean and std.dev: (1470.64, 2128.73)
[0000][PE] low and high boundaries for proper pairs: (1, 9986)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.49, 63.17)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (206, 319, 1784)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4940)
[0000][PE] mean and std.dev: (821.40, 951.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6518)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203086 reads in 319.437 CPU sec, 30.773 real sec
[0000] Calling mem_process_seqs.., task: 825
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203064
	[0000][ M::kt_pipeline] read 1203064 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203220
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525229, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (226, 636, 1187)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3109)
[0000][PE] mean and std.dev: (851.50, 869.50)
[0000][PE] low and high boundaries for proper pairs: (1, 4329)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.38, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 928, 2786)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7840)
[0000][PE] mean and std.dev: (1285.15, 1282.18)
[0000][PE] low and high boundaries for proper pairs: (1, 10367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203220 reads in 321.035 CPU sec, 27.975 real sec
[0000] Calling mem_process_seqs.., task: 826
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000011, nseq: 1203238
	[0000][ M::kt_pipeline] read 1203238 sequences (180000011 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203064
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524949, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 240, 390)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 862)
[0000][PE] mean and std.dev: (256.57, 195.59)
[0000][PE] low and high boundaries for proper pairs: (1, 1098)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.38, 63.47)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (292, 343, 832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1912)
[0000][PE] mean and std.dev: (502.29, 334.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2452)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203064 reads in 313.183 CPU sec, 24.991 real sec
[0000] Calling mem_process_seqs.., task: 827
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000022, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000022 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203238
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524671, 2, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 253, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3107)
[0000][PE] mean and std.dev: (408.67, 411.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4084)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.36, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 496, 1382)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3628)
[0000][PE] mean and std.dev: (699.14, 579.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4751)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203238 reads in 312.683 CPU sec, 25.039 real sec
[0000] Calling mem_process_seqs.., task: 828
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000263, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524830, 2, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 269, 608)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1450)
[0000][PE] mean and std.dev: (361.96, 318.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1871)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.53, 63.57)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 245, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 840)
[0000][PE] mean and std.dev: (237.24, 86.90)
[0000][PE] low and high boundaries for proper pairs: (1, 1053)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 324.498 CPU sec, 29.036 real sec
[0000] Calling mem_process_seqs.., task: 829
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000217, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000217 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524551, 8, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 230, 1291)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3513)
[0000][PE] mean and std.dev: (456.75, 530.32)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.27)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (290, 370, 1366)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3518)
[0000][PE] mean and std.dev: (594.33, 491.76)
[0000][PE] low and high boundaries for proper pairs: (1, 4594)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 317.923 CPU sec, 22.426 real sec
[0000] Calling mem_process_seqs.., task: 830
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000075, nseq: 1203056
	[0000][ M::kt_pipeline] read 1203056 sequences (180000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524661, 1, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 222, 294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 556)
[0000][PE] mean and std.dev: (197.56, 61.15)
[0000][PE] low and high boundaries for proper pairs: (1, 687)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.46, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (264, 674, 1012)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2508)
[0000][PE] mean and std.dev: (829.93, 641.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3395)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 325.929 CPU sec, 29.262 real sec
[0000] Calling mem_process_seqs.., task: 831
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000139, nseq: 1203090
	[0000][ M::kt_pipeline] read 1203090 sequences (180000139 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203056
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525126, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 283, 593)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1457)
[0000][PE] mean and std.dev: (368.29, 317.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1889)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.25, 63.28)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (272, 307, 1180)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2996)
[0000][PE] mean and std.dev: (577.19, 528.83)
[0000][PE] low and high boundaries for proper pairs: (1, 3904)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203056 reads in 309.324 CPU sec, 22.377 real sec
[0000] Calling mem_process_seqs.., task: 832
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000227, nseq: 1203142
	[0000][ M::kt_pipeline] read 1203142 sequences (180000227 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203090
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 525133, 7, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (192, 243, 258)
[0000][PE] low and high boundaries for computing mean and std.dev: (60, 390)
[0000][PE] mean and std.dev: (221.25, 55.12)
[0000][PE] low and high boundaries for proper pairs: (1, 456)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 373)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 541)
[0000][PE] mean and std.dev: (331.54, 63.43)
[0000][PE] low and high boundaries for proper pairs: (37, 625)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 377, 758)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1860)
[0000][PE] mean and std.dev: (469.71, 401.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2411)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203090 reads in 320.351 CPU sec, 27.791 real sec
[0000] Calling mem_process_seqs.., task: 833
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203212
	[0000][ M::kt_pipeline] read 1203212 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203142
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524706, 6, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (221, 282, 520)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1118)
[0000][PE] mean and std.dev: (251.00, 85.68)
[0000][PE] low and high boundaries for proper pairs: (1, 1417)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.09, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 467, 817)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1971)
[0000][PE] mean and std.dev: (552.14, 401.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2548)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203142 reads in 321.657 CPU sec, 23.977 real sec
[0000] Calling mem_process_seqs.., task: 834
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203046
	[0000][ M::kt_pipeline] read 1203046 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203212
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524739, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (155, 204, 262)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (186.73, 54.87)
[0000][PE] low and high boundaries for proper pairs: (1, 583)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.27, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 421, 1753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4781)
[0000][PE] mean and std.dev: (869.62, 950.64)
[0000][PE] low and high boundaries for proper pairs: (1, 6295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203212 reads in 321.030 CPU sec, 26.630 real sec
[0000] Calling mem_process_seqs.., task: 835
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000071, nseq: 1203214
	[0000][ M::kt_pipeline] read 1203214 sequences (180000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203046
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525313, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 261, 928)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2360)
[0000][PE] mean and std.dev: (517.75, 544.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3076)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.15, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 962, 1283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (870.95, 659.21)
[0000][PE] low and high boundaries for proper pairs: (1, 4397)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203046 reads in 329.427 CPU sec, 24.876 real sec
[0000] Calling mem_process_seqs.., task: 836
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000133, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000133 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203214
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524648, 2, 30)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 260, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2207)
[0000][PE] mean and std.dev: (331.90, 293.61)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.23)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (173, 552, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3470)
[0000][PE] mean and std.dev: (766.00, 612.61)
[0000][PE] low and high boundaries for proper pairs: (1, 4569)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203214 reads in 323.135 CPU sec, 27.010 real sec
[0000] Calling mem_process_seqs.., task: 837
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000047, nseq: 1203132
	[0000][ M::kt_pipeline] read 1203132 sequences (180000047 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (14, 524905, 1, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (176, 252, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 761)
[0000][PE] mean and std.dev: (241.17, 91.03)
[0000][PE] low and high boundaries for proper pairs: (1, 956)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.32, 63.33)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (233, 837, 1363)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3623)
[0000][PE] mean and std.dev: (879.50, 696.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4753)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 310.883 CPU sec, 23.432 real sec
[0000] Calling mem_process_seqs.., task: 838
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1203080
	[0000][ M::kt_pipeline] read 1203080 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203132
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524833, 2, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (154, 293, 848)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2236)
[0000][PE] mean and std.dev: (336.71, 305.80)
[0000][PE] low and high boundaries for proper pairs: (1, 2930)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.23, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 859, 1677)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4399)
[0000][PE] mean and std.dev: (1088.60, 1017.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5760)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203132 reads in 314.346 CPU sec, 23.257 real sec
[0000] Calling mem_process_seqs.., task: 839
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000113, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000113 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203080
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525040, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (161, 222, 310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 608)
[0000][PE] mean and std.dev: (205.80, 80.50)
[0000][PE] low and high boundaries for proper pairs: (1, 757)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (216, 819, 1318)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3522)
[0000][PE] mean and std.dev: (955.71, 831.01)
[0000][PE] low and high boundaries for proper pairs: (1, 4624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203080 reads in 326.763 CPU sec, 25.936 real sec
[0000] Calling mem_process_seqs.., task: 840
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000213, nseq: 1203108
	[0000][ M::kt_pipeline] read 1203108 sequences (180000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524709, 4, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (144, 205, 444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1044)
[0000][PE] mean and std.dev: (295.95, 261.91)
[0000][PE] low and high boundaries for proper pairs: (1, 1344)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.14, 63.44)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (411, 1120, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3417)
[0000][PE] mean and std.dev: (892.89, 546.91)
[0000][PE] low and high boundaries for proper pairs: (1, 4419)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 323.626 CPU sec, 23.456 real sec
[0000] Calling mem_process_seqs.., task: 841
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000017, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000017 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203108
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524705, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (143, 288, 606)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1532)
[0000][PE] mean and std.dev: (381.76, 370.79)
[0000][PE] low and high boundaries for proper pairs: (1, 1995)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.20)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (239, 301, 1552)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4178)
[0000][PE] mean and std.dev: (682.31, 825.51)
[0000][PE] low and high boundaries for proper pairs: (1, 5491)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203108 reads in 325.205 CPU sec, 32.796 real sec
[0000] Calling mem_process_seqs.., task: 842
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000164, nseq: 1203228
	[0000][ M::kt_pipeline] read 1203228 sequences (180000164 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524323, 3, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 285, 679)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1633)
[0000][PE] mean and std.dev: (326.73, 162.28)
[0000][PE] low and high boundaries for proper pairs: (1, 2110)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.30, 63.32)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 294, 1340)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3630)
[0000][PE] mean and std.dev: (524.60, 487.86)
[0000][PE] low and high boundaries for proper pairs: (1, 4775)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 317.369 CPU sec, 21.713 real sec
[0000] Calling mem_process_seqs.., task: 843
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000150, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000150 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524705, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (240, 866, 1272)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (651.75, 469.58)
[0000][PE] low and high boundaries for proper pairs: (1, 4368)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.08, 63.26)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (281, 674, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2381)
[0000][PE] mean and std.dev: (669.06, 514.99)
[0000][PE] low and high boundaries for proper pairs: (1, 3081)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203228 reads in 321.303 CPU sec, 25.923 real sec
[0000] Calling mem_process_seqs.., task: 844
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000135, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000135 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (26, 524734, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 204, 328)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 644)
[0000][PE] mean and std.dev: (199.62, 79.59)
[0000][PE] low and high boundaries for proper pairs: (1, 802)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.22, 63.30)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 295, 1058)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2814)
[0000][PE] mean and std.dev: (534.08, 416.17)
[0000][PE] low and high boundaries for proper pairs: (1, 3692)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 313.456 CPU sec, 21.687 real sec
[0000] Calling mem_process_seqs.., task: 845
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000151, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000151 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 525029, 1, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (133, 251, 1337)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3745)
[0000][PE] mean and std.dev: (623.39, 664.98)
[0000][PE] low and high boundaries for proper pairs: (1, 4949)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.14, 63.29)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (207, 474, 1339)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3603)
[0000][PE] mean and std.dev: (761.00, 715.89)
[0000][PE] low and high boundaries for proper pairs: (1, 4735)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 311.994 CPU sec, 20.788 real sec
[0000] Calling mem_process_seqs.., task: 846
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000198, nseq: 1203130
	[0000][ M::kt_pipeline] read 1203130 sequences (180000198 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524694, 4, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (204, 790, 1996)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5580)
[0000][PE] mean and std.dev: (953.12, 903.55)
[0000][PE] low and high boundaries for proper pairs: (1, 7372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.00, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 316, 1008)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2596)
[0000][PE] mean and std.dev: (572.17, 517.82)
[0000][PE] low and high boundaries for proper pairs: (1, 3390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 319.797 CPU sec, 22.824 real sec
[0000] Calling mem_process_seqs.., task: 847
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000220, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000220 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203130
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524504, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (279, 509, 834)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1944)
[0000][PE] mean and std.dev: (500.72, 346.13)
[0000][PE] low and high boundaries for proper pairs: (1, 2499)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.97, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 405, 1004)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2500)
[0000][PE] mean and std.dev: (630.45, 503.34)
[0000][PE] low and high boundaries for proper pairs: (1, 3248)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203130 reads in 325.337 CPU sec, 21.807 real sec
[0000] Calling mem_process_seqs.., task: 848
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203180
	[0000][ M::kt_pipeline] read 1203180 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524365, 1, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 203, 283)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 547)
[0000][PE] mean and std.dev: (184.00, 55.44)
[0000][PE] low and high boundaries for proper pairs: (1, 679)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.95, 63.54)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (138, 225, 1678)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4758)
[0000][PE] mean and std.dev: (1051.71, 1533.39)
[0000][PE] low and high boundaries for proper pairs: (1, 7185)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 321.007 CPU sec, 26.562 real sec
[0000] Calling mem_process_seqs.., task: 849
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000037, nseq: 1203114
	[0000][ M::kt_pipeline] read 1203114 sequences (180000037 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203180
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525294, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (168, 272, 1080)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2904)
[0000][PE] mean and std.dev: (537.60, 637.39)
[0000][PE] low and high boundaries for proper pairs: (1, 3816)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 989, 1777)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4779)
[0000][PE] mean and std.dev: (1021.79, 852.28)
[0000][PE] low and high boundaries for proper pairs: (1, 6280)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203180 reads in 330.743 CPU sec, 24.169 real sec
[0000] Calling mem_process_seqs.., task: 850
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000044, nseq: 1203048
	[0000][ M::kt_pipeline] read 1203048 sequences (180000044 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203114
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524128, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (253, 322, 1327)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3475)
[0000][PE] mean and std.dev: (588.05, 519.81)
[0000][PE] low and high boundaries for proper pairs: (1, 4549)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.79, 63.23)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (236, 771, 1894)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5210)
[0000][PE] mean and std.dev: (899.59, 775.29)
[0000][PE] low and high boundaries for proper pairs: (1, 6868)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203114 reads in 321.915 CPU sec, 23.893 real sec
[0000] Calling mem_process_seqs.., task: 851
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1203066
	[0000][ M::kt_pipeline] read 1203066 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203048
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 523479, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (187, 258, 981)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2569)
[0000][PE] mean and std.dev: (548.65, 400.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3363)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 533)
[0000][PE] mean and std.dev: (328.76, 62.42)
[0000][PE] low and high boundaries for proper pairs: (41, 615)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (258, 783, 1100)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2784)
[0000][PE] mean and std.dev: (857.11, 649.15)
[0000][PE] low and high boundaries for proper pairs: (1, 3626)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203048 reads in 362.224 CPU sec, 25.798 real sec
[0000] Calling mem_process_seqs.., task: 852
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000201, nseq: 1203152
	[0000][ M::kt_pipeline] read 1203152 sequences (180000201 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203066
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 523246, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 211, 274)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 490)
[0000][PE] mean and std.dev: (208.72, 74.53)
[0000][PE] low and high boundaries for proper pairs: (1, 598)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (286, 326, 369)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 535)
[0000][PE] mean and std.dev: (328.68, 62.52)
[0000][PE] low and high boundaries for proper pairs: (37, 618)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (571, 969, 1310)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2788)
[0000][PE] mean and std.dev: (859.80, 521.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3527)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203066 reads in 370.963 CPU sec, 31.214 real sec
[0000] Calling mem_process_seqs.., task: 853
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 523823, 6, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (198, 231, 343)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 633)
[0000][PE] mean and std.dev: (217.58, 59.48)
[0000][PE] low and high boundaries for proper pairs: (1, 778)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.16, 62.69)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 738, 1158)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3036)
[0000][PE] mean and std.dev: (688.41, 514.01)
[0000][PE] low and high boundaries for proper pairs: (1, 3975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203152 reads in 341.596 CPU sec, 23.797 real sec
[0000] Calling mem_process_seqs.., task: 854
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000292, nseq: 1203268
	[0000][ M::kt_pipeline] read 1203268 sequences (180000292 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 523805, 2, 6)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 412, 1299)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3469)
[0000][PE] mean and std.dev: (755.47, 707.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4554)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.52, 62.85)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 352.114 CPU sec, 31.974 real sec
[0000] Calling mem_process_seqs.., task: 855
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000104, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000104 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203268
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 523659, 4, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 225, 1454)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4034)
[0000][PE] mean and std.dev: (597.25, 725.09)
[0000][PE] low and high boundaries for proper pairs: (1, 5324)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.35, 62.80)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (195, 414, 893)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2289)
[0000][PE] mean and std.dev: (387.71, 270.58)
[0000][PE] low and high boundaries for proper pairs: (1, 2987)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203268 reads in 345.291 CPU sec, 25.499 real sec
[0000] Calling mem_process_seqs.., task: 856
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000171, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000171 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524260, 5, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (142, 259, 470)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1126)
[0000][PE] mean and std.dev: (260.55, 170.57)
[0000][PE] low and high boundaries for proper pairs: (1, 1454)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.80, 63.01)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 747, 1309)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3485)
[0000][PE] mean and std.dev: (855.55, 717.19)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 334.491 CPU sec, 26.110 real sec
[0000] Calling mem_process_seqs.., task: 857
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000175, nseq: 1203226
	[0000][ M::kt_pipeline] read 1203226 sequences (180000175 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524727, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 196, 277)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 549)
[0000][PE] mean and std.dev: (180.27, 56.63)
[0000][PE] low and high boundaries for proper pairs: (1, 685)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.81, 63.12)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (220, 289, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 823)
[0000][PE] mean and std.dev: (263.79, 106.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1024)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 322.365 CPU sec, 20.779 real sec
[0000] Calling mem_process_seqs.., task: 858
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000019, nseq: 1203190
	[0000][ M::kt_pipeline] read 1203190 sequences (180000019 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203226
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524415, 7, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (217, 822, 1639)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4483)
[0000][PE] mean and std.dev: (1025.89, 981.00)
[0000][PE] low and high boundaries for proper pairs: (1, 5905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.01, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 278, 533)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1157)
[0000][PE] mean and std.dev: (290.76, 160.13)
[0000][PE] low and high boundaries for proper pairs: (1, 1469)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203226 reads in 323.350 CPU sec, 25.364 real sec
[0000] Calling mem_process_seqs.., task: 859
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203184
	[0000][ M::kt_pipeline] read 1203184 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203190
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524468, 1, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (188, 215, 302)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 530)
[0000][PE] mean and std.dev: (205.12, 64.97)
[0000][PE] low and high boundaries for proper pairs: (1, 644)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (119, 539)
[0000][PE] mean and std.dev: (329.99, 63.09)
[0000][PE] low and high boundaries for proper pairs: (35, 623)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (333, 1019, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3786)
[0000][PE] mean and std.dev: (1012.65, 837.97)
[0000][PE] low and high boundaries for proper pairs: (1, 4937)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203190 reads in 321.007 CPU sec, 21.642 real sec
[0000] Calling mem_process_seqs.., task: 860
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000193, nseq: 1203200
	[0000][ M::kt_pipeline] read 1203200 sequences (180000193 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203184
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524198, 5, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (216, 319, 1256)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3336)
[0000][PE] mean and std.dev: (715.53, 669.31)
[0000][PE] low and high boundaries for proper pairs: (1, 4376)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.05, 63.10)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (165, 237, 393)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 849)
[0000][PE] mean and std.dev: (260.25, 146.34)
[0000][PE] low and high boundaries for proper pairs: (1, 1077)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203184 reads in 333.844 CPU sec, 25.727 real sec
[0000] Calling mem_process_seqs.., task: 861
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000142, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000142 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203200
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (9, 524521, 5, 12)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.27, 62.99)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 267, 1126)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3018)
[0000][PE] mean and std.dev: (612.25, 729.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3964)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203200 reads in 332.803 CPU sec, 24.672 real sec
[0000] Calling mem_process_seqs.., task: 862
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524417, 3, 26)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (200, 219, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (114, 329)
[0000][PE] mean and std.dev: (206.17, 26.79)
[0000][PE] low and high boundaries for proper pairs: (71, 372)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.31, 62.99)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 310, 1065)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2771)
[0000][PE] mean and std.dev: (614.88, 553.81)
[0000][PE] low and high boundaries for proper pairs: (1, 3624)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 330.031 CPU sec, 23.751 real sec
[0000] Calling mem_process_seqs.., task: 863
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000056, nseq: 1203228
	[0000][ M::kt_pipeline] read 1203228 sequences (180000056 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524613, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 254, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2039)
[0000][PE] mean and std.dev: (404.68, 363.53)
[0000][PE] low and high boundaries for proper pairs: (1, 2677)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.23, 63.01)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (184, 230, 629)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1519)
[0000][PE] mean and std.dev: (398.12, 375.14)
[0000][PE] low and high boundaries for proper pairs: (1, 1964)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 336.737 CPU sec, 29.221 real sec
[0000] Calling mem_process_seqs.., task: 864
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000039, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000039 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525079, 3, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 250, 626)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1552)
[0000][PE] mean and std.dev: (337.80, 268.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2015)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.95, 62.96)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 332, 1730)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4728)
[0000][PE] mean and std.dev: (885.94, 1032.96)
[0000][PE] low and high boundaries for proper pairs: (1, 6227)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203228 reads in 337.079 CPU sec, 28.834 real sec
[0000] Calling mem_process_seqs.., task: 865
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000140, nseq: 1203324
	[0000][ M::kt_pipeline] read 1203324 sequences (180000140 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524744, 6, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (165, 204, 788)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2034)
[0000][PE] mean and std.dev: (490.23, 543.75)
[0000][PE] low and high boundaries for proper pairs: (1, 2665)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.10, 63.02)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (288, 338, 857)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1995)
[0000][PE] mean and std.dev: (492.36, 285.31)
[0000][PE] low and high boundaries for proper pairs: (1, 2564)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 326.922 CPU sec, 25.751 real sec
[0000] Calling mem_process_seqs.., task: 866
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000125, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203324
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524577, 2, 28)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (199, 322, 1096)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2890)
[0000][PE] mean and std.dev: (574.35, 645.20)
[0000][PE] low and high boundaries for proper pairs: (1, 3787)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.26, 63.06)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (243, 278, 1034)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2616)
[0000][PE] mean and std.dev: (667.07, 683.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3407)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203324 reads in 354.642 CPU sec, 29.256 real sec
[0000] Calling mem_process_seqs.., task: 867
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000012, nseq: 1203034
	[0000][ M::kt_pipeline] read 1203034 sequences (180000012 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524370, 8, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (141, 270, 763)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2007)
[0000][PE] mean and std.dev: (300.53, 230.27)
[0000][PE] low and high boundaries for proper pairs: (1, 2629)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.49, 63.14)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 309, 612)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1356)
[0000][PE] mean and std.dev: (374.58, 284.60)
[0000][PE] low and high boundaries for proper pairs: (1, 1728)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 357.401 CPU sec, 34.697 real sec
[0000] Calling mem_process_seqs.., task: 868
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000051, nseq: 1203208
	[0000][ M::kt_pipeline] read 1203208 sequences (180000051 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203034
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 523974, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (215, 245, 974)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2492)
[0000][PE] mean and std.dev: (489.26, 435.23)
[0000][PE] low and high boundaries for proper pairs: (1, 3251)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.33, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (369, 997, 1446)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3600)
[0000][PE] mean and std.dev: (958.56, 598.04)
[0000][PE] low and high boundaries for proper pairs: (1, 4677)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203034 reads in 332.336 CPU sec, 26.523 real sec
[0000] Calling mem_process_seqs.., task: 869
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203208
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524860, 1, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (125, 239, 464)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1142)
[0000][PE] mean and std.dev: (313.18, 313.82)
[0000][PE] low and high boundaries for proper pairs: (1, 1568)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.22, 63.04)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (260, 307, 1041)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2603)
[0000][PE] mean and std.dev: (464.89, 305.89)
[0000][PE] low and high boundaries for proper pairs: (1, 3384)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203208 reads in 344.029 CPU sec, 25.271 real sec
[0000] Calling mem_process_seqs.., task: 870
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000076, nseq: 1203236
	[0000][ M::kt_pipeline] read 1203236 sequences (180000076 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524800, 5, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 435, 819)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2101)
[0000][PE] mean and std.dev: (469.19, 373.41)
[0000][PE] low and high boundaries for proper pairs: (1, 2742)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.42, 62.98)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (276, 341, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4134)
[0000][PE] mean and std.dev: (711.37, 793.68)
[0000][PE] low and high boundaries for proper pairs: (1, 5420)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 350.419 CPU sec, 30.768 real sec
[0000] Calling mem_process_seqs.., task: 871
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000057, nseq: 1203196
	[0000][ M::kt_pipeline] read 1203196 sequences (180000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203236
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524146, 3, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 270, 1388)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3830)
[0000][PE] mean and std.dev: (603.33, 671.80)
[0000][PE] low and high boundaries for proper pairs: (1, 5051)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.34, 62.97)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (265, 1098, 1481)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3913)
[0000][PE] mean and std.dev: (952.81, 799.07)
[0000][PE] low and high boundaries for proper pairs: (1, 5129)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203236 reads in 337.833 CPU sec, 30.860 real sec
[0000] Calling mem_process_seqs.., task: 872
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1203196
	[0000][ M::kt_pipeline] read 1203196 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 523694, 8, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 275, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2156)
[0000][PE] mean and std.dev: (474.78, 432.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.25, 62.88)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (249, 617, 966)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2400)
[0000][PE] mean and std.dev: (660.56, 511.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3117)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203196 reads in 344.528 CPU sec, 27.249 real sec
[0000] Calling mem_process_seqs.., task: 873
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1203152
	[0000][ M::kt_pipeline] read 1203152 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203196
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524403, 6, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (172, 234, 753)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1915)
[0000][PE] mean and std.dev: (424.18, 405.06)
[0000][PE] low and high boundaries for proper pairs: (1, 2496)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 328, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.75, 62.83)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (218, 421, 1153)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3023)
[0000][PE] mean and std.dev: (692.32, 704.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203196 reads in 358.722 CPU sec, 30.213 real sec
[0000] Calling mem_process_seqs.., task: 874
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000080, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203152
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524205, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (160, 226, 841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2203)
[0000][PE] mean and std.dev: (466.47, 471.11)
[0000][PE] low and high boundaries for proper pairs: (1, 2884)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.06, 62.91)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 249, 637)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1489)
[0000][PE] mean and std.dev: (375.67, 271.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1915)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203152 reads in 360.973 CPU sec, 32.422 real sec
[0000] Calling mem_process_seqs.., task: 875
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000028, nseq: 1203216
	[0000][ M::kt_pipeline] read 1203216 sequences (180000028 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 523139, 6, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (157, 161, 344)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 718)
[0000][PE] mean and std.dev: (182.00, 73.70)
[0000][PE] low and high boundaries for proper pairs: (1, 905)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.61, 62.75)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (214, 292, 909)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2299)
[0000][PE] mean and std.dev: (498.95, 431.84)
[0000][PE] low and high boundaries for proper pairs: (1, 2994)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 373.472 CPU sec, 29.744 real sec
[0000] Calling mem_process_seqs.., task: 876
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000053, nseq: 1203118
	[0000][ M::kt_pipeline] read 1203118 sequences (180000053 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203216
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 522724, 11, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (207, 240, 829)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2073)
[0000][PE] mean and std.dev: (543.59, 551.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2749)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.35, 62.60)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (38, 181, 493)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1403)
[0000][PE] mean and std.dev: (202.40, 221.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1858)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203216 reads in 382.874 CPU sec, 31.471 real sec
[0000] Calling mem_process_seqs.., task: 877
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203330
	[0000][ M::kt_pipeline] read 1203330 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203118
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 523671, 3, 17)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (329.78, 62.77)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 594, 1326)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3418)
[0000][PE] mean and std.dev: (633.40, 434.33)
[0000][PE] low and high boundaries for proper pairs: (1, 4464)
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203118 reads in 345.712 CPU sec, 25.724 real sec
[0000] Calling mem_process_seqs.., task: 878
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000160, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203330
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 522962, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (152, 223, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 617)
[0000][PE] mean and std.dev: (210.27, 74.85)
[0000][PE] low and high boundaries for proper pairs: (1, 772)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.63, 62.70)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (180, 293, 478)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1074)
[0000][PE] mean and std.dev: (345.90, 226.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1372)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203330 reads in 381.597 CPU sec, 32.533 real sec
[0000] Calling mem_process_seqs.., task: 879
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000124, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000124 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 523886, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (235, 485, 1298)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3424)
[0000][PE] mean and std.dev: (708.09, 579.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4487)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (287, 327, 370)
[0000][PE] low and high boundaries for computing mean and std.dev: (121, 536)
[0000][PE] mean and std.dev: (329.78, 62.81)
[0000][PE] low and high boundaries for proper pairs: (38, 619)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 373, 968)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2480)
[0000][PE] mean and std.dev: (559.55, 473.12)
[0000][PE] low and high boundaries for proper pairs: (1, 3236)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 362.609 CPU sec, 28.330 real sec
[0000] Calling mem_process_seqs.., task: 880
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000272, nseq: 1203164
	[0000][ M::kt_pipeline] read 1203164 sequences (180000272 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (28, 524042, 2, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (209, 320, 902)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2288)
[0000][PE] mean and std.dev: (404.79, 318.83)
[0000][PE] low and high boundaries for proper pairs: (1, 2981)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.29, 62.97)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (315, 855, 1373)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3489)
[0000][PE] mean and std.dev: (827.00, 825.12)
[0000][PE] low and high boundaries for proper pairs: (1, 4547)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 351.598 CPU sec, 30.045 real sec
[0000] Calling mem_process_seqs.., task: 881
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000168, nseq: 1203276
	[0000][ M::kt_pipeline] read 1203276 sequences (180000168 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203164
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524555, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (167, 224, 350)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 716)
[0000][PE] mean and std.dev: (251.82, 141.92)
[0000][PE] low and high boundaries for proper pairs: (1, 899)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (209, 326, 379)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 719)
[0000][PE] mean and std.dev: (277.64, 74.72)
[0000][PE] low and high boundaries for proper pairs: (1, 889)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203164 reads in 321.716 CPU sec, 24.131 real sec
[0000] Calling mem_process_seqs.., task: 882
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000046, nseq: 1203126
	[0000][ M::kt_pipeline] read 1203126 sequences (180000046 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203276
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524659, 5, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (197, 501, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2651)
[0000][PE] mean and std.dev: (625.25, 567.24)
[0000][PE] low and high boundaries for proper pairs: (1, 3469)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.73, 63.25)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (347, 1117, 1665)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4301)
[0000][PE] mean and std.dev: (1168.81, 1084.58)
[0000][PE] low and high boundaries for proper pairs: (1, 5619)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203276 reads in 327.681 CPU sec, 23.917 real sec
[0000] Calling mem_process_seqs.., task: 883
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000288, nseq: 1203162
	[0000][ M::kt_pipeline] read 1203162 sequences (180000288 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203126
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (12, 524651, 3, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (278, 530, 1805)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4859)
[0000][PE] mean and std.dev: (845.17, 743.98)
[0000][PE] low and high boundaries for proper pairs: (1, 6386)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.97, 63.20)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (250, 302, 810)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1930)
[0000][PE] mean and std.dev: (471.12, 386.73)
[0000][PE] low and high boundaries for proper pairs: (1, 2490)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203126 reads in 319.414 CPU sec, 22.851 real sec
[0000] Calling mem_process_seqs.., task: 884
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000299, nseq: 1203314
	[0000][ M::kt_pipeline] read 1203314 sequences (180000299 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524801, 2, 10)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (195, 273, 701)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1713)
[0000][PE] mean and std.dev: (391.58, 324.94)
[0000][PE] low and high boundaries for proper pairs: (1, 2219)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.99, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (208, 374, 731)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1777)
[0000][PE] mean and std.dev: (342.25, 202.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2300)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203162 reads in 331.010 CPU sec, 22.625 real sec
[0000] Calling mem_process_seqs.., task: 885
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000153, nseq: 1203082
	[0000][ M::kt_pipeline] read 1203082 sequences (180000153 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203314
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524741, 3, 20)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 309, 844)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2172)
[0000][PE] mean and std.dev: (521.57, 530.43)
[0000][PE] low and high boundaries for proper pairs: (1, 2836)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.09, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (225, 308, 1052)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2706)
[0000][PE] mean and std.dev: (621.67, 558.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3533)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203314 reads in 322.194 CPU sec, 25.616 real sec
[0000] Calling mem_process_seqs.., task: 886
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000185, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000185 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203082
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524395, 6, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (231, 466, 1426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3816)
[0000][PE] mean and std.dev: (871.29, 825.18)
[0000][PE] low and high boundaries for proper pairs: (1, 5011)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (238, 910, 1271)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3337)
[0000][PE] mean and std.dev: (709.93, 488.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4370)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203082 reads in 326.097 CPU sec, 26.728 real sec
[0000] Calling mem_process_seqs.., task: 887
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000038, nseq: 1203088
	[0000][ M::kt_pipeline] read 1203088 sequences (180000038 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524391, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (210, 293, 1863)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5169)
[0000][PE] mean and std.dev: (843.15, 990.26)
[0000][PE] low and high boundaries for proper pairs: (1, 6822)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.00, 63.19)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (219, 322, 511)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1095)
[0000][PE] mean and std.dev: (295.23, 125.12)
[0000][PE] low and high boundaries for proper pairs: (1, 1387)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 319.055 CPU sec, 22.418 real sec
[0000] Calling mem_process_seqs.., task: 888
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000199, nseq: 1203296
	[0000][ M::kt_pipeline] read 1203296 sequences (180000199 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203088
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524536, 4, 16)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (163, 336, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3484)
[0000][PE] mean and std.dev: (595.06, 663.51)
[0000][PE] low and high boundaries for proper pairs: (1, 4591)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.98, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (221, 318, 982)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2504)
[0000][PE] mean and std.dev: (461.13, 391.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3265)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203088 reads in 331.944 CPU sec, 25.743 real sec
[0000] Calling mem_process_seqs.., task: 889
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000268, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000268 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203296
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524297, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (212, 357, 1311)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3509)
[0000][PE] mean and std.dev: (717.25, 719.80)
[0000][PE] low and high boundaries for proper pairs: (1, 4608)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (240, 340, 703)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1629)
[0000][PE] mean and std.dev: (449.10, 372.91)
[0000][PE] low and high boundaries for proper pairs: (1, 2092)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203296 reads in 341.356 CPU sec, 31.707 real sec
[0000] Calling mem_process_seqs.., task: 890
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000274, nseq: 1203122
	[0000][ M::kt_pipeline] read 1203122 sequences (180000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (24, 524901, 2, 25)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 659, 1166)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3040)
[0000][PE] mean and std.dev: (690.21, 526.02)
[0000][PE] low and high boundaries for proper pairs: (1, 3977)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (317, 921, 1331)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3359)
[0000][PE] mean and std.dev: (878.33, 582.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 306.715 CPU sec, 20.069 real sec
[0000] Calling mem_process_seqs.., task: 891
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000291, nseq: 1203172
	[0000][ M::kt_pipeline] read 1203172 sequences (180000291 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203122
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524380, 4, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (122, 245, 325)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 731)
[0000][PE] mean and std.dev: (187.93, 85.62)
[0000][PE] low and high boundaries for proper pairs: (1, 934)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.04, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (307, 390, 1072)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2602)
[0000][PE] mean and std.dev: (448.25, 314.69)
[0000][PE] low and high boundaries for proper pairs: (1, 3367)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203122 reads in 323.457 CPU sec, 22.438 real sec
[0000] Calling mem_process_seqs.., task: 892
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000128, nseq: 1203288
	[0000][ M::kt_pipeline] read 1203288 sequences (180000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203172
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 524815, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (229, 477, 1040)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2662)
[0000][PE] mean and std.dev: (689.21, 601.66)
[0000][PE] low and high boundaries for proper pairs: (1, 3473)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.02, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (130, 257, 990)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2710)
[0000][PE] mean and std.dev: (544.38, 681.31)
[0000][PE] low and high boundaries for proper pairs: (1, 3570)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203172 reads in 314.385 CPU sec, 22.554 real sec
[0000] Calling mem_process_seqs.., task: 893
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000159, nseq: 1203254
	[0000][ M::kt_pipeline] read 1203254 sequences (180000159 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524860, 6, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (202, 597, 1029)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2683)
[0000][PE] mean and std.dev: (644.11, 511.19)
[0000][PE] low and high boundaries for proper pairs: (1, 3510)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (330.79, 63.11)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (175, 317, 1267)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3451)
[0000][PE] mean and std.dev: (720.89, 703.63)
[0000][PE] low and high boundaries for proper pairs: (1, 4543)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203288 reads in 329.831 CPU sec, 28.690 real sec
[0000] Calling mem_process_seqs.., task: 894
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000114, nseq: 1203174
	[0000][ M::kt_pipeline] read 1203174 sequences (180000114 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203254
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524433, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (288, 392, 917)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2175)
[0000][PE] mean and std.dev: (559.33, 423.63)
[0000][PE] low and high boundaries for proper pairs: (1, 2804)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (331.03, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (179, 255, 824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2114)
[0000][PE] mean and std.dev: (485.41, 503.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2759)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203254 reads in 333.243 CPU sec, 26.978 real sec
[0000] Calling mem_process_seqs.., task: 895
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000042, nseq: 1203136
	[0000][ M::kt_pipeline] read 1203136 sequences (180000042 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203174
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (13, 524988, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 266, 1060)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2792)
[0000][PE] mean and std.dev: (584.38, 672.63)
[0000][PE] low and high boundaries for proper pairs: (1, 3658)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (289, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (123, 538)
[0000][PE] mean and std.dev: (331.13, 63.31)
[0000][PE] low and high boundaries for proper pairs: (40, 621)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (301, 367, 1569)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4105)
[0000][PE] mean and std.dev: (839.08, 873.35)
[0000][PE] low and high boundaries for proper pairs: (1, 5373)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203174 reads in 340.087 CPU sec, 30.247 real sec
[0000] Calling mem_process_seqs.., task: 896
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000059, nseq: 1203160
	[0000][ M::kt_pipeline] read 1203160 sequences (180000059 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524522, 7, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (214, 237, 1307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3493)
[0000][PE] mean and std.dev: (600.93, 679.62)
[0000][PE] low and high boundaries for proper pairs: (1, 4586)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.96, 63.30)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (194, 274, 1055)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2777)
[0000][PE] mean and std.dev: (570.24, 599.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3638)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203136 reads in 312.643 CPU sec, 21.388 real sec
[0000] Calling mem_process_seqs.., task: 897
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000277, nseq: 1203242
	[0000][ M::kt_pipeline] read 1203242 sequences (180000277 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203160
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (27, 524449, 1, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (180, 236, 821)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2103)
[0000][PE] mean and std.dev: (452.50, 467.81)
[0000][PE] low and high boundaries for proper pairs: (1, 2744)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.95, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (286, 366, 1175)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2953)
[0000][PE] mean and std.dev: (660.20, 540.21)
[0000][PE] low and high boundaries for proper pairs: (1, 3842)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203160 reads in 326.922 CPU sec, 24.978 real sec
[0000] Calling mem_process_seqs.., task: 898
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000189, nseq: 1203098
	[0000][ M::kt_pipeline] read 1203098 sequences (180000189 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203242
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 525098, 0, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (116, 248, 830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2258)
[0000][PE] mean and std.dev: (545.77, 662.35)
[0000][PE] low and high boundaries for proper pairs: (1, 3195)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.71, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (373, 750, 1548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3898)
[0000][PE] mean and std.dev: (967.48, 742.91)
[0000][PE] low and high boundaries for proper pairs: (1, 5073)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203242 reads in 324.346 CPU sec, 26.485 real sec
[0000] Calling mem_process_seqs.., task: 899
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000255, nseq: 1203140
	[0000][ M::kt_pipeline] read 1203140 sequences (180000255 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (29, 525192, 2, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 271, 823)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2047)
[0000][PE] mean and std.dev: (432.88, 364.78)
[0000][PE] low and high boundaries for proper pairs: (1, 2659)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (245, 306, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2660)
[0000][PE] mean and std.dev: (413.27, 298.46)
[0000][PE] low and high boundaries for proper pairs: (1, 3465)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203098 reads in 328.015 CPU sec, 25.455 real sec
[0000] Calling mem_process_seqs.., task: 900
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000205, nseq: 1203154
	[0000][ M::kt_pipeline] read 1203154 sequences (180000205 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203140
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 525046, 5, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (184, 267, 833)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2131)
[0000][PE] mean and std.dev: (504.75, 439.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2780)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.28)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (231, 641, 1247)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3279)
[0000][PE] mean and std.dev: (818.85, 707.66)
[0000][PE] low and high boundaries for proper pairs: (1, 4295)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203140 reads in 338.719 CPU sec, 27.468 real sec
[0000] Calling mem_process_seqs.., task: 901
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000023, nseq: 1203150
	[0000][ M::kt_pipeline] read 1203150 sequences (180000023 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203154
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (19, 525025, 3, 9)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (190, 269, 547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1261)
[0000][PE] mean and std.dev: (296.06, 199.20)
[0000][PE] low and high boundaries for proper pairs: (1, 1618)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.87, 63.47)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation FF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203154 reads in 339.255 CPU sec, 23.994 real sec
[0000] Calling mem_process_seqs.., task: 902
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000099, nseq: 1203206
	[0000][ M::kt_pipeline] read 1203206 sequences (180000099 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203150
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524569, 4, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (182, 281, 1352)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3692)
[0000][PE] mean and std.dev: (755.53, 933.71)
[0000][PE] low and high boundaries for proper pairs: (1, 4862)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.91, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (256, 515, 1104)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2800)
[0000][PE] mean and std.dev: (664.40, 436.94)
[0000][PE] low and high boundaries for proper pairs: (1, 3648)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203150 reads in 338.496 CPU sec, 24.108 real sec
[0000] Calling mem_process_seqs.., task: 903
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000197, nseq: 1203192
	[0000][ M::kt_pipeline] read 1203192 sequences (180000197 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203206
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524304, 3, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (250, 364, 1401)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3703)
[0000][PE] mean and std.dev: (718.67, 611.14)
[0000][PE] low and high boundaries for proper pairs: (1, 4854)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.31)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (193, 334, 922)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2380)
[0000][PE] mean and std.dev: (462.48, 321.65)
[0000][PE] low and high boundaries for proper pairs: (1, 3109)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203206 reads in 323.559 CPU sec, 22.221 real sec
[0000] Calling mem_process_seqs.., task: 904
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000035, nseq: 1203304
	[0000][ M::kt_pipeline] read 1203304 sequences (180000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203192
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524705, 4, 22)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (164, 281, 620)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1532)
[0000][PE] mean and std.dev: (389.26, 362.23)
[0000][PE] low and high boundaries for proper pairs: (1, 1988)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.90, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (237, 1139, 1314)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3468)
[0000][PE] mean and std.dev: (1010.59, 804.44)
[0000][PE] low and high boundaries for proper pairs: (1, 4545)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203192 reads in 332.755 CPU sec, 31.849 real sec
[0000] Calling mem_process_seqs.., task: 905
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1203112
	[0000][ M::kt_pipeline] read 1203112 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203304
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524941, 6, 13)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (134, 177, 307)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 653)
[0000][PE] mean and std.dev: (196.47, 124.32)
[0000][PE] low and high boundaries for proper pairs: (1, 826)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.76, 63.26)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (316, 998, 2589)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7135)
[0000][PE] mean and std.dev: (1265.69, 1189.45)
[0000][PE] low and high boundaries for proper pairs: (1, 9408)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203304 reads in 323.863 CPU sec, 25.085 real sec
[0000] Calling mem_process_seqs.., task: 906
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000031, nseq: 1203106
	[0000][ M::kt_pipeline] read 1203106 sequences (180000031 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203112
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 525043, 5, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (179, 481, 622)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1508)
[0000][PE] mean and std.dev: (417.87, 260.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1951)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.66, 63.49)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (224, 382, 1050)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2702)
[0000][PE] mean and std.dev: (566.00, 453.71)
[0000][PE] low and high boundaries for proper pairs: (1, 3528)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203112 reads in 328.310 CPU sec, 31.789 real sec
[0000] Calling mem_process_seqs.., task: 907
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000295, nseq: 1203224
	[0000][ M::kt_pipeline] read 1203224 sequences (180000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203106
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524922, 5, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 255, 762)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1944)
[0000][PE] mean and std.dev: (395.07, 400.64)
[0000][PE] low and high boundaries for proper pairs: (1, 2535)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (259, 269, 1159)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2959)
[0000][PE] mean and std.dev: (699.53, 712.10)
[0000][PE] low and high boundaries for proper pairs: (1, 3859)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203106 reads in 338.729 CPU sec, 28.098 real sec
[0000] Calling mem_process_seqs.., task: 908
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000105, nseq: 1203158
	[0000][ M::kt_pipeline] read 1203158 sequences (180000105 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203224
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524340, 1, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (170, 227, 287)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 521)
[0000][PE] mean and std.dev: (232.79, 82.91)
[0000][PE] low and high boundaries for proper pairs: (1, 638)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.72, 63.36)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (254, 548, 940)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2312)
[0000][PE] mean and std.dev: (596.31, 466.72)
[0000][PE] low and high boundaries for proper pairs: (1, 2998)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203224 reads in 346.426 CPU sec, 29.941 real sec
[0000] Calling mem_process_seqs.., task: 909
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000081, nseq: 1203186
	[0000][ M::kt_pipeline] read 1203186 sequences (180000081 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203158
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (16, 524990, 4, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (211, 327, 1664)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4570)
[0000][PE] mean and std.dev: (959.31, 1085.94)
[0000][PE] low and high boundaries for proper pairs: (1, 6023)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.69, 63.35)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (146, 870, 1099)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3005)
[0000][PE] mean and std.dev: (781.82, 712.96)
[0000][PE] low and high boundaries for proper pairs: (1, 3958)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203158 reads in 336.060 CPU sec, 25.740 real sec
[0000] Calling mem_process_seqs.., task: 910
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000152, nseq: 1203124
	[0000][ M::kt_pipeline] read 1203124 sequences (180000152 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203186
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (15, 524965, 8, 11)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (218, 241, 884)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2216)
[0000][PE] mean and std.dev: (447.07, 358.23)
[0000][PE] low and high boundaries for proper pairs: (1, 2882)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.24)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (186, 994, 1144)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3060)
[0000][PE] mean and std.dev: (840.82, 738.27)
[0000][PE] low and high boundaries for proper pairs: (1, 4018)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203186 reads in 337.728 CPU sec, 27.481 real sec
[0000] Calling mem_process_seqs.., task: 911
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000165, nseq: 1203166
	[0000][ M::kt_pipeline] read 1203166 sequences (180000165 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524973, 6, 17)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (130, 252, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1042)
[0000][PE] mean and std.dev: (286.38, 237.58)
[0000][PE] low and high boundaries for proper pairs: (1, 1346)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.57, 63.19)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (188, 276, 1868)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5228)
[0000][PE] mean and std.dev: (857.53, 1129.33)
[0000][PE] low and high boundaries for proper pairs: (1, 6908)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203124 reads in 347.366 CPU sec, 29.598 real sec
[0000] Calling mem_process_seqs.., task: 912
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000191, nseq: 1202968
	[0000][ M::kt_pipeline] read 1202968 sequences (180000191 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203166
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 525064, 3, 29)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (191, 253, 496)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1106)
[0000][PE] mean and std.dev: (294.84, 185.00)
[0000][PE] low and high boundaries for proper pairs: (1, 1411)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.94, 63.33)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (201, 345, 1294)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3480)
[0000][PE] mean and std.dev: (696.14, 597.30)
[0000][PE] low and high boundaries for proper pairs: (1, 4573)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203166 reads in 339.694 CPU sec, 26.753 real sec
[0000] Calling mem_process_seqs.., task: 913
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000087, nseq: 1203032
	[0000][ M::kt_pipeline] read 1203032 sequences (180000087 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202968
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524533, 3, 21)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (203, 295, 585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1349)
[0000][PE] mean and std.dev: (324.93, 198.38)
[0000][PE] low and high boundaries for proper pairs: (1, 1731)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.92, 63.39)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (271, 332, 1394)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3640)
[0000][PE] mean and std.dev: (711.80, 796.54)
[0000][PE] low and high boundaries for proper pairs: (1, 4763)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202968 reads in 346.974 CPU sec, 25.473 real sec
[0000] Calling mem_process_seqs.., task: 914
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000015, nseq: 1203062
	[0000][ M::kt_pipeline] read 1203062 sequences (180000015 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524060, 5, 19)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (171, 298, 852)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2214)
[0000][PE] mean and std.dev: (498.47, 516.04)
[0000][PE] low and high boundaries for proper pairs: (1, 2895)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.80, 63.42)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (280, 485, 993)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2419)
[0000][PE] mean and std.dev: (568.94, 460.88)
[0000][PE] low and high boundaries for proper pairs: (1, 3132)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203032 reads in 333.529 CPU sec, 30.248 real sec
[0000] Calling mem_process_seqs.., task: 915
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000178, nseq: 1203282
	[0000][ M::kt_pipeline] read 1203282 sequences (180000178 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203062
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 524208, 0, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (194, 244, 1444)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3944)
[0000][PE] mean and std.dev: (746.36, 684.14)
[0000][PE] low and high boundaries for proper pairs: (1, 5194)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.83, 63.29)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (166, 365, 1066)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2866)
[0000][PE] mean and std.dev: (595.36, 546.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3766)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203062 reads in 342.945 CPU sec, 26.929 real sec
[0000] Calling mem_process_seqs.., task: 916
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000206, nseq: 1203054
	[0000][ M::kt_pipeline] read 1203054 sequences (180000206 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203282
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (21, 524200, 3, 12)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (158, 232, 527)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1265)
[0000][PE] mean and std.dev: (235.56, 164.24)
[0000][PE] low and high boundaries for proper pairs: (1, 1634)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.74, 63.41)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (352, 566, 1484)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3748)
[0000][PE] mean and std.dev: (770.00, 549.39)
[0000][PE] low and high boundaries for proper pairs: (1, 4880)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203282 reads in 330.794 CPU sec, 23.596 real sec
[0000] Calling mem_process_seqs.., task: 917
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000006, nseq: 1203204
	[0000][ M::kt_pipeline] read 1203204 sequences (180000006 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524644, 3, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (178, 277, 1897)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5335)
[0000][PE] mean and std.dev: (744.88, 988.12)
[0000][PE] low and high boundaries for proper pairs: (1, 7054)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.93, 63.40)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (297, 537, 978)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2340)
[0000][PE] mean and std.dev: (691.07, 560.92)
[0000][PE] low and high boundaries for proper pairs: (1, 3021)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203054 reads in 345.560 CPU sec, 28.458 real sec
[0000] Calling mem_process_seqs.., task: 918
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000298, nseq: 1203260
	[0000][ M::kt_pipeline] read 1203260 sequences (180000298 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203204
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (20, 524514, 5, 24)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (166, 284, 2032)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 5764)
[0000][PE] mean and std.dev: (947.45, 1357.46)
[0000][PE] low and high boundaries for proper pairs: (1, 7630)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.75, 63.27)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (181, 253, 864)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2230)
[0000][PE] mean and std.dev: (515.13, 566.35)
[0000][PE] low and high boundaries for proper pairs: (1, 2913)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203204 reads in 328.416 CPU sec, 24.445 real sec
[0000] Calling mem_process_seqs.., task: 919
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000079, nseq: 1203176
	[0000][ M::kt_pipeline] read 1203176 sequences (180000079 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203260
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (22, 524470, 1, 23)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (151, 240, 929)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2485)
[0000][PE] mean and std.dev: (636.86, 668.95)
[0000][PE] low and high boundaries for proper pairs: (1, 3313)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.48)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (230, 288, 1270)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3350)
[0000][PE] mean and std.dev: (518.29, 510.16)
[0000][PE] low and high boundaries for proper pairs: (1, 4390)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203260 reads in 349.401 CPU sec, 26.298 real sec
[0000] Calling mem_process_seqs.., task: 920
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000172, nseq: 1203014
	[0000][ M::kt_pipeline] read 1203014 sequences (180000172 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203176
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (18, 524939, 0, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (174, 224, 1502)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4158)
[0000][PE] mean and std.dev: (724.12, 983.81)
[0000][PE] low and high boundaries for proper pairs: (1, 5486)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 371)
[0000][PE] low and high boundaries for computing mean and std.dev: (122, 537)
[0000][PE] mean and std.dev: (330.46, 63.17)
[0000][PE] low and high boundaries for proper pairs: (39, 620)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (321, 996, 1297)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3249)
[0000][PE] mean and std.dev: (970.61, 760.96)
[0000][PE] low and high boundaries for proper pairs: (1, 4225)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203176 reads in 340.058 CPU sec, 29.708 real sec
[0000] Calling mem_process_seqs.., task: 921
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000296, nseq: 1202990
	[0000][ M::kt_pipeline] read 1202990 sequences (180000296 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203014
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (23, 524546, 4, 14)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (270, 322, 1015)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2505)
[0000][PE] mean and std.dev: (603.78, 521.57)
[0000][PE] low and high boundaries for proper pairs: (1, 3250)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 329, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.62, 63.34)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (211, 249, 652)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1534)
[0000][PE] mean and std.dev: (329.58, 232.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1975)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203014 reads in 363.516 CPU sec, 30.615 real sec
[0000] Calling mem_process_seqs.., task: 922
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 180000052, nseq: 1203002
	[0000][ M::kt_pipeline] read 1203002 sequences (180000052 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1202990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (17, 524235, 5, 15)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (127, 193, 548)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 1390)
[0000][PE] mean and std.dev: (276.67, 290.21)
[0000][PE] low and high boundaries for proper pairs: (1, 1811)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.67, 63.32)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (344, 593, 1347)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 3353)
[0000][PE] mean and std.dev: (737.79, 507.75)
[0000][PE] low and high boundaries for proper pairs: (1, 4356)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1202990 reads in 357.161 CPU sec, 27.511 real sec
[0000] Calling mem_process_seqs.., task: 923
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 180000000, work_chunk_size: 9088147, nseq: 60764
	[0000][ M::kt_pipeline] read 60764 sequences (9088147 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 1203002
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (11, 525333, 7, 18)
[0000][PE] analyzing insert size distribution for orientation FF...
[0000][PE] (25, 50, 75) percentile: (150, 198, 1592)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 4476)
[0000][PE] mean and std.dev: (684.27, 766.54)
[0000][PE] low and high boundaries for proper pairs: (1, 5918)
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.49, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation RR...
[0000][PE] (25, 50, 75) percentile: (212, 496, 889)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2243)
[0000][PE] mean and std.dev: (555.12, 462.22)
[0000][PE] low and high boundaries for proper pairs: (1, 2920)
[0000][PE] skip orientation FF
[0000][PE] skip orientation RR
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 1203002 reads in 353.565 CPU sec, 26.776 real sec
[0000] Calling mem_process_seqs.., task: 924
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 3117292070, n: 60764
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 26416, 0, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (288, 328, 372)
[0000][PE] low and high boundaries for computing mean and std.dev: (120, 540)
[0000][PE] mean and std.dev: (330.50, 63.37)
[0000][PE] low and high boundaries for proper pairs: (36, 624)
[0000][PE] skip orientation RF as there are not enough pairs
[0000][PE] skip orientation RR as there are not enough pairs
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 60764 reads in 17.799 CPU sec, 1.274 real sec
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] read_chunk: 180000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 18
Processor is running @2400.150120 MHz
Runtime profile:

	Time taken for main_mem function: 38968.99 sec

	IO times (sec) :
	Reading IO time (reads) avg: 1926.08, (1926.08, 1926.08)
	Writing IO time (SAM) avg: 3795.44, (3795.44, 3795.44)
	Reading IO time (Reference Genome) avg: 11.62, (11.62, 11.62)
	Index read time avg: 22.73, (22.73, 22.73)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 38933.13
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 38924.75, (38924.75, 38924.75)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 10297.44, (10297.44, 10297.44)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 28434.74, (28434.74, 28434.74)
		SMEM compute avg: 11273.67, (11294.89, 11243.01)
		SAL compute avg: 5067.49, (5107.09, 5033.62)
				MEM_SA avg: 2569.26, (2586.43, 2554.40)

		BSW time, avg: 7831.42, (7865.36, 7813.83)

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 64
	SIMD_WIDTH16 X: 32
	AVG_SEEDS_PER_READ: 64
